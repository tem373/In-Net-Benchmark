python3 delay_tomography.py 2 1 geometric 0.5 10000  succeeded with stdout:
i_max is 15
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.4939290979936314, 0.25577782563554785, 0.11675188560194447, 0.06361952902426651, 0.030811054040654515, 0.017705783666736107, 0.007087533932216513, 0.0021068341839202715, 0.0016771969028564052, 0.0014706505272586616, 0.0014923930536594498, 0.0013565920069736987, 0.001374461276190595, 0.001360617318192162, 0.0013651827183604787, 0.0013651970666769537]
1 [0.4999511459065872, 0.2556944422561064, 0.11719889436168132, 0.06208551514520322, 0.025217038219221145, 0.020390453701173747, 0.006497703770767224, 0.0009128796434305065, 0.0011293129296982467, 0.0013866586575218861, 0.0014610177405188266, 0.0014901476177608328, 0.001517510621035684, 0.0015295665800115687, 0.0014702072607257134, 0.0012370563282553064]
2 [0.5038960508963966, 0.23615875631100833, 0.1341668927341508, 0.060547109282990653, 0.03384370486740325, 0.014173074519135572, 0.00017366801359269598, 0.005248729629535941, 0.0008094309839884708, 0.0013098758315574265, 0.00146824761808638, 0.0015291498405358853, 0.0015526724829385366, 0.0015655677401041226, 0.0015024585014884583, 0.0012466322435342996]

===========================================================================================
python3 delay_tomography.py 2 1 uniform 0.5 10000  succeeded with stdout:
i_max is 4
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3402712865253363, 0.33113372004940295, 0.32619599327256743, 0.002399000152693329, -2.9541366261613014e-23]
1 [0.31318106904681664, 0.35258413864563765, 0.3162434103338361, 0.017334477661860623, 0.0006569043118489228]
2 [0.31718220645686085, 0.3401693270504406, 0.33474632908134144, 0.007902137411357129, 2.6001033698234272e-23]

===========================================================================================
python3 delay_tomography.py 3 1 geometric 0.5 10000  succeeded with stdout:
i_max is 19
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.523715241082568, 0.2487793190436424, 0.10291780708206455, 0.06365833176240959, 0.028385009093337035, 0.010055898843122359, 0.005794134586381181, 0.0026964109801891996, 0.0011591227036534878, 0.0013733422752231841, 0.0010724067562543913, 0.001139459821996953, 0.0010120402365103153, 0.001073334820656208, 0.0010897727739679253, 0.0010523930894688854, 0.001067190641520778, 0.0010651068144913185, 0.001064798632993232, 0.0010651264486746925]
3 [0.4636151234856047, 0.27600678707558945, 0.13823108812092896, 0.04561234674322601, 0.03911815416507759, 0.014849836904535134, 0.006381228977383536, 0.0029742031927903756, 0.000666920135861282, 0.0009955617851290757, 0.0010786537797263227, 0.0010917435142840284, 0.0010716660140674752, 0.001048398046397309, 0.0010488252628072688, 0.0010763000095289584, 0.0011175428641996533, 0.001158159349707822, 0.0011558700198581323, 0.001002673529375145]
1 [0.509473593965156, 0.22241494138539367, 0.1488739575325795, 0.05829759042331385, 0.011457673703145946, 0.03504350050910926, 4.6428313245709736e-05, 0.0017684261335996574, 0.0019311151411140514, 0.0002948795429163384, 0.0007255343916170469, 0.000961912995161673, 0.0010636197897279272, 0.0011155754775414037, 0.0011219050241616077, 0.0011123007918220997, 0.0010858354754994003, 0.0010126095386418048, 0.0008783291349884237, 0.0007266258835721848]
2 [0.5113795909080592, 0.20548151331304815, 0.14875767429160897, 0.0836339721680647, 0.02064807335497524, -7.266075948809225e-05, 0.018620352171739872, 0.00023627274832350816, 0.0004776963683608574, 0.0006894954467290639, 0.0008276864749335129, 0.0009329611884423795, 0.0009974158014222625, 0.0010400632383059686, 0.0010667540645167332, 0.0010663739396416284, 0.0010414605000880666, 0.0009760843344342576, 0.0008515029794773489, 0.000721899767615352]
6 [0.47953527971261295, 0.25297974641749654, 0.14442859822664658, 0.04238980455658889, 0.03985493298537314, 0.015194575031749355, 0.011580009368542414, 0.0005795781278742488, 0.0009051125885503651, 0.0010315291351324415, 0.0010862195611453496, 0.001085425216311441, 0.001066364498011072, 0.0010499452568011702, 0.0010482250087930555, 0.0010671969543968177, 0.0011045549940375344, 0.0011397377586611476, 0.0011398623012842685, 0.0010014042434375037]
4 [0.4921698786096907, 0.2724108589925482, 0.08994384698300753, 0.08574191147929244, 0.008446538816823584, 0.037755593694241654, -6.190260661908262e-05, 0.002530780484726607, 0.00028365061763332424, 0.0005864278670862227, 0.0008261330853530839, 0.0009544951827003302, 0.0010242030587960934, 0.001053869212786049, 0.0010695803474802161, 0.0010675915671751078, 0.001042031979840254, 0.0009793496198174133, 0.0008580202932208075, 0.0007183545616388524]
5 [0.49522883667001494, 0.2384904909749639, 0.15079533340004497, 0.024444832582581233, 0.07036966288407451, 0.0037711908559554226, -3.360785103932902e-05, 0.004596197607173637, 0.0003186958434923257, 0.00063887811923577, 0.0008986948070310493, 0.001063331064412798, 0.001151822169736761, 0.0011965812375974768, 0.0012110477893816996, 0.0011992881178009896, 0.0011623326981835286, 0.0010854150563299274, 0.0009496425502839909, 0.0007943510830836826]

===========================================================================================
python3 delay_tomography.py 3 1 uniform 0.5 10000  succeeded with stdout:
i_max is 6
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.31428652614808117, 0.362943795584984, 0.3025257172496763, 0.018075154723802802, 0.0005621923322880772, 0.0006762634546564658, 0.0006399803455912623]
3 [0.4446254310862352, 0.19925290569241141, 0.3561216632213534, -1.5869903189096962e-23, 6.769196091364861e-25, 4.2901547975602104e-24, 6.2426179236497875e-24]
1 [0.28342160123750754, 0.3506147255892103, 0.3574526447276859, 0.008511028445596322, 5.874868220498412e-23, 1.0745790692357377e-22, 9.507499180224092e-23]
2 [0.3040836862380114, 0.3504634228100755, 0.29072985394140805, 0.0547230370105051, 4.0742700196786337e-23, 6.700844815066659e-23, 6.094966169582641e-23]
6 [0.3444354481931437, 0.32526871985049305, 0.3302958319563632, 1.8041583542458323e-23, 1.2517275338787152e-23, 2.2255148555895094e-23, 2.3232158073303828e-23]
4 [0.35747547991303313, 0.30503400533392816, 0.3261059654265336, -1.0708358680822728e-22, 0.011384549326505147, 9.186560768503497e-22, 8.758605394413613e-22]
5 [0.3424044137899658, 0.30699670219549435, 0.34733033463617236, 0.0019806928622510666, -6.72822951809197e-05, 0.00048691379830512405, 0.00035326391955850625]

===========================================================================================
python3 delay_tomography.py 4 1 geometric 0.5 10000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.48711330199266256, 0.2612700082382061, 0.11670494128257952, 0.07052209637441514, 0.01968929959368365, 0.023416108310168705, 0.0023926372841202278, 0.0030190431424801257, 0.0011971712467279787, 0.0009815266841501694, 0.0009507637322979006, 0.0009166226291536101, 0.0008845484646399544, 0.0008646831700030067, 0.0008611277340716747, 0.00089713159964853, 0.0008261003696393265, 0.0008863362181784697, 0.0008387491586066205, 0.0008566956652085726, 0.0008541038279826802, 0.0008539722809353781, 0.0008540155818060428, 0.0008540901023015033, 0.0008540386368188001]
7 [0.5051421757147236, 0.23845729120582138, 0.14496428719102833, 0.04167460138789966, 0.03534677798902391, 0.012767787918815016, 0.0011605522827844222, 0.003914572510990298, 0.003958371524407981, 0.0004143206484645325, 0.0006566884922431875, 0.000750902067281284, 0.0007821561418864583, 0.0007693773845583257, 0.0007683425648020365, 0.0007595514354680621, 0.000758670584397555, 0.0007597244639283197, 0.0007659682719402376, 0.000780680477937673, 0.0008034148098209153, 0.0008470410885587854, 0.0008732121089119356, 0.00085557823623482, 0.0007333356848602333]
3 [0.5100860004178106, 0.21724802872398605, 0.16427120307778792, 0.034175991306584205, 0.04703462756733655, 0.012500771660653928, -8.418029671150984e-05, -1.543204919643406e-05, 0.0030369535675363766, 0.00023600955163345256, 0.0004687248431169993, 0.0006647610437145251, 0.000760383391376611, 0.0007893103795376316, 0.0007735060739959075, 0.0007541776342313164, 0.0007536401309975593, 0.0007594781665042501, 0.0007843918602143635, 0.0008061486593922348, 0.0008220954775541416, 0.000818192814058358, 0.0007770062010796742, 0.000687252291417201, 0.0005906081698891496]
1 [0.5077298055974013, 0.24466328257254796, 0.1082223278563068, 0.08993516916551314, -1.7305683675751122e-22, 0.038732469850646836, 8.521684476893668e-23, 0.0004509717224584914, -8.179655552145107e-23, 0.010265973235125486, -2.6079446839015626e-23, -9.349112804674666e-23, -1.434194442823391e-22, -1.6116131774948806e-22, -2.0608352325023802e-22, -2.4611278641425707e-22, -2.5514974848295526e-22, -2.674530322158554e-22, -2.6965473504900694e-22, -2.790123240520576e-22, -2.805460862557555e-22, -2.792573519205834e-22, -2.7939114132880226e-22, -2.792820930290947e-22, -2.7741242314378323e-22]
2 [0.472837597500013, 0.2939450396847209, 0.06931230033376334, 0.09913097487117423, 0.04632464702423919, -0.00013793680485307255, 0.005929819691812998, 0.0001658843853242396, 0.00022420639079781256, 0.00041100897953513874, 0.0005766560374641744, 0.0006609642655773136, 0.000744627046367034, 0.0007976539449095379, 0.0008150398459201239, 0.0008208256131307802, 0.0008391148588534727, 0.0008552235828584209, 0.0008496450874404529, 0.0008434393640337595, 0.00082488867384752, 0.0007755767060500288, 0.0006928201752817477, 0.0006355155700335632, 0.0005615709804253783]
6 [0.5091475515069159, 0.23289388789083518, 0.11958821008497035, 0.08819386437533636, -7.387168481274321e-05, 0.029523639229251893, 7.677431357076555e-06, 0.009172629565181546, 0.00016850889246320451, 0.0003777547990604113, 0.0005235886352361883, 0.0006311150423949731, 0.0006882449811274189, 0.0007106788418029411, 0.0007191830164747276, 0.0007173740955627077, 0.000722721302567944, 0.0007311741941299021, 0.0007523033820132276, 0.0007711393059752906, 0.0007834568088244025, 0.0007755715720912503, 0.0007318809610699561, 0.0006492452123280691, 0.0005678092797270621]
4 [0.46544812248674877, 0.2775262754488965, 0.11231986743489618, 0.0812383099428542, 0.024399735011211746, 0.021497523192756662, 0.005018095855095614, 4.15524496499311e-05, 0.00027639711238370613, 0.0004172361802266743, 0.0005336182587680318, 0.0006515335507995036, 0.0007287909383274229, 0.0007751628098657873, 0.0008099766607380921, 0.0008351851976623132, 0.0008475121385967955, 0.0008663070199597957, 0.0008661262400293971, 0.0008538529924045754, 0.0008360593360556124, 0.0007788745394910912, 0.0007043724449273049, 0.0006334952635137228, 0.0005577549506939226]
5 [0.49447799292177474, 0.215835978402508, 0.17519970333469972, 0.07938262701038538, 7.534274791637975e-22, 0.008642089372348368, 5.306398339684836e-22, 0.026461608958283863, 8.191910308880637e-22, 2.853037052182373e-22, 8.52055495927174e-23, 2.2350691269363904e-23, -3.062049815303979e-22, -4.04510457985e-22, -4.958322433148554e-22, -5.717723981570933e-22, -5.650220942829249e-22, -6.521247281819467e-22, -6.2852106194962275e-22, -6.447570497933125e-22, -6.554870367986628e-22, -6.543029033287335e-22, -6.542872534816208e-22, -6.493727577146741e-22, -6.53077546917622e-22]
14 [0.5126041566930023, 0.23283534956981258, 0.11960667067046207, 0.07177111085919832, 0.011288390681636475, 0.03366896216654876, 0.0002619409481951611, 0.00025678001198183454, 0.004889258233002083, 0.0004274689777412047, 0.0006770162197069433, 0.0007790467719147751, 0.0008146675859800036, 0.0007947819738750629, 0.0007940088332250631, 0.0007759151867939738, 0.0007655946920910261, 0.0007604709557592151, 0.0007615672811997227, 0.0007753175292432833, 0.0007977497029984513, 0.0008430598344918189, 0.0008729291581112167, 0.0008624291541519404, 0.0007506324910216318]
10 [0.5169762605140384, 0.227510732055231, 0.14356845226634624, 0.04724165328439043, 0.01845477684759942, 0.02291301952987001, 0.01147759922058907, 0.00014459282967210405, 0.00035010756403423864, 0.0004950431376142805, 0.0005988891459449394, 0.0006488418988623273, 0.0006895886816225829, 0.0006943565779156027, 0.0006940766508984468, 0.0006949275327051158, 0.0007006737932397407, 0.0007114738967548076, 0.0007352941490453273, 0.0007514669732655117, 0.0007660425226825912, 0.0007555916513657516, 0.0007204532413887267, 0.0006438738819973718, 0.000570199714732997]
8 [0.4769601512444367, 0.285740618669461, 0.06930225288328254, 0.13517559579809213, -0.00010276034367099151, 0.0029151831440788214, 0.017603541556681604, 8.578481685367521e-05, 0.00019057108937725817, 0.00035253632537496804, 0.0005124107778218838, 0.0006112727079487493, 0.0007027516658062098, 0.0007718407764953639, 0.0008061854446470741, 0.000840342687247483, 0.0008581724988097406, 0.0008752679253311426, 0.0008683997244288208, 0.0008602132659961809, 0.0008368533342844254, 0.0007790476880869578, 0.000701180369696976, 0.0006294869001268496, 0.0005601565520265401]
9 [0.4605557953140793, 0.31440772800242256, 0.055939277816392005, 0.10874173778742963, -1.4720659332687278e-05, 0.0474510694652929, 0.00025613314460759686, 0.00019647278691357518, 0.0003798516529443881, 0.000465523426810257, 0.0005681005492005108, 0.0006516580119758913, 0.0007076433424461693, 0.0007478610676245387, 0.0007876182390660679, 0.0008056854302209488, 0.0008228815846247308, 0.000843528749496794, 0.0008435580576215788, 0.0008354273673697197, 0.0008174030127120764, 0.0007656565478268527, 0.000692107002693974, 0.0006303706529190726, 0.000561061453674742]
13 [0.5233283577393796, 0.23162500802750488, 0.12779836273101633, 0.020830105224091622, 0.07549872347578021, -7.346016422937433e-05, 0.007436340454306357, 0.00020835281666526853, 0.00036958826515920277, 0.0007263035055912795, 0.0006686793219090859, 0.0007691419201201343, 0.0008084384338239555, 0.0008137693503247496, 0.000792798549448946, 0.0007911850341386127, 0.0007849761124592324, 0.0007903543760303751, 0.0008118837282823293, 0.0008273836648051043, 0.0008418089729270638, 0.0008315908184287229, 0.0007958509064340979, 0.0007158066030302716, 0.0006363691294428072]
11 [0.47782003922606625, 0.2946870565629545, 0.08198321177259366, 0.07744450436231654, 0.015233886321368184, 0.0405705126393695, -5.7676398994594425e-05, 0.00025704355547897785, 0.00033569680995406987, 0.000440445414647833, 0.0005622694209650055, 0.0006190662657731892, 0.0006920599703626625, 0.0007211007326119016, 0.0007583497424260817, 0.0007791996094550643, 0.0007980933356309917, 0.0008154451403393529, 0.0008205159567187957, 0.0008165955431534509, 0.0007862087610643103, 0.0007508342218578293, 0.0006748297746111656, 0.000610585759186299, 0.0005465470531780029]
12 [0.47418583150026633, 0.2706493033317412, 0.13792714395310599, 0.05365335926644393, 0.033085047582869336, -8.491932041891069e-05, 0.018383815325603625, 0.00010344987698606861, 0.00025263748408923685, 0.0003838205196967008, 0.0004922970827889337, 0.0006080810144359632, 0.0006794614841443112, 0.0007348536813660541, 0.0007810213039006724, 0.0008088624960652189, 0.0008346246082968119, 0.0008518184243416034, 0.0008554762067988618, 0.0008463432429967286, 0.0008145687493497335, 0.0007696811714634809, 0.0006880138291950875, 0.0006173548229136045, 0.0005457624174418632]

===========================================================================================
python3 delay_tomography.py 4 1 uniform 0.5 10000  failed with stdout:
b'i_max is 8\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 1 geometric 0.5 50000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.4954186333340461, 0.25273464184080224, 0.12151411676868283, 0.06210006121670997, 0.029514548630008762, 0.014725966328219247, 0.0067014719614070075, 0.002511739887601212, 0.0014132921719725306, 0.0011379302160907732, 0.0011318273441964107, 0.0010514638400321665, 0.0010476820927709722, 0.0010437676247094076, 0.001031583417362759, 0.0010390523861976632, 0.0010419075369439608, 0.001037198468841637, 0.0010343564015947264, 0.0010352977222350497, 0.0010352991476653111]
1 [0.49685313873362574, 0.2538234000534284, 0.1212412236969155, 0.062732024677501, 0.028087119577190612, 0.01657961171747696, 0.003932827286357667, 0.0025455331266139945, 0.0006693179927391206, 0.00099863846588579, 0.0011015113232780553, 0.0011022506970943223, 0.0010733929140447625, 0.0010474535593509736, 0.0010348602359709438, 0.0010389937934510577, 0.0010656853997133672, 0.0011092584833232574, 0.0011459895921197025, 0.0011238714364064394, 0.000975068857444565]
2 [0.501265114458022, 0.24321344309162207, 0.125075844947496, 0.0639805334589042, 0.028204984741346868, 0.01674459745042433, 0.005608412790385148, 0.0014368219659640674, 0.0007424413742335637, 0.001056860925997862, 0.0011259459833470454, 0.0011164927536702557, 0.001085637669725949, 0.0010593396828045233, 0.001045740896107925, 0.0010488503518209856, 0.0010744477791740973, 0.0011172135816196064, 0.001153783582966528, 0.001133265365565976, 0.0009881880701402305]

===========================================================================================
python3 delay_tomography.py 2 1 uniform 0.5 50000  succeeded with stdout:
i_max is 4
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3398944414456676, 0.33030290632776377, 0.3298026522265687, 1.0908563600980805e-22, 1.0942949833059681e-22]
1 [0.32557831889149713, 0.33361346993497076, 0.3383707133762637, 1.551820066336439e-23, 0.00243749779726837]
2 [0.32458025509255, 0.33495064178063966, 0.334247354643218, 0.0062217484835923416, -7.299593301892828e-24]

===========================================================================================
python3 delay_tomography.py 3 1 geometric 0.5 50000  succeeded with stdout:
i_max is 26
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.5055078897960172, 0.24699544945671284, 0.12008172956959005, 0.06084989716928526, 0.028552254357822448, 0.015503903085149786, 0.004406981689744771, 0.0029958015331135743, 0.0009517695921769007, 0.0009320766452273608, 0.0008018877843182844, 0.0007751563888649612, 0.0007388429120215804, 0.0007516346227153706, 0.0007447961830528633, 0.0007294501618071525, 0.0007373908473249477, 0.0007363227451855452, 0.0007363131055987951, 0.0007363514571178216, 0.0007363323069205618, 0.0007363397174027736, 0.0007363364702373983, 0.0007363379105676678, 0.0007363376046115955, 0.0007363375408897525, 0.0007363375981487203]
3 [0.49588111325786005, 0.2497690843969095, 0.12911733329442876, 0.05498814050672504, 0.03406375452690931, 0.012541055316644976, 0.006424301453015752, 0.0023049342193479975, 0.00048553055678196604, 0.0007303492262135539, 0.0008134600906213382, 0.0008177129530924043, 0.0007939516132819207, 0.0007722023475302678, 0.0007529507047023703, 0.000742712711010925, 0.0007363675239536575, 0.0007336507762964208, 0.0007319684719012838, 0.00073234837669098, 0.000735835531645341, 0.0007483601581906665, 0.0007720379787942454, 0.0008092084739163608, 0.0008426821233853821, 0.000836560291017811, 0.0007455874150009017]
1 [0.4976745113635194, 0.24012855169396116, 0.13424664600704178, 0.07039173353449012, 0.011928357626555787, 0.02825552107441176, 0.0008086929583623957, 0.0037432703495385252, 0.00017840657146424047, 0.0004006799850062248, 0.0005615591671505295, 0.0006639281546669451, 0.0007138423314477539, 0.0007283794862411021, 0.0007172466263437008, 0.0006994547797818313, 0.0006841760129238989, 0.0006771584001413085, 0.00068240890517914, 0.0006977463582270433, 0.0007219155253363608, 0.0007462246806293726, 0.0007607499407405241, 0.0007561329941257124, 0.0007207109381506098, 0.0006468320623852711, 0.0005719246618539247]
2 [0.4970267316583144, 0.24754030628693624, 0.1219597695346293, 0.06601384180796424, 0.036391794048735396, 0.004144601228074987, 0.009512329525494998, 0.004941537148902264, 0.00016514301188838424, 0.00037220426986154674, 0.0005227207470258785, 0.0006226264368343279, 0.0006793312982469953, 0.0007000620637129264, 0.0006975743784336014, 0.00068615551322996, 0.0006740542510918503, 0.0006689112511994936, 0.0006738097958353369, 0.0006890899578176526, 0.0007124758709175986, 0.0007359753709398288, 0.000749346027676543, 0.0007435968618901199, 0.0007071807448575851, 0.0006330321845804936, 0.0005585293751787729]
6 [0.4983195898215767, 0.24250272598817776, 0.12998704380765747, 0.0580877847462442, 0.03587212348452397, 0.010889418693406887, 0.009223729217099335, 0.0004187994690037376, 0.0006582616440931503, 0.0007657369668510488, 0.0007992991658731376, 0.0007897077254298081, 0.0007692150662301502, 0.0007451047651526086, 0.0007285739705539988, 0.0007178500203404846, 0.0007116165931084832, 0.0007079924177806648, 0.0007057062782969515, 0.0007054422627530933, 0.0007088134953077666, 0.0007209752826363653, 0.0007443856355531407, 0.0007814337238337141, 0.0008155911293259769, 0.000812708116543684, 0.0007312644384302423]
4 [0.49131937335499815, 0.26034986140469496, 0.1154939934296734, 0.07174993617040992, 0.01658613893540551, 0.024868961078856427, 0.006282928109214438, 0.00015798058913781056, 0.00038023421612080833, 0.0005252636909496293, 0.0006300861443553323, 0.0006899496297195062, 0.0007151226944171823, 0.0007174146211801065, 0.000703261286961842, 0.0006872798057352377, 0.0006748430384236378, 0.0006703127238144721, 0.0006772331833973977, 0.000694588495144801, 0.0007181402948240339, 0.0007422318646791895, 0.0007557849146456751, 0.0007514182967981605, 0.0007178745162977887, 0.0006496039801544172, 0.0005812607460944194]
5 [0.49449049459283995, 0.25246064215167563, 0.1244813316958118, 0.05176769703747787, 0.04411611305554371, 0.010363595751047016, 0.005253713004987905, 0.004207000296608005, 0.00017831786840522243, 0.00038942125427373535, 0.0005480553656673206, 0.000654163038817383, 0.0007107397667730888, 0.0007291439893905294, 0.0007259370298164677, 0.0007086903352182287, 0.0006929612965674499, 0.0006855195449878256, 0.0006896476269235216, 0.0007059613545043102, 0.0007289303211686486, 0.000752287006857877, 0.0007654209077716014, 0.0007590128090482866, 0.0007222568539780554, 0.0006485890924109992, 0.0005732597503085158]

===========================================================================================
python3 delay_tomography.py 3 1 uniform 0.5 50000  succeeded with stdout:
i_max is 6
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.32763560834475575, 0.3340899566446621, 0.31576158967334006, 0.015420636008333327, -2.3530257415882012e-23, 0.007092209328908726, -2.638637879107332e-23]
3 [0.36786038259389703, 0.285559743637733, 0.3465798737683699, -9.809589814819012e-24, 4.542206432444834e-25, 5.917687797355722e-24, 5.606928907607782e-24]
1 [0.3139801193290068, 0.34690502020279756, 0.3345255776559641, 0.004589282812231515, 1.905762687650388e-23, 1.7728303663125883e-22, 1.0936561030916084e-22]
2 [0.3174484132583296, 0.34610828627498075, 0.32142881838714266, 0.015014482079547059, 1.566521910246716e-23, 1.6010701161154033e-22, 1.0339817387395992e-22]
6 [0.34453082634994203, 0.31770272586090487, 0.3351431761150333, 0.00035536103435875884, 0.0006203051010227423, 0.0006959798351109405, 0.0005647940870642308]
4 [0.3260300934243786, 0.3449565160038328, 0.32682724871745145, 0.0005020771739678067, 0.0016840646803693163, -2.586168023416747e-22, -9.530005023365151e-22]
5 [0.3386815180790818, 0.31714554207895823, 0.34417293984195996, -5.2024095260266815e-23, -8.993567668081506e-23, -7.353609218709869e-23, -5.169164882258623e-23]

===========================================================================================
python3 delay_tomography.py 4 1 geometric 0.5 50000  succeeded with stdout:
i_max is 26
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.4903456253100134, 0.2528852530541101, 0.12750682725676504, 0.06180557011685056, 0.026801964856287358, 0.01510508567938842, 0.00642938424500563, 0.0037280494209087104, 0.0010061936518422324, 0.000922436091646811, 0.0008690665297405863, 0.0007724297681312444, 0.0007787297886617886, 0.0007506513527912639, 0.0007367059187718092, 0.000758524214956663, 0.0007400880284600893, 0.0007532263646424092, 0.000748397568377204, 0.000743919165560469, 0.0007470317312091257, 0.0007463368069714429, 0.0007463906966317562, 0.0007463955298845773, 0.0007463994602269529, 0.0007463941275955787, 0.000746396533556532]
7 [0.49952144208479954, 0.25380373406747714, 0.1191779940584962, 0.0642912375835065, 0.022327256696360154, 0.018229042923944425, 0.006631881161637554, 0.0012415544501523245, 0.0005064796959263012, 0.0007463891149573167, 0.0008146290802318024, 0.0008089718694795834, 0.0007801186499561002, 0.0007585167529857854, 0.0007426807530516576, 0.0007336958757524777, 0.0007277503018205139, 0.0007246498565046068, 0.0007232257359198818, 0.0007228640333294112, 0.0007256722568973388, 0.0007370839895233848, 0.0007620328066593101, 0.0008016339766938794, 0.0008342637547959516, 0.0008234427157941081, 0.0007318338818214621]
3 [0.49676578645221653, 0.24688971431596035, 0.1411165311581366, 0.054531585284523565, 0.027054539622260742, 0.023387917488508377, 0.0035395304570848087, -2.832855647028745e-24, 0.006714395221308981, -2.966807424852127e-24, -7.234225100931418e-24, -1.265135597592477e-23, -1.6040346367734813e-23, -1.8083306615965552e-23, -1.9678211476689715e-23, -2.045300279036187e-23, -2.0908324849445203e-23, -2.1237804550550495e-23, -2.1385599959578118e-23, -2.1483985828090296e-23, -2.147450131529341e-23, -2.1429520679678153e-23, -2.1314552660463542e-23, -2.1092733437029348e-23, -2.076697459906543e-23, -2.0291238578514203e-23, -1.9689297497880007e-23]
1 [0.496110574643181, 0.2534323268222102, 0.10971018844289554, 0.06490024223902263, 0.04793319730697282, 7.609644529755798e-05, 0.014362834359705035, 0.0004088204663872442, 0.000194368585910778, 0.0003282305992565917, 0.0004556654270660093, 0.0005858115026480951, 0.0006679299496642876, 0.0007143423180936525, 0.0007462482109029051, 0.0007642358132480158, 0.0007743548597703066, 0.0007844214924882199, 0.0007966881827623308, 0.0008097139537690408, 0.000813291876678454, 0.0008086834941245388, 0.0007894070331304711, 0.0007419081195055074, 0.0006640984887178227, 0.0005975690663158513, 0.0005252627603618545]
2 [0.49094680863889667, 0.2573776364492151, 0.10876037331677854, 0.08498169489147618, 0.019461488797314387, 0.02007425393974563, 0.0021946900479477937, 0.003154140769143026, 9.617503497920483e-05, 0.0002830863596906442, 0.0004423308084826768, 0.0005753986886265941, 0.0006719995213413694, 0.0007303084757726542, 0.0007633533119509399, 0.0007786385629820706, 0.0007850762340579037, 0.000792649737962237, 0.0008040746095914608, 0.0008150598010673185, 0.000818844648597782, 0.0008147894374873968, 0.0007966519349864315, 0.0007500066508353074, 0.0006737488926034051, 0.0006085241276623521, 0.0005350199287241847]
6 [0.49496151558924795, 0.24899486835311496, 0.12331094311426449, 0.07340638992563792, 0.01915345375623001, 0.014361753236788745, 0.011098299963440156, 0.002001239085597133, 0.00018888236827008456, 0.0003982670615087838, 0.0005559840278755897, 0.0006613480016830615, 0.0007041587066522537, 0.0007153537927108043, 0.0007071904051890811, 0.0006923654830612632, 0.0006785104867223662, 0.0006735084078890897, 0.0006791037312092775, 0.0006946545974329977, 0.0007174592665270079, 0.000739171408764691, 0.0007543011747330555, 0.0007477340209434044, 0.0007128660387621002, 0.0006374627887752496, 0.0005656657973007231]
4 [0.48412388548414886, 0.26969347763617657, 0.11795375435648116, 0.06946275945899939, 0.009770663073189311, 0.031325728405333174, 0.004496673956327267, 2.0194458643067742e-05, 0.0002871902546222788, 0.00039465225729493265, 0.0005056281574110193, 0.0006029622362643037, 0.0006647834065347476, 0.0007049158407272564, 0.0007264251999674421, 0.0007423810662908842, 0.0007524629133088301, 0.0007708244008863553, 0.0007792602269478593, 0.0007948500061460138, 0.0008004362178545388, 0.00079768258504505, 0.0007789346597291475, 0.0007335839775984028, 0.0006641056183464748, 0.0006004215032326346, 0.0005349328036619114]
5 [0.48762333391255347, 0.2605453201033806, 0.13685405471920067, 0.04915412175490859, 0.028440597804896873, 0.006974071015650703, 0.016566419564068423, 0.0009251755091714537, 0.00014934378893147513, 0.0002833604498726996, 0.00043742913979138856, 0.0005634117550877933, 0.0006520290935808615, 0.0007075770527568175, 0.0007383388458843714, 0.0007587051986455123, 0.0007720923890233049, 0.0007872535221325327, 0.0007978310942078041, 0.0008111663997500182, 0.0008159152112543647, 0.0008112303626427592, 0.0007898406650106832, 0.0007415427633326395, 0.0006677236249892917, 0.0005987158535878925, 0.0005278087743243035]
14 [0.5135850513443693, 0.2300557139202448, 0.12890940203977996, 0.060981067108996125, 0.025329931917282257, 0.023210228607814597, 0.00014755036423159322, 0.001457889056315814, 0.0018713813429416827, 0.0005334456899530049, 0.0008038920280756257, 0.0008412317934077938, 0.0008163869870845854, 0.0007885887434897229, 0.0007719997769900981, 0.0007603410463092809, 0.0007543237179535875, 0.0007484474071000549, 0.0007466588933883188, 0.0007470472946914533, 0.0007495674402064406, 0.0007616459179916853, 0.0007866776302934565, 0.0008272432978251899, 0.0008621219715472567, 0.0008530569438160673, 0.0007562474854711923]
10 [0.4864425169192298, 0.26115937174775694, 0.12025822900055541, 0.06700944588549512, 0.023773100033429542, 0.024782081673386868, -2.9909627473444075e-05, 5.878272422851706e-06, 0.00434060552992535, 0.00019438437270929016, 0.00041246855941925136, 0.0005759809571493078, 0.0006766928855316774, 0.0007196236873302489, 0.0007311477971849549, 0.0007164784655452562, 0.0007001896660893078, 0.000691247869959141, 0.0006947767002801563, 0.0007086379417444176, 0.0007326867739059544, 0.0007561231880223451, 0.000770234099445495, 0.0007632727520717189, 0.0007231127903567017, 0.0006443038574734684, 0.0005627592697847568]
8 [0.49077967653559457, 0.2721612975911328, 0.09688802859254736, 0.08402574497884086, 0.014458587147358426, 0.016762159730352697, 0.008850755228437503, 0.0035149768750792143, 8.043540361271692e-05, 0.0002620685802905153, 0.00040212939264131506, 0.0005193703785404682, 0.0006212005928196364, 0.0006830106523695175, 0.0007251982189969552, 0.0007477199873752278, 0.000766815837386746, 0.0007790341588689236, 0.0007904376842086881, 0.0008043510515633442, 0.0008076231244041857, 0.0007994928877108725, 0.000779842741768752, 0.0007305359472679725, 0.0006567088947113399, 0.0005895299508731006, 0.0005196901859960963]
9 [0.49816985643270023, 0.25720489831858695, 0.09959926835524378, 0.09368968219974755, -2.4012865963742784e-05, 0.0321604567806777, 0.005743149812482186, 2.2777455486494932e-05, 0.00028038570082018825, 0.00039965896407530163, 0.0005157608895938735, 0.000613609841777216, 0.0006872490358859555, 0.0007217022139493778, 0.0007488127020944874, 0.0007666410172495375, 0.0007768156677073483, 0.0007875029055104553, 0.0008007041789929132, 0.0008135531505869278, 0.000818133248837984, 0.00081093316535329, 0.0007929525230525996, 0.000745307382904645, 0.0006744054035498273, 0.000610362128634378, 0.0005454135575841616]
13 [0.5087809913287372, 0.2333741795874147, 0.13980070946818973, 0.046257058033657594, 0.03945700918580817, -6.429750934525092e-05, 0.019685779393134734, 0.0001791020510310259, 0.000336557964088672, 0.0004804277822331613, 0.0005842146078320863, 0.0006366704923522436, 0.0006669334222598487, 0.0006743031286734978, 0.0006661089256012251, 0.0006557780070299024, 0.0006479286251066183, 0.0006452188305626125, 0.0006507195670051248, 0.0006675945116540892, 0.0006910203157277606, 0.0007122830171872399, 0.000726555102346196, 0.000721057601095024, 0.0006868620348040664, 0.0006198974929568003, 0.0005547815227288425]
11 [0.4795477317024444, 0.2762978126032143, 0.11083038922933452, 0.06209804734081154, 0.01932335320546947, 0.03803593283238841, -4.093889132821926e-05, 0.0002513346795024414, 0.0003633107623747976, 0.00046845654282721305, 0.0005813602886686592, 0.0006483974683574468, 0.0007028783607198532, 0.00072270726404927, 0.0007417678317385369, 0.0007537870550881452, 0.0007617986887224273, 0.0007736232178129082, 0.0007881814620624207, 0.000800838070061869, 0.0008058842812042026, 0.000805365365557263, 0.0007859590302082886, 0.0007468021344277877, 0.000676684324040076, 0.0006189121481918667, 0.000561269602270079]
12 [0.4808297945026045, 0.2545049531075443, 0.13906564157623014, 0.06227203384829198, 0.03425863361630467, 0.0009895723861792116, 0.015022637287385003, 5.948457636872236e-06, 0.0002399494604120312, 0.00036049242464219973, 0.00047757977549610744, 0.0005851874768519633, 0.0006554237986450706, 0.0007047819295104745, 0.0007294315789169725, 0.0007507959499736844, 0.0007623489353033265, 0.0007736620641994347, 0.0007878580586897614, 0.0007995206609056129, 0.000802341258138487, 0.0008002725350826556, 0.0007776587022123215, 0.0007358592686685509, 0.0006615183252659093, 0.0005994366034825032, 0.0005349281879978817]

===========================================================================================
python3 delay_tomography.py 4 1 uniform 0.5 50000  failed with stdout:
b'i_max is 8\n1.9164816238489133\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 2 1 geometric 0.5 100000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.5009203662582167, 0.24718818410579438, 0.12081608935388151, 0.062184317404497154, 0.029866900299877416, 0.015819865780853593, 0.0061000423917186315, 0.002260579268931807, 0.001373905772773877, 0.0011807721458100308, 0.0011139782613460028, 0.0010514200217034359, 0.001049675579759068, 0.00105994877302676, 0.001028708631990009, 0.0010401806327456334, 0.0010391368237461158, 0.0010391719546767285, 0.0010353729257715594, 0.0010363409558958626, 0.0010363268679641614]
1 [0.495659827895802, 0.25453431317180225, 0.12173422749496782, 0.06293156470783784, 0.027064492069890787, 0.016068455681863606, 0.005807539524969, 0.001979688907843918, 0.0006848670312624993, 0.001009649328867697, 0.0011019267532701416, 0.0011013312283328148, 0.0010725979317013814, 0.0010481601039638079, 0.0010344945380697645, 0.0010387365185371322, 0.0010642597613346983, 0.0011073922377173408, 0.001143419914640367, 0.0011228192727885092, 0.0009793733773120772]
2 [0.49708174890527373, 0.24991631127237451, 0.12352447821182533, 0.06170334693289869, 0.03015070550184365, 0.0154150904050745, 0.005527507458291499, 0.0025365083998840363, 0.0006530180794863741, 0.0009807056843705046, 0.001090073573842095, 0.0010994274264590756, 0.0010746673856966028, 0.0010508114643191621, 0.0010367377237340335, 0.0010400309842436633, 0.0010645374344455472, 0.0011070155034832861, 0.0011420765796014316, 0.0011199974356563519, 0.0009749641457384364]

===========================================================================================
python3 delay_tomography.py 2 1 uniform 0.5 100000  succeeded with stdout:
i_max is 4
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3387634254182398, 0.33161118924284877, 0.3296253853389114, 3.443300201781034e-23, 3.486668202000409e-23]
1 [0.3296690150655861, 0.33086423989091596, 0.3366838835853716, 0.0005237865595029093, 0.0010212865702311958]
2 [0.32626745133040946, 0.3345807364777866, 0.3355281590084534, 0.003623653183350542, 1.539851490859509e-23]

===========================================================================================
python3 delay_tomography.py 3 1 geometric 0.5 100000  succeeded with stdout:
i_max is 26
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.5007249373490386, 0.24830874727373053, 0.12424245797429885, 0.057837616557633, 0.030824802622205532, 0.013957564339124833, 0.005875654093330506, 0.0031293338621449468, 0.0009379189998458312, 0.0009170473949881096, 0.0008190501971563577, 0.0007902374398227555, 0.0007387006104693001, 0.0007506550237511424, 0.0007389182073807361, 0.0007335047703517842, 0.0007401676866500292, 0.0007361098968052611, 0.0007350095135205919, 0.0007382351781214869, 0.0007347243841403415, 0.0007359186416436255, 0.0007357729824688916, 0.0007357757526120642, 0.0007357790081660728, 0.0007357770098712097, 0.0007357779491621069]
3 [0.4981545890808681, 0.248318280309191, 0.12685562417454088, 0.059944242865900395, 0.028957265295454577, 0.013299131331771283, 0.008226651727776334, 0.0013299274736531786, 0.0005281939677862332, 0.0007527860764541176, 0.0008200048237765569, 0.0008119072695028304, 0.0007878894847589974, 0.0007648377792139, 0.0007478320919149778, 0.0007382269974134516, 0.0007319655899322649, 0.0007292364292666377, 0.0007277815428356142, 0.0007282837830281709, 0.0007316583535460328, 0.0007435130918228711, 0.0007679959430456725, 0.0008046604038611362, 0.0008395961846236914, 0.0008318111628678129, 0.0007418938729196639]
1 [0.4987794580727239, 0.2434728235299068, 0.1274133873172961, 0.0691194490558418, 0.019449349968715893, 0.023191036131187184, 0.003008739630562325, 0.0027235229892832733, 0.0001817224331360442, 0.00040729746652901435, 0.0005696030554638448, 0.0006716275518921475, 0.0007184363205333883, 0.0007278493923711701, 0.0007159714216771949, 0.0006974449980426496, 0.0006820796411472254, 0.0006757769121357718, 0.0006816324574052307, 0.0006977794076123026, 0.0007216429865196356, 0.0007458051422907649, 0.0007605652396883538, 0.0007559111889278461, 0.0007203416844706185, 0.0006465004119830613, 0.0005721585835039155]
2 [0.49601941781191566, 0.25036014732054923, 0.12234142552732294, 0.06397666047350153, 0.030419519071941896, 0.012929877349673775, 0.007121640192940242, 0.004327475801263909, 0.00016693999043498084, 0.00037577712494807347, 0.000528233776498498, 0.0006295190766297653, 0.0006844656367853391, 0.0007031548767530147, 0.0006997221307815061, 0.0006870963493039589, 0.0006739587896882772, 0.0006685403797266731, 0.0006737503258746062, 0.0006894955959151697, 0.0007127738706401016, 0.0007363226980971674, 0.000750197557344238, 0.0007444932737085852, 0.0007079157869143659, 0.0006335794465122638, 0.0005595247120231113]
6 [0.49597909239954086, 0.25141689774171316, 0.12353179799465784, 0.05856662077330152, 0.034883206012652546, 0.012088003368241725, 0.007664561289552783, 0.00044728625981001587, 0.0007064844163797462, 0.0008216274546575975, 0.0008468901820509406, 0.0008331617471048663, 0.0008064104460651242, 0.0007812271125315893, 0.000763690450426882, 0.0007520653547289358, 0.0007449660878741126, 0.0007407839267135504, 0.0007383122646103038, 0.000737972403949186, 0.0007413634381405992, 0.0007532737296290593, 0.0007779267769059727, 0.0008150073636971652, 0.0008504531176632498, 0.0008445918796037338, 0.0007605220709792835]
4 [0.49301339931994725, 0.2595949966785379, 0.11439526946539307, 0.06511165089641804, 0.028588586837590524, 0.018110197712365494, 0.006595470017584141, 0.0016758749800178576, 0.00020157112457724042, 0.0004192748061374465, 0.0005849079407336047, 0.0006802674131105492, 0.0007228910330991597, 0.000728524440216612, 0.0007149960349984786, 0.0006970334600175643, 0.0006821365758346227, 0.0006771401491316965, 0.0006831450572869096, 0.0006998989284145561, 0.0007230766337608615, 0.0007468910224231583, 0.0007603755226969799, 0.0007554648384017417, 0.0007207147233355639, 0.0006474230685739995, 0.0005740332372260563]
5 [0.497632805724947, 0.2510469401459394, 0.12404800940956093, 0.05330302048217412, 0.03637332551424288, 0.017543999486621262, 0.0020959696417515786, 0.005420821743597499, 0.00016566955057505713, 0.0003753466106530676, 0.0005275333578099997, 0.0006297455537771775, 0.0006860515249929505, 0.0007063286657513679, 0.0007040772313490944, 0.0006907669271581029, 0.0006773529922285649, 0.0006713227005234678, 0.0006762523535679342, 0.0006921874997951518, 0.0007150564519467643, 0.000738338559803948, 0.000751132129502847, 0.0007449091249991753, 0.0007086851133731994, 0.0006342067126015709, 0.0005604498323825769]

===========================================================================================
python3 delay_tomography.py 3 1 uniform 0.5 100000  succeeded with stdout:
i_max is 6
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.33573715000650467, 0.32976994776549345, 0.3269920901810764, 0.0008842026515919424, 6.792977642837024e-24, 0.006616609395333476, 8.019607542768675e-24]
3 [0.3400844137249541, 0.3144918241288648, 0.3424776275132903, 0.00040960679434504083, 0.0006999716655620267, 0.0007780640137046373, 0.0006241133682287495]
1 [0.3270555909130312, 0.3455980195857785, 0.32002330636859166, 0.007323083132598609, 1.727581865943467e-23, 3.022549025108814e-22, 1.8590322562881743e-22]
2 [0.3273975618442736, 0.3424167797732672, 0.3233496358562889, 0.006836022526170408, 1.632130499370437e-23, 3.219321664731793e-22, 2.050026619742162e-22]
6 [0.3319150543463456, 0.33504162646685676, 0.3298110178475858, -1.6491486339614425e-24, -4.6076405508863736e-24, 1.829400935038292e-24, 0.0032323013392117697]
4 [0.3225130296211353, 0.34626812699277965, 0.3261026630187301, 0.0033176638474224757, 0.0017985165199325603, -2.2118506522296074e-22, -1.0130847283682358e-21]
5 [0.33269772621169424, 0.32464700904618915, 0.3417685347657884, 0.000886729976328161, 9.904671654253615e-23, 9.483704698312504e-22, 6.120718324477293e-22]

===========================================================================================
python3 delay_tomography.py 4 1 geometric 0.5 100000  succeeded with stdout:
i_max is 26
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.500574640572979, 0.24569931803624318, 0.12574545082527044, 0.05927309506323919, 0.028879018111132825, 0.014010721015615533, 0.006977537679188166, 0.0038687907985152314, 0.0009266917915647368, 0.0009052082703963711, 0.0008325678043547897, 0.0007513634040395964, 0.0007517458007690382, 0.0007299280568973084, 0.0007347652810515968, 0.0007333707310123053, 0.0007324274438324856, 0.0007307859736316958, 0.0007321672632193629, 0.000729043557949835, 0.0007307957034331677, 0.000730368559843396, 0.00073043204301177, 0.0007304223000179019, 0.0007304261924347504, 0.0007304238747495403, 0.0007304250738682234]
7 [0.49929809298228134, 0.25010309078148696, 0.12033609042575358, 0.062210150100362245, 0.026636336426195943, 0.016319881123480477, 0.0073430844734863575, 0.003978137466785036, 0.00039585354757799656, 0.0006134606280316314, 0.0007132353474457032, 0.0007390857455444232, 0.0007322143886333699, 0.0007180999365550696, 0.0007065224853734371, 0.0006991970966457948, 0.0006936094581973281, 0.0006905462647185006, 0.0006889535659958127, 0.0006890640851412647, 0.0006919221994684385, 0.0007029173467708697, 0.0007273281963044065, 0.0007641742673450949, 0.0007962031127076118, 0.0007848919030197153, 0.0006954680471703708]
3 [0.4915727945036719, 0.2546406058219948, 0.1324542069515301, 0.0582019196669675, 0.030489432241595844, 0.022541105380183796, 0.0022562573509933284, 2.7056306936510975e-24, 0.007843678083062718, -1.261542552848351e-24, -1.0799723879486247e-24, -3.328483329895125e-24, -4.0508561586625466e-24, -3.9945234511981785e-24, -4.675765029708028e-24, -4.960453973979431e-24, -5.031186704793215e-24, -5.217612531045596e-24, -5.27399348363285e-24, -5.255510029852228e-24, -5.252325334244383e-24, -5.167065617964425e-24, -5.031382452653495e-24, -4.845510038518774e-24, -4.5335899688221006e-24, -4.102873402544903e-24, -3.5483694782811345e-24]
1 [0.49994815426977757, 0.2519292104016043, 0.11497001073128274, 0.05992175683437255, 0.03840092128204787, 0.009271009169865478, 0.012193401872430797, 0.00031499035089478455, 0.00016895382521097763, 0.0003246122020776233, 0.00047105151475203294, 0.0005967652962421535, 0.0006694994970622495, 0.0007119583808290165, 0.0007404539527243769, 0.0007586062536829318, 0.0007703636082763252, 0.0007842601601673311, 0.0007957049090661287, 0.0008076814848083074, 0.0008118326734405408, 0.0008054063092513205, 0.0007847447414970856, 0.0007403162848094414, 0.0006658115775894725, 0.0006011901101959132, 0.0005323950940519131]
2 [0.4918279934487255, 0.25847874624260336, 0.1173894984738393, 0.07239240063411992, 0.02028562827723522, 0.020486213054185777, 0.0055533572119798435, 3.5328140447418165e-05, 0.00027852843880185, 0.00040711767717923724, 0.0005253234761701888, 0.0006290033556672647, 0.0006977702886174996, 0.0007357637933894238, 0.0007588666894719364, 0.0007731043983605229, 0.0007811586648106853, 0.0007923388187543158, 0.0008029313714552077, 0.0008149035258966894, 0.0008195239850380079, 0.0008140729020261096, 0.0007948047317308469, 0.0007514854591064355, 0.0006785924053218902, 0.000615957087511023, 0.000549056697063346]
6 [0.48720247553689455, 0.2607935657314875, 0.12072775174768785, 0.07092985875468583, 0.02067738526781062, 0.009416362173733282, 0.01704961674331347, 0.00014659273701406894, 0.00037189603330524493, 0.000510570741840443, 0.0006123193004242145, 0.0006733686907271364, 0.0006992233885507214, 0.0007048918196490897, 0.0006983386687013564, 0.000684784580806948, 0.0006735381206217196, 0.0006706300487086773, 0.0006768596326068874, 0.0006926646768611535, 0.0007149362885016601, 0.0007368340639410575, 0.0007514113877689168, 0.0007464741489455306, 0.0007134642795879119, 0.0006439382065375578, 0.0005761698291307965]
4 [0.49041409682061227, 0.2703323477212851, 0.10433601960919778, 0.07059736507247155, 0.018833782712248046, 0.02817588777551005, 0.004005172399172413, 3.0996875976684865e-05, 0.0002908395532135917, 0.0004000097779241148, 0.000515943178041636, 0.0006128848127648428, 0.0006731735488218434, 0.000716774794869717, 0.0007346039168134406, 0.0007504318468926298, 0.0007606958659750853, 0.0007746271459656799, 0.0007858655890163511, 0.0007984454975068747, 0.0008029397110974575, 0.0008016105399807377, 0.0007805476483089603, 0.0007385022749929981, 0.0006686093534446338, 0.0006052801453357572, 0.0005406510028253504]
5 [0.49110395297467213, 0.2551821866962818, 0.13462121004877903, 0.053965777709469656, 0.025951362827765848, 0.012510026310366771, 0.013023480492221927, 0.0003566188107720623, 0.00016941657983422749, 0.0003260711291844274, 0.00048789675329497304, 0.000607462745468207, 0.0006798889379869609, 0.0007277662678770724, 0.0007516211155782046, 0.0007722797805471554, 0.0007849649371691492, 0.0007984479654535121, 0.0008109007349948685, 0.0008224018802241874, 0.0008249794301425572, 0.0008217483192094769, 0.0007981123976030826, 0.000753159428756622, 0.0006791362939988085, 0.0006109762360705416, 0.0005405045314058662]
14 [0.5002089528082183, 0.24505871959951336, 0.12550123443190003, 0.06253797612148038, 0.027549867922572104, 0.01870822522682218, 0.0020588406457412527, 0.0023384107870856987, 0.0015294002268344065, 0.0005772403780520702, 0.0007874810526843091, 0.0008365406392930834, 0.0008179153598652742, 0.000792238939252449, 0.0007726723731388425, 0.000760819145130265, 0.0007539238968261115, 0.0007485177232539391, 0.000746507288622327, 0.0007472571196562574, 0.0007501448964782615, 0.0007616861032840917, 0.0007868339163647854, 0.000825262673307702, 0.0008593941406719243, 0.0008478988098679556, 0.0007497361565506848]
10 [0.49481611243754725, 0.2503138196767294, 0.12546945780571245, 0.05759818054961318, 0.03589676771725188, 0.018881867175203425, -1.0570615093456382e-05, 0.0026300949272524358, 0.001872785513494504, 0.00022813565875589635, 0.0004501573543668638, 0.000628670368441518, 0.000722624939397603, 0.0007497432072014602, 0.0007423561056852847, 0.000719812730842131, 0.0007002155275188417, 0.0006920824683846454, 0.0006971197709893262, 0.0007125393919187414, 0.0007358241055998383, 0.0007596483467634422, 0.0007742483780957307, 0.0007682153760295626, 0.0007302186724726606, 0.0006525875609065929, 0.0005720774076955319]
8 [0.4907780813892796, 0.2681801095179228, 0.10584088971147734, 0.07559535487109878, 0.016551520858526552, 0.023043895953956946, 0.0028949204694435895, 0.004400667798787316, 8.089781408096716e-05, 0.00026219718402714615, 0.00040590037038361077, 0.0005324315170387218, 0.0006329538982340508, 0.000698052181578687, 0.0007404545160248697, 0.0007601907375270214, 0.0007771129473585325, 0.0007883746741779044, 0.0007979491919172277, 0.0008098948743248757, 0.0008145480591861628, 0.0008058307392664138, 0.0007845480403975751, 0.0007387611135045193, 0.0006629056558175912, 0.0005961614638396277, 0.0005261643933302744]
9 [0.4938326378207539, 0.2590862201392759, 0.11143728666071397, 0.07230975214844004, 0.02334052577310894, 0.01730435803503135, 0.009132583187975902, 0.00019250656126790135, 0.00020723483113349838, 0.00036232100690230786, 0.000502262756270525, 0.0006143494380500038, 0.0006883075185619531, 0.0007279564744657139, 0.000754374041342774, 0.000770360845927142, 0.0007816859544347678, 0.0007940343163369123, 0.0008049848283433381, 0.000817165065905258, 0.0008232703347764655, 0.0008150825450522298, 0.0007949448095105565, 0.0007506866849267083, 0.0006767752036059663, 0.000612104612765426, 0.0005449717020421937]
13 [0.5028265944346834, 0.2385916072151345, 0.1370362971690948, 0.051285160358597, 0.039013622745918256, 0.0015397966445297433, 0.016729985864473572, 0.00014522974609710259, 0.00035890095212810606, 0.0004970529468627059, 0.0006020520252111934, 0.0006587198709233356, 0.0006886050785781831, 0.0006928721459946324, 0.0006852570269241932, 0.000672686365146138, 0.0006631856057502055, 0.0006593432116844581, 0.0006650615683749443, 0.0006813779936735811, 0.0007044037199363498, 0.0007268934994254505, 0.0007409671550215064, 0.0007357885951716457, 0.0007020068540140227, 0.0006336423857774287, 0.0005666939191703673]
11 [0.4841432672722642, 0.26996555917336995, 0.11822751983004344, 0.051362671322777914, 0.03182875840604091, 0.02335157183177441, 0.007901029905000533, 1.353700082255203e-05, 0.0002712865631338762, 0.0003843484030268102, 0.0005008180790179676, 0.0005986916907778475, 0.0006669760122088552, 0.0007107553594719887, 0.0007322016785103278, 0.0007498691483862466, 0.0007645605944798083, 0.0007733092869623588, 0.0007902828163086229, 0.0008010786232704317, 0.0008066107750261283, 0.0008039062120098509, 0.0007814362173443152, 0.0007404753480080617, 0.0006665195315443648, 0.0006049052416717967, 0.0005406769124333264]
12 [0.48047806979745605, 0.2595973545155288, 0.12840032047239183, 0.07816902754170203, 0.0163165743445573, 0.009023300596304962, 0.01486990868843878, 3.4629374553458287e-06, 0.00024977170748703616, 0.0003618716060391293, 0.00048196878853203783, 0.0005864940011526236, 0.0006588068406180007, 0.0007077722232579154, 0.0007335619387120549, 0.0007538980773530417, 0.0007687230471432507, 0.0007789606841254734, 0.0007951628686853983, 0.0008055843273878268, 0.0008104410674334471, 0.0008064265582819684, 0.0007830200008543685, 0.0007406873240377772, 0.0006652751884069065, 0.0006024715999805202, 0.0005364755881154489]

===========================================================================================
python3 delay_tomography.py 4 1 uniform 0.5 100000  failed with stdout:
b'i_max is 8\n1.537413729701145\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 2 1 geometric 0.5 500000  succeeded with stdout:
i_max is 22
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.4976097549649656, 0.24999800192950655, 0.12316992106100301, 0.06056132848747434, 0.029846383644132893, 0.014714663605359482, 0.006596082881354775, 0.002666282138551819, 0.0011737725447720563, 0.0010485025721693093, 0.0009763327764933858, 0.0009458452028534692, 0.0009247766698226669, 0.0009238939037502121, 0.000911355855401424, 0.0009120910280801006, 0.0009120889252664597, 0.0009119017751693053, 0.0009101110302583334, 0.0009105792406802741, 0.0009105793771202596, 0.0009105797788485243, 0.0009105797478697902]
1 [0.49952471884520583, 0.2481927909825468, 0.12230884473376791, 0.06185852715139671, 0.03002051121625268, 0.01479372480647197, 0.006170168402509245, 0.0026900423342256768, 0.0005649605727738909, 0.0008675975565412528, 0.0009752415602990131, 0.0009841610470089138, 0.0009610365225063305, 0.000936155972648064, 0.0009179424151148764, 0.0009079599378107091, 0.000906778308104439, 0.0009178866457581548, 0.0009454471472716797, 0.0009879453728735953, 0.0010240246216157523, 0.001006412222305831, 0.0008813931996572302]
2 [0.4988792724203696, 0.24871821804399769, 0.1237880749802791, 0.060409119882143404, 0.03021259863085502, 0.014341703803258008, 0.0065764589222798734, 0.002628180623453102, 0.000563692193338874, 0.0008684157616787394, 0.0009753896214900861, 0.0009840330047925921, 0.0009613886812065768, 0.0009371196379303276, 0.0009191484819473274, 0.0009091736491199995, 0.000907715118722204, 0.0009185698228950524, 0.0009459561327171914, 0.000988347199666954, 0.0010243951608081459, 0.0010067955043574326, 0.0008818090698610016]

===========================================================================================
python3 delay_tomography.py 2 1 uniform 0.5 500000  succeeded with stdout:
i_max is 4
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3319948687115287, 0.3337441761986557, 0.33166721549635436, 0.0010917710648403133, 0.001026335783614351]
1 [0.3342977423094633, 0.33211305924664586, 0.3335891984438909, 1.215866803315143e-24, 2.1371314572441965e-23]
2 [0.3335067370036622, 0.33223588026251943, 0.3342573827338184, 2.095072896278824e-24, -3.832846984285444e-24]

===========================================================================================
python3 delay_tomography.py 3 1 geometric 0.5 500000  succeeded with stdout:
i_max is 29
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.5001440364343497, 0.24685767715708754, 0.12395221332281538, 0.061417093585681995, 0.0292158190690744, 0.014572071169069363, 0.006086295099635384, 0.0028752416107503346, 0.0008446580888428072, 0.0008004496771878481, 0.000698832347469326, 0.0006675255236120769, 0.0006433340601476773, 0.0006390984624437903, 0.0006337312967838441, 0.0006314291582828731, 0.0006305575840843985, 0.000630703965410978, 0.0006295508184395443, 0.0006301277629637051, 0.0006295822411912877, 0.0006297938530587724, 0.0006297663998159374, 0.0006297674113280606, 0.0006297675776154991, 0.0006297674732186405, 0.0006297674915020327, 0.0006297675015277527, 0.0006297674948083525, 0.0006297674961146353]
3 [0.500414040771626, 0.2465902835636506, 0.12356729468624143, 0.06123691572803285, 0.031212708798416023, 0.013309427165129829, 0.006879290582074668, 0.0019468518701924822, 0.00041945763880031915, 0.0006368196259636887, 0.0007131956711103624, 0.0007163368133899406, 0.0006934004041317093, 0.0006705129382999157, 0.0006529757357821946, 0.0006426618126847755, 0.0006363169163923434, 0.0006335569191075565, 0.0006321602577617936, 0.0006313410590489869, 0.0006306604776181884, 0.000630140464340262, 0.0006308099443922402, 0.0006342744106831097, 0.0006451759518534617, 0.0006676575436732093, 0.0007016439999301037, 0.0007318098710606113, 0.0007263669835739253, 0.0006519392893644801]
1 [0.4956964758152844, 0.24672326743187062, 0.12891507843517142, 0.06338636934321448, 0.026526879496226455, 0.016496832094726594, 0.007044927887400234, 0.0023471905280618073, 0.00015980351971682315, 0.00034710419504763564, 0.0004845966463709694, 0.0005744553414008592, 0.0006195414011885073, 0.000632579346327871, 0.0006262585931191196, 0.0006108638382716334, 0.0005941235899057104, 0.0005798134950882395, 0.0005706087507044511, 0.0005673245790521473, 0.0005716392851658714, 0.0005835611994882146, 0.0006026636704566305, 0.0006259036206291914, 0.0006481270237335905, 0.0006614491422318662, 0.0006573611335301448, 0.0006280194293726085, 0.000566638378602438, 0.0005091622450645338]
2 [0.49289583207117804, 0.25381458543966756, 0.12348551065817635, 0.06001431974800453, 0.03384627726349997, 0.011628507627846035, 0.009719056091675175, 0.0016027081308447942, 0.00016493470423831593, 0.00036302481896114866, 0.0005036625179390107, 0.000590297613696154, 0.0006305812511933249, 0.0006386751846525823, 0.0006291963090193928, 0.000612952289019583, 0.0005963159898045181, 0.0005825259912012401, 0.0005736345752028572, 0.0005706275105907216, 0.0005749648143164488, 0.000586925443168159, 0.0006059944201586454, 0.0006292425378182604, 0.0006515032240835632, 0.0006649883945454833, 0.0006612012121941685, 0.0006321990118547474, 0.0005711053822088213, 0.000513604597525661]
6 [0.4953835987849272, 0.25188152834599586, 0.12248059069158126, 0.0605337249046074, 0.031760879639599844, 0.014873596101227087, 0.005082554189017898, 0.003399385753395913, 0.00038774623217955993, 0.0005990729915606868, 0.0006857931097659494, 0.0007001533207736353, 0.0006841433220655946, 0.0006642403335697488, 0.0006478759921624676, 0.0006379056441440775, 0.0006313419260143259, 0.0006280463136987884, 0.0006260770728504436, 0.0006248804139239662, 0.0006240464887212598, 0.0006235280135677024, 0.0006242367837435208, 0.0006277847350970565, 0.0006387333962713636, 0.0006611965101963481, 0.0006949985238724149, 0.000724649492116019, 0.0007183819033870788, 0.0006434187369463483]
4 [0.4975814545336549, 0.2507839547796752, 0.12133579260152405, 0.06317013592682508, 0.030662542985583078, 0.013403055603744192, 0.00913724857675321, 0.0006845141401331447, 0.00023161273035201928, 0.00040116281677342975, 0.0005453377664260636, 0.0006164426692091838, 0.0006405481880308347, 0.0006416704095047252, 0.0006307989338497023, 0.0006150574726580991, 0.0005993454532227755, 0.0005857682523691355, 0.000576841954746665, 0.0005738788418596559, 0.0005778167074802569, 0.0005900042383580224, 0.0006085709409395691, 0.0006319539815429894, 0.0006537988348584807, 0.0006672077021849878, 0.0006638331873203401, 0.0006361165918460352, 0.0005755076994290526, 0.000520181642704636]
5 [0.4987590456255561, 0.24718462077695996, 0.12666402087264367, 0.05958431663450107, 0.027093223646345, 0.019019187355630032, 0.006537532407336989, 0.002384604275214803, 0.00015809046901022616, 0.0003429149547402553, 0.00047908065846189655, 0.0005683287405298817, 0.0006138442335048045, 0.0006278201608410267, 0.0006214612249804102, 0.0006072734903490122, 0.0005906575853205029, 0.0005766616723245445, 0.0005675486387263264, 0.0005643750161021962, 0.0005685355366004137, 0.0005805920359851936, 0.0005992387776785604, 0.0006225410851111329, 0.0006442738602271724, 0.0006572461775578679, 0.0006529316901315381, 0.0006238141401174659, 0.0005619622924952509, 0.00050561348897442]

===========================================================================================
python3 delay_tomography.py 3 1 uniform 0.5 500000  succeeded with stdout:
i_max is 6
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.3313648467773967, 0.3312186661296161, 0.3346288047111804, 2.70906282193373e-23, 2.795798823971002e-23, 0.0027876823818068323, 2.8317258036839146e-23]
3 [0.3337940895326036, 0.3330416815344963, 0.3280407672088025, 0.00512346172409763, 1.1913657790832777e-23, 1.4681744669258238e-23, 1.4464449565426602e-23]
1 [0.33541520752205756, 0.33174711358301817, 0.3315429996140894, -5.7062337485655365e-05, 0.0013517416183204687, -3.5452070973835536e-23, -7.129046658107542e-22]
2 [0.3379341291552095, 0.3269858959447012, 0.33390091771509717, 0.0010604407492083349, 0.00011861643578383723, 2.6417103958248183e-23, -6.415869912114454e-22]
6 [0.3354530351306962, 0.32876808120524115, 0.33577888366406267, 1.19765461999312e-24, 7.526834965678005e-24, 2.0067854996912266e-23, 2.0521737713214626e-23]
4 [0.32607165487418166, 0.3456096166718226, 0.32451969825348204, 0.0007220333038864158, 0.0008239678210055531, 0.0006780502552203589, 0.0005824474662428503]
5 [0.33193532571736184, 0.33811573162132647, 0.3273635508986931, 0.00258539176261855, 3.288811010204581e-23, 4.749942417829994e-22, 2.987133241818663e-22]

===========================================================================================
python3 delay_tomography.py 4 1 geometric 0.5 500000  succeeded with stdout:
i_max is 32
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.5030138210244168, 0.24367535340870958, 0.12313981187875915, 0.0630050613994195, 0.02916279173104749, 0.013520374314850342, 0.0070520388601414885, 0.0027169458919786013, 0.0008144663661637099, 0.0006983081947840755, 0.0006119596771667091, 0.000596352995515817, 0.0005478101386590087, 0.000561755715518319, 0.0005512285049412051, 0.0005517824320410921, 0.0005474767963597046, 0.0005496952262084485, 0.0005494760363611651, 0.0005483409828319813, 0.0005484835139321278, 0.0005486549056737382, 0.0005491434662292952, 0.0005482612934971465, 0.0005486873787035574, 0.0005485901343992787, 0.0005486030377283046, 0.0005486020997052604, 0.0005486022237773894, 0.0005486020438404586, 0.0005486021756892869, 0.0005486021106242025, 0.00054860213566194]
7 [0.4957375747981297, 0.2469735221038375, 0.12878350753436532, 0.05849619732473286, 0.030784404019155158, 0.01585744814514435, 0.005859552755655211, 0.003213573610668077, 0.00033721573911319586, 0.0005199326232836444, 0.0005950776495171619, 0.0006095752519851469, 0.0005952376061413522, 0.000575843315439289, 0.0005615009150111876, 0.0005521304259798719, 0.0005464270484686427, 0.0005433098143444947, 0.0005414878367195075, 0.0005404452994735769, 0.0005397064286852981, 0.0005393226089194095, 0.0005389564170895534, 0.0005386659838321073, 0.0005384754307153934, 0.0005391384464862349, 0.0005424282282316154, 0.0005521179929293173, 0.0005728364217766535, 0.0006032394755937059, 0.0006297939045017006, 0.0006265296381032202, 0.0005653641679588571]
3 [0.4928034322083139, 0.2567689130380354, 0.12079602389115279, 0.06142849877847404, 0.03021457294785692, 0.016537432663817443, 0.0047495376779572475, 0.003418780525855209, 0.00013849112931644305, 0.00031024258753281587, 0.00043412012980057293, 0.0005168840729259073, 0.0005612238671597159, 0.0005766593559691516, 0.0005730412998844132, 0.000561877326465635, 0.0005472397612414721, 0.0005340620046840833, 0.0005242601318766713, 0.0005169909720182015, 0.000512357657017584, 0.0005107268620196693, 0.0005124928994994246, 0.0005191277808234776, 0.0005318200094376142, 0.0005499117433719752, 0.0005716286742140999, 0.0005919484905661373, 0.000604346903050299, 0.0006012982287144706, 0.0005750133567495727, 0.0005210004370598307, 0.00047297537478227584]
1 [0.4938742245378904, 0.25500245804171895, 0.11668600065652075, 0.06166258616227479, 0.03608299179259312, 0.01638300053693208, 0.0028397286993100904, 0.0027672516994575267, 9.023270769361516e-05, 0.0002483128120087251, 0.00038386681880278015, 0.0005013070530985383, 0.0005819159790876303, 0.0006299506949264031, 0.0006482601703704995, 0.0006466388835759266, 0.0006333355185710969, 0.0006159848723054182, 0.0006009868649373921, 0.0005912327643202901, 0.0005892595297670889, 0.0005957162617393813, 0.000609941365618088, 0.0006299618917422593, 0.0006525526769804533, 0.0006733212286516043, 0.0006882991606903734, 0.0006902743066186414, 0.0006779395648279592, 0.0006455721650836608, 0.0005873505860745473, 0.0005307741074521411, 0.000492894290432476]
2 [0.4902004875537503, 0.2590797331121022, 0.11945503663888203, 0.06424969040918399, 0.030026932834840432, 0.010980545585118035, 0.011203328207313606, -7.08911823776562e-06, 0.00023434405739305975, 0.00032635514038517626, 0.0004300473409340776, 0.000521150905224071, 0.000581788711067469, 0.0006136057489404857, 0.0006272221573704119, 0.000626799156424379, 0.0006172442365239914, 0.0006041752251884213, 0.0005921504760574406, 0.0005848448556349856, 0.0005834056713601196, 0.0005901764697855826, 0.0006037658576443796, 0.0006231784396524863, 0.0006453195767605681, 0.0006653422219967748, 0.0006798594105091104, 0.0006816746060798707, 0.0006694991441064816, 0.0006379549604159866, 0.0005813522790975199, 0.0005275161978719851, 0.0004930447605473341]
6 [0.49142570727371593, 0.25889910227348767, 0.11565971975888972, 0.07143228299722962, 0.02370346426985779, 0.014662383787887617, 0.00785431302896742, 0.003108316092664052, 0.00013845094892955275, 0.0003084731274704713, 0.0004313335380695881, 0.0005147611922185927, 0.0005582940397519673, 0.0005741949778203373, 0.0005717391728020549, 0.0005605327606498679, 0.0005462950361535255, 0.0005335737235613046, 0.000523612039737296, 0.0005162876644492899, 0.0005116851763396317, 0.0005100093239908041, 0.0005118028750224975, 0.0005184649432800723, 0.0005311974677302675, 0.0005492924252540688, 0.000570964054925727, 0.000591210070269273, 0.0006035293827019959, 0.000600390831011652, 0.0005740564267401599, 0.0005200285723706099, 0.0004721060556463389]
4 [0.49193446122647305, 0.2581483374559745, 0.11970918838418922, 0.06707704591505975, 0.013896175149935039, 0.029992907229109727, 0.004276987972081613, 1.307766394158564e-05, 0.0002659758692517217, 0.0003542261377049773, 0.0004566078633675983, 0.0005390567225311285, 0.0005935377624255885, 0.0006220392529132171, 0.0006306574736922865, 0.0006271515399010315, 0.0006167597393899151, 0.0006036543577845721, 0.0005910177049689249, 0.0005840533161426406, 0.0005831089804916361, 0.0005902078872561012, 0.0006038251553435313, 0.0006235954338153517, 0.0006453998807882552, 0.0006655903355024993, 0.0006796950357280805, 0.0006825321463013912, 0.0006708599035335793, 0.0006382178810642721, 0.0005844745581948861, 0.0005296561752353346, 0.0004967365806144118]
5 [0.49261453575789477, 0.2553985966971767, 0.12029953420810728, 0.06539464361526695, 0.025677977861761375, 0.017525608137984094, 0.008019625107041886, 2.871253229329724e-06, 0.00024852994057348736, 0.00034364695034328266, 0.0004501669302093008, 0.0005389805592676302, 0.0005981365019403206, 0.0006292234022627122, 0.0006403220286110224, 0.0006372214965775567, 0.0006266119953246285, 0.000612637015074485, 0.0005993231676607573, 0.0005915340056970943, 0.0005899033851379395, 0.0005967409203173012, 0.0006101608361624581, 0.0006300456336141807, 0.0006520084507195311, 0.0006723928435037391, 0.0006865757627676577, 0.0006893687258862016, 0.0006774951420257026, 0.0006443692421110605, 0.0005899205390619865, 0.0005341977015087308, 0.0005005068986316812]
14 [0.4945453325674318, 0.25168550739105827, 0.12335421525276172, 0.061842127072336266, 0.02959699748749185, 0.016409668222049298, 0.005031818359076758, 0.0029118383222443717, 0.0003534250674183559, 0.0005421863206967208, 0.0006185920990960188, 0.0006304004600228864, 0.0006135793015004498, 0.0005920688089722326, 0.000575424965031086, 0.0005642837036743324, 0.000557346204760337, 0.0005534051563104514, 0.0005512393133213999, 0.0005502432369916507, 0.0005495626730685358, 0.0005493097407025396, 0.0005489931866275919, 0.0005487553868678493, 0.0005485876522317145, 0.000549268438984844, 0.0005525785899487044, 0.0005623110295443835, 0.0005831347732879406, 0.0006137372133263897, 0.0006405631021345322, 0.0006375051487910374, 0.0005761160320624575]
10 [0.49391353657509024, 0.2499273334283596, 0.12822654432827016, 0.05851104993248292, 0.02944445067141791, 0.01981009531266207, 0.003590770686730203, 0.003263392916649728, 0.00014028005794396062, 0.00031401449097354724, 0.0004385610665795965, 0.0005215497272819487, 0.0005651995702221973, 0.0005796671456557854, 0.0005752533956812226, 0.0005626718205051118, 0.0005476781220388521, 0.0005346432445945344, 0.000524423864217615, 0.0005173481503807375, 0.000512746838985557, 0.00051093018244921, 0.0005126279768374854, 0.0005190958991625975, 0.0005315561984476579, 0.0005495747175630925, 0.0005714514549386273, 0.0005918106571574933, 0.0006046482432541664, 0.000601287476080488, 0.0005759586990420544, 0.0005214926086371406, 0.00047390920808553985]
8 [0.49175324457406233, 0.25776785795089674, 0.11937157999517405, 0.0657633400441786, 0.026242202478820694, 0.014807987624988323, 0.008772515307407663, 0.0007534213013687117, 0.0001355400540573825, 0.00027318385385245264, 0.0004082875391539902, 0.0005186916627741534, 0.0005900281972736668, 0.0006278265756145067, 0.0006416379445893677, 0.0006377048244735114, 0.0006256870883831924, 0.0006104280772802331, 0.0005974075788060616, 0.0005894939332936177, 0.0005882581409728844, 0.0005949586707570498, 0.0006091656950834388, 0.0006286209667952822, 0.0006509665596534732, 0.0006714208934409574, 0.000686198289295405, 0.0006873838926726504, 0.0006758659801165436, 0.0006431184784461099, 0.0005855553842588831, 0.0005302090241424131, 0.0004930338621759705]
9 [0.4919997957573925, 0.25828759970889664, 0.11747914179186598, 0.06458886123025845, 0.03029974100937299, 0.009922963342409413, 0.012639556963903956, -1.3284141559399352e-05, 0.00023001177945829686, 0.00032096625860823726, 0.000424815712465313, 0.000515576938603612, 0.0005776940557815989, 0.0006112625433414354, 0.0006267190972254471, 0.0006267672738652392, 0.0006183027276949286, 0.0006058667726978602, 0.0005940643813530575, 0.0005865681940287718, 0.0005853395921272258, 0.000591712456576415, 0.0006054435226436879, 0.0006244787963025424, 0.0006462518383852202, 0.0006662393208379173, 0.0006804966613994845, 0.0006813640593373909, 0.0006697329929309341, 0.0006372860715122394, 0.0005805861413662988, 0.0005269416243191285, 0.0004924212250357271]
13 [0.49901221872175044, 0.2475407459044014, 0.12490630000002698, 0.06181172018870979, 0.03084700059467021, 0.012096868795001431, 0.009502377658047885, 0.0003139933500604826, 0.0007795174163847036, 0.0001481586649328782, 0.0004686634993962675, 0.000569572933696691, 0.0005927981848979805, 0.0005887019449328963, 0.00057845310216922, 0.000562939457620848, 0.000549835862342557, 0.0005371872232119316, 0.0005282056409549628, 0.0005209343164567285, 0.000516778197649091, 0.0005152312562008935, 0.00051664864792485, 0.0005233025771283625, 0.0005358277467583735, 0.000553636153334474, 0.0005754047299804281, 0.0005958284797057526, 0.0006089672691511793, 0.0006067335456145888, 0.0005830410166575309, 0.0005294645541841884, 0.000477463620401778]
11 [0.49027528537969345, 0.25985106870645164, 0.11869629844604875, 0.06413406243211811, 0.02060914797402593, 0.026235866241867793, 0.005211374192014862, 1.1282733435100052e-05, 0.0002601413158061364, 0.0003535041836301221, 0.0004543000479990857, 0.0005391733286438682, 0.000595748016054943, 0.0006246165922095197, 0.0006330654858956398, 0.0006304181602823607, 0.0006191165150067474, 0.0006048523861061645, 0.0005930819743283477, 0.0005853065608911778, 0.0005839952691618624, 0.0005909083289008918, 0.000604921649927389, 0.0006239700308311786, 0.0006459248780532522, 0.0006670114574984662, 0.0006804396022402565, 0.0006840775124117157, 0.000671487793915955, 0.0006405081960588888, 0.0005853949645962836, 0.00053142849012204, 0.0004982638031847688]
12 [0.4904427848488932, 0.2549362488075337, 0.11881729287393013, 0.07628724240047038, 0.01873605931093674, 0.014602350218744143, 0.011463013341702567, -3.962404943153283e-06, 0.0002368446963204817, 0.0003261586447677299, 0.00042737705727087364, 0.0005158388996301675, 0.0005748714622346074, 0.0006083367373678763, 0.0006211277995227755, 0.000621607386242699, 0.0006125336488802755, 0.0006000131563439308, 0.0005887916425258798, 0.0005815768637411896, 0.000580229773965651, 0.0005869009671351203, 0.000600816309413707, 0.0006197468992367581, 0.0006414705399124495, 0.0006623528643978804, 0.0006754684937652971, 0.0006786640827686489, 0.0006655248084998525, 0.0006339317775460019, 0.0005782331356809947, 0.0005238490157251438, 0.0004903730422892193]

===========================================================================================
python3 delay_tomography.py 4 1 uniform 0.5 500000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.334168875074231, 0.32931517641224384, 0.3221777850504358, 0.0029375011913452802, -0.0005418788204112044, 0.008627797165793889, -0.00012236038776493926, 0.00123490815597379, 0.001939059590650885]
7 [0.32294167789640194, 0.3314003828654474, 0.34014834340221234, 0.00043217958714268406, 0.0007432755573813352, 0.0010356701465202402, 0.0010766426174771092, 0.0009036350573948469, 0.0007397134428920081]
3 [0.3284390452963111, 0.33919788376891596, 0.3265913515086526, -2.200651982901905e-23, -3.705936709679931e-23, 0.00022753817150939, 0.0055441812546109, -2.2419559652421052e-23, -4.778976196798583e-23]
1 [0.2915157804804509, 0.43431081740382027, 0.24373756015195105, 0.02366250057585565, -7.153339094135018e-07, 0.0005301913395825142, 0.000932439918265778, 0.00160152727035497, 0.0019530984270015059]
2 [0.28717045306727196, 0.44247845464725466, 0.2420470112531052, 0.020831399354522467, 8.532342781070525e-05, 0.0006253196752918355, 0.0010505896326900494, 0.0017337366276567955, 0.002087786273453299]
6 [0.3285708420343168, 0.35464234879603856, 0.3149527229526185, -2.8414016041762187e-23, -4.4956696966449894e-23, -2.667829607388594e-23, -1.1279306093262574e-23, -2.1237365377134157e-25, 3.934718398826363e-25]
4 [0.28726571511222015, 0.4302126688119975, 0.2456535251294835, 0.02871228062338281, 0.003539900583389654, 0.00033736862530587945, 0.0006223142181829113, 0.001120885680975778, 0.0013777865624024547]
5 [0.28971925498915296, 0.4295045497873413, 0.24262971551380444, 0.0299335892676417, 0.003806053931660052, 0.00027635655220764865, 0.0006124455854179719, 0.0010964345800221153, 0.0013277017675492686]
14 [0.32707197543324995, 0.3404003416921186, 0.3274531272126601, 0.005074555661971349, 1.0503120746526207e-23, 3.543590279850057e-24, -5.09154639228582e-24, -5.743950185030133e-24, -5.0408376347049225e-24]
10 [0.32985624196339486, 0.3361840466765608, 0.3320257780905796, -5.231836127309859e-23, -6.578765415858566e-23, 0.0005378478597414582, 0.0013960854097233386, -4.578184789064204e-23, -9.180587989618749e-23]
8 [0.3327963834914131, 0.3385886648565499, 0.3262890177002091, 0.00232593395182778, 7.225738885042977e-20, 1.4930236310158616e-19, 1.3212419942828321e-19, 7.956871571072804e-20, 3.38993929097722e-20]
9 [0.28756971763530037, 0.4375036501603224, 0.2410756085040851, 0.026633960859273748, 0.0017200034669141349, 0.0002896396223164689, 0.0007634929656524015, 0.0013657401688946093, 0.0016522856666141695]
13 [0.3367913192472052, 0.3251599229662691, 0.3363235835904481, 7.091289143070154e-05, 0.0001902817867791211, 0.00032961328720304897, 0.0003678689661980684, 0.00031206432723307606, 0.0002460714518842171]
11 [0.2835102980310219, 0.43583749957859763, 0.24966422575455405, 0.023995352505070372, 0.0007060062527864252, 0.0005516243655571774, 0.0007958204166036336, 0.0014466591705513468, 0.001824074888300246]
12 [0.2857989274343299, 0.4320250780483363, 0.24921542833736585, 0.02651178222925657, 0.0005416991981718662, 0.0004763555490861096, 0.000782586141758397, 0.001387300580127168, 0.0017186238496276574]

===========================================================================================
python3 delay_tomography.py 2 1 geometric 0.5 1000000  succeeded with stdout:
i_max is 23
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.497852226411838, 0.24863655674515245, 0.12428139872727217, 0.06079978463122849, 0.029940112257782155, 0.014492086976856828, 0.0065629597376978205, 0.0024419701549944777, 0.0011343749007648922, 0.000995633626988846, 0.000928396290807586, 0.0009000940174855372, 0.0008788389434874328, 0.0008729189035280342, 0.0008661183374081779, 0.0008649797152569911, 0.0008649769410703599, 0.0008652128762186869, 0.0008631388190822872, 0.0008636549499397059, 0.0008636548567530179, 0.0008634668193406845, 0.0008637022871241188, 0.0008634666197778998]
1 [0.4991061536875616, 0.24734528562799035, 0.12311150452995606, 0.06243873921614512, 0.030222369366750157, 0.01425707000072515, 0.006496549975292312, 0.0023979217786258833, 0.000539447328876008, 0.000833805197780013, 0.0009347504395053517, 0.0009406216701131567, 0.0009167307063658883, 0.0008914880539407421, 0.0008731113430723805, 0.0008616446729005174, 0.0008564984851398183, 0.0008582811683958257, 0.0008705688750375056, 0.0008982281623438637, 0.0009397273578596308, 0.0009750786796785679, 0.0009595094250285361, 0.0008448350177332005]
2 [0.49829546869022306, 0.24993089501290752, 0.12295850344911674, 0.060728365705533166, 0.030742726715496067, 0.01334693385685767, 0.006931377522093565, 0.002441908752075073, 0.0005382372431434169, 0.0008294788752033028, 0.0009321523236324426, 0.0009399575027408231, 0.0009175458979480997, 0.0008931887480767311, 0.0008749747883185215, 0.0008632738650960285, 0.0008575831307030486, 0.0008588433842715054, 0.0008707194785618952, 0.0008981235484349143, 0.00093949766282888, 0.0009747670668606636, 0.0009591218628407415, 0.0008444392473425673]

===========================================================================================
python3 delay_tomography.py 2 1 uniform 0.5 1000000  succeeded with stdout:
i_max is 4
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.33146282995586857, 0.3326131551456327, 0.3332858322189788, 0.0011104137143394897, 0.001043986376798818]
1 [0.33520599268919327, 0.3329917643420901, 0.33180224296871663, 3.986168520924654e-23, 4.6348866338684086e-23]
2 [0.3346645760296875, 0.33309337591026206, 0.33224204806005037, 1.4429605731054418e-23, 2.1304041458391132e-23]

===========================================================================================
python3 delay_tomography.py 3 1 geometric 0.5 1000000  succeeded with stdout:
i_max is 29
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.49932254017640654, 0.24791841204955212, 0.12372375564008911, 0.061514819609273894, 0.02931517040542402, 0.014216602601114363, 0.006325949683392711, 0.0027260160139260196, 0.000871057233294196, 0.0007884156799427043, 0.0006998474883808335, 0.0006695547442851783, 0.0006477199206224129, 0.0006372196219552096, 0.000635859526118007, 0.0006339246409895951, 0.0006325434378256093, 0.0006320714766384777, 0.0006319217519711227, 0.0006319138205958554, 0.0006315159690419897, 0.0006314793978714371, 0.0006315561838950098, 0.0006315436911815494, 0.0006315444367319994, 0.0006315443495824241, 0.0006315443257911063, 0.0006315443473282338, 0.0006315443444478588, 0.0006315443437278072]
3 [0.4983266580517569, 0.2491386836582111, 0.12213206895120186, 0.06220519920169669, 0.03102447470027633, 0.013630630716880478, 0.006233409820571594, 0.002586421718526578, 0.00040140394405404055, 0.0006163733322541952, 0.0006992713409103566, 0.0007084844999504956, 0.0006891790777104174, 0.0006672418425608133, 0.0006504762973084698, 0.0006401489102822982, 0.0006339404868752584, 0.0006308875737502384, 0.0006292795854690658, 0.0006283349905491669, 0.0006276123170538452, 0.0006271051606457436, 0.0006276976500077002, 0.0006311973086799325, 0.0006420080670320968, 0.0006646088666142045, 0.0006984937978210111, 0.0007283848403312882, 0.0007224842444489435, 0.0006472956463241016]
1 [0.496088189951437, 0.2485642229282443, 0.1248759906727998, 0.0645846924580363, 0.02687784979661751, 0.017130441335505942, 0.006940127800817164, 0.0020473570588829906, 0.00016419222671258698, 0.0003516522770209014, 0.0004910878104462692, 0.0005798745292666254, 0.0006231015842729119, 0.000634248777442445, 0.0006262246682716122, 0.0006105050538335936, 0.0005936013115180446, 0.0005796833167973261, 0.0005705468717716506, 0.0005675658773822799, 0.0005717792196056176, 0.0005838009239927849, 0.0006027090482034443, 0.0006259599980769301, 0.0006481264445271145, 0.0006615182121133912, 0.0006573441969129891, 0.000628398308881203, 0.0005667226203166385, 0.0005098436313466689]
2 [0.4946082744890112, 0.2519950837916878, 0.1239929435568867, 0.06015590082440331, 0.033810081999178815, 0.012274023873082168, 0.00737131025559993, 0.0030113404569052918, 0.00015224498633781172, 0.0003380771249803881, 0.0004735562505333503, 0.0005635225639864876, 0.0006117224595489621, 0.0006276737981288569, 0.0006235530398574612, 0.0006098276665699454, 0.0005932981465018661, 0.0005791232027193612, 0.0005694145119473065, 0.0005661575030666277, 0.0005702292569541845, 0.0005822784614516446, 0.0006012288730918125, 0.0006244871504466993, 0.0006465289532679627, 0.0006596337821613005, 0.0006550121395857719, 0.0006255491075913306, 0.0005634759310159027, 0.0005063943514676298]
6 [0.49671202045584223, 0.24977279206533906, 0.12341132150166739, 0.05998463926439836, 0.03241399398186225, 0.014550297186660701, 0.005720160992631743, 0.0026346855914955907, 0.0004039536438214689, 0.0006208457296814946, 0.0007045331159496572, 0.0007140220091037819, 0.0006945139939479373, 0.0006721937946009666, 0.0006549302566018985, 0.0006441888255447222, 0.0006375278548217918, 0.0006340443155298727, 0.0006320465247309356, 0.0006308905042807614, 0.0006301072918596137, 0.0006296135473602323, 0.0006302403608040219, 0.0006337825110619875, 0.0006446225605917216, 0.0006672672731418618, 0.0007012159213441043, 0.0007311821707057487, 0.0007253305122850342, 0.0006500809836568557]
4 [0.49896955867500103, 0.24876900680407216, 0.12140092065084732, 0.06226666547423207, 0.03256784492552739, 0.012920210873986603, 0.00860257215119508, 0.0014418574493302975, 0.00017799053908897474, 0.0003682929103591558, 0.0005115286450338151, 0.0005975612754268397, 0.0006355286129693977, 0.0006421554997936283, 0.0006315044655747311, 0.0006148668597844309, 0.0005980075147660497, 0.0005842927897586237, 0.000575210414143996, 0.0005722482107400466, 0.0005764377063913086, 0.0005884709750645814, 0.0006073137677283821, 0.0006305890985850797, 0.0006526395681100529, 0.0006657859694447621, 0.0006620289306348743, 0.0006332759246484099, 0.0005718379490691871, 0.0005152070138354503]
5 [0.49766062317663723, 0.2482574275921055, 0.1273103523803913, 0.058332566390180356, 0.028595612354463975, 0.01800918125130535, 0.006836020232745575, 0.002161337439652094, 0.0001582940142469928, 0.0003484321988203317, 0.00048615570098565347, 0.0005749033560467052, 0.0006193062148802957, 0.0006319188734787713, 0.0006245074235784351, 0.0006093267116375232, 0.0005924232211826838, 0.0005783498595480457, 0.0005691485494216987, 0.0005661104559249471, 0.0005703258551971134, 0.0005823521686678212, 0.0006012245130455301, 0.0006244821604635042, 0.0006464308466342732, 0.0006593710524563652, 0.0006552598715610957, 0.000626096854505543, 0.0005644251908866404, 0.0005078600489479598]

===========================================================================================
python3 delay_tomography.py 3 1 uniform 0.5 1000000  succeeded with stdout:
i_max is 6
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.32961936228226274, 0.33597903717335903, 0.33039730008903545, 0.0014257764660841573, -5.507142577566128e-24, 0.0025785239892586304, -6.554137467903355e-24]
3 [0.33879221624688, 0.32535074116711943, 0.3358570425860006, -3.772117867067948e-23, -2.4776136821518581e-23, -3.8635339466820746e-23, -3.7754020982212513e-23]
1 [0.33277596630021955, 0.3360889578340401, 0.3287363314935909, 0.002467160082156984, -6.841571000749964e-05, -7.75737905477315e-23, -6.345005776903235e-22]
2 [0.33649006060666486, 0.3290425822538957, 0.3336408242460729, 0.0008265328933665331, 5.210847827609531e-23, 6.198546856036644e-22, 3.81881660386329e-22]
6 [0.33520230498382464, 0.3285279291314194, 0.33626976588475593, 1.7216057558046574e-24, 1.6441965156454924e-24, -1.1267241079992574e-23, -1.0431069574724453e-23]
4 [0.3287703593876851, 0.3437466308709792, 0.32335677652290684, 0.0015283531885372703, 0.0008162196142985821, 0.0004706344981102135, 0.00047608792243484697]
5 [0.33450644332224316, 0.3352162018884721, 0.32915049465308016, 0.0011268601362045291, 6.761265676151348e-23, 6.472529043657833e-22, 4.1089095596780383e-22]

===========================================================================================
python3 delay_tomography.py 4 1 geometric 0.5 1000000  succeeded with stdout:
i_max is 36
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.500212918085472, 0.24670713320104948, 0.1233921635601784, 0.06217374710987961, 0.029889368462558116, 0.013929881766003568, 0.006541170727538006, 0.002857160530302676, 0.0007275764582517024, 0.0006244243899301312, 0.0005119824231917155, 0.0005087947266085302, 0.0004733803678383929, 0.0004661456416444399, 0.00046495045022574384, 0.00046327211108686375, 0.00045882876583189106, 0.0004624018768029224, 0.0004603474448664904, 0.0004603382611737132, 0.0004603934221847061, 0.00046073554278136693, 0.00046026535363114283, 0.0004602062600693224, 0.00046032754203376684, 0.00046029226227979993, 0.00046029745024342775, 0.000460297047868993, 0.0004602970190968654, 0.0004602970327338087, 0.00046029703507044733, 0.0004602970310387431, 0.00046029703361326877, 0.00046029703226885624, 0.00046029703285568917, 0.00046029703270449805, 0.0004602970326980646]
7 [0.4978558102676484, 0.24614225102837203, 0.12743508991458272, 0.059271265023264935, 0.0307527275187285, 0.01513114988660733, 0.006567042996206646, 0.002846028459295626, 0.00029082120433125, 0.0004511859747170698, 0.0005166082875380585, 0.0005268619411761958, 0.00051267677603707, 0.0004936512162003921, 0.00047856330308357407, 0.00046871610656431883, 0.00046270320137424797, 0.00045944165792825793, 0.0004575550435147599, 0.0004565724452994249, 0.0004560058545820968, 0.0004556713770140603, 0.0004554954449769551, 0.0004553966788933129, 0.00045533169221833236, 0.00045527759266404157, 0.00045514851315606235, 0.00045499044339053637, 0.0004548024331942559, 0.00045532151148407776, 0.00045818934093828646, 0.0004668604816715867, 0.0004849370582739421, 0.00051166650381407, 0.0005359549212814156, 0.0005347765813561279, 0.0004851395321151041]
3 [0.49253923692121687, 0.2560723845747288, 0.12172228593166363, 0.06262914326153575, 0.02707051945533624, 0.016945057341711908, 0.007031315921733055, 0.0018316881728657251, 0.0001375672051256263, 0.00029902310851979844, 0.0004170468939979746, 0.0004908310919540847, 0.000527224819717987, 0.0005353651430281788, 0.0005275812192816632, 0.0005137867730182922, 0.0004990914539358159, 0.0004873485862840979, 0.00047931738226625694, 0.00047442463947577787, 0.0004716901088870711, 0.0004701682945944643, 0.00046888449177406546, 0.00046735140487819176, 0.00046589401461628996, 0.00046540419657098143, 0.0004673742909454872, 0.0004734880050885566, 0.00048532016611522625, 0.0005024154638546859, 0.0005231581730590127, 0.0005429475127332892, 0.0005556186191702193, 0.0005544340431150381, 0.0005323948614445489, 0.0004849739940899389, 0.0004445975336966583]
1 [0.4919159100695174, 0.2570450416124054, 0.11449335094014952, 0.06680361997166531, 0.03133824385638731, 0.014846512893097063, 0.007890649162201965, -8.727057193667608e-06, 0.00022893427024845152, 0.0003093013130940899, 0.0004035748263771031, 0.0004865766126223281, 0.0005410878429567248, 0.0005700301365871962, 0.0005816809758406236, 0.0005810375921992059, 0.0005722367160229483, 0.0005586435698993516, 0.0005448046541654349, 0.0005309750124214171, 0.0005200933316614779, 0.0005123557794802011, 0.0005087234454772976, 0.0005101518975259112, 0.0005167851560967036, 0.0005285519980526695, 0.0005455798189185161, 0.0005653360550821485, 0.0005868578817665186, 0.0006058469972588434, 0.000618830889294334, 0.0006212455948217755, 0.0006112630346283771, 0.0005840025763921714, 0.0005354024543866105, 0.0004861578040997604, 0.00046698238241343556]
2 [0.4904972427708024, 0.2603985907082262, 0.11422260921660768, 0.06543333832016152, 0.034102182915557305, 0.009851473011823774, 0.009903574073759289, -1.2954199470853746e-05, 0.0002180082671428531, 0.0003002245773173768, 0.00039600634921134166, 0.0004790192064511806, 0.0005363395361933964, 0.0005654810761555632, 0.000578664031411532, 0.0005791428358040166, 0.0005706367040418674, 0.0005574706844877072, 0.000543689500313608, 0.0005302151509407496, 0.0005191614842623464, 0.0005114843462095288, 0.0005078866682722968, 0.0005093109870516869, 0.000515961628263947, 0.0005277516090305277, 0.0005447858247168346, 0.0005645647354328191, 0.0005860842921367866, 0.0006050650241481144, 0.0006180158733238566, 0.0006203767864450729, 0.0006102990837262851, 0.0005829227560235468, 0.0005341930742882938, 0.0004848119152802131, 0.0004653691512731204]
6 [0.4924934310145369, 0.2555451473959829, 0.118330556051894, 0.0695731547058572, 0.024245747652150942, 0.016751790274478436, 0.00570792441070396, 0.00334815038907073, 0.0001247186060245833, 0.0002839065175964716, 0.0003959450735216717, 0.0004712170859875825, 0.0005116821303364897, 0.0005258555365689301, 0.0005230589260538424, 0.0005119019865144216, 0.0004984297514345627, 0.0004866181288661216, 0.0004780712135290852, 0.0004727145556209554, 0.0004696483813143447, 0.00046800393187086534, 0.0004666184189114337, 0.0004650795780862245, 0.00046359956138837207, 0.00046312063228923824, 0.00046507521563093765, 0.00047122394634181833, 0.00048307481629011667, 0.000500176732119735, 0.0005208625819206202, 0.0005404788118184916, 0.00055284072870355, 0.0005512338354790112, 0.0005287538796651594, 0.0004810240234489621, 0.0004405711984029873]
4 [0.49254502588661536, 0.25580398193690035, 0.12020036462413335, 0.06513778847542066, 0.022433833942306372, 0.021813664739546556, 0.006432738938765543, -3.442198092267184e-06, 0.00023710726494276013, 0.0003148635410615153, 0.0004071702523914003, 0.00048608405621593085, 0.0005385689847643902, 0.0005667795869973289, 0.0005776393340321399, 0.0005764440723007842, 0.0005684744684993155, 0.0005557504578554712, 0.0005419075664967127, 0.0005290178156555115, 0.0005182870628363236, 0.0005106891196520375, 0.0005074325336779701, 0.0005086363784928145, 0.000515294453648638, 0.0005272523913924239, 0.0005438384994377438, 0.0005639708858582841, 0.0005853278305288135, 0.000603804291484037, 0.0006172894753795825, 0.0006192589905466827, 0.0006096175512215266, 0.0005811051801617406, 0.0005341376344060627, 0.00048391296346720974, 0.00046550286083631186]
5 [0.4931020550785877, 0.25637325372975495, 0.11577060382051677, 0.06890498835672615, 0.023562485893354274, 0.01980710096215521, 0.006678890642571602, -2.273224847403307e-06, 0.00023653474190201332, 0.00031708984628942916, 0.00041313886320513564, 0.0004930987280757804, 0.0005473462081063618, 0.0005756399671714345, 0.0005871945033574612, 0.0005850653198525772, 0.0005764057281129598, 0.000562831700901939, 0.0005483265688454145, 0.0005348721866624412, 0.0005234918341067634, 0.0005157055560454911, 0.0005122129757701289, 0.000513351398881166, 0.000520010514942555, 0.0005320117016561402, 0.0005486398422909293, 0.0005688447755029563, 0.0005903011362622117, 0.000608867851744181, 0.0006224533405806841, 0.0006244849231099944, 0.0006148766313550565, 0.0005863272642698608, 0.0005392433185201866, 0.0004887997903278855, 0.0004702210392973507]
14 [0.4976743246139261, 0.25000932046261176, 0.12303967585312306, 0.061678132182003825, 0.02986639621631691, 0.01487043991328709, 0.005665001256768387, 0.0030418602708148206, 0.0002952564956267787, 0.0004584680482803084, 0.0005247314982429023, 0.0005346847982506438, 0.0005199600578243029, 0.0005006283699286772, 0.0004846817207658982, 0.00047411020894276367, 0.0004675277901072545, 0.00046391059457539515, 0.0004618372657453231, 0.0004609335283426333, 0.0004604337960299889, 0.00046023053532493255, 0.00046012466480171787, 0.00046008477190000727, 0.0004600501890188732, 0.00046001004914092924, 0.00045988647890290947, 0.0004597349125312955, 0.0004595507813997407, 0.0004600756360271197, 0.00046295346135418706, 0.00047164671175571024, 0.0004897649381515423, 0.0005165534036483053, 0.0005408902073262292, 0.0005396806751679431, 0.0004898092659602729]
10 [0.4926494326562559, 0.24985797828399564, 0.12720399228978357, 0.062436227258763445, 0.02795791071049515, 0.017835932704474214, 0.0057628976945515616, 0.002193364953428378, 0.00013626542420762259, 0.0002947784218540843, 0.00041119081224322003, 0.0004862337171830128, 0.0005232840931596173, 0.0005334322174251006, 0.0005264762633720469, 0.0005129133736945637, 0.000498505367348979, 0.0004866346430616096, 0.00047830113662646095, 0.0004732346950872448, 0.00047046421351541653, 0.00046893501920242174, 0.00046750415095181766, 0.00046601468136666995, 0.00046444089092384744, 0.0004638241812357243, 0.00046571489214007714, 0.0004717377881318469, 0.0004833108720643305, 0.0005003386688515285, 0.0005211525171887085, 0.0005410664448758488, 0.0005540175619974132, 0.0005525593876198451, 0.0005311219636194068, 0.0004832420192101503, 0.0004431483388719841]
8 [0.49127044277328674, 0.25718647354088564, 0.12161232982076055, 0.06283559708838558, 0.028425883519524568, 0.014077758535030044, 0.00849136372309444, 0.0005260102942275015, 0.00014949248529800362, 0.00025381966955014104, 0.00037550106582377155, 0.0004784712066306429, 0.0005426708277406183, 0.0005757782017623233, 0.0005873236957845616, 0.0005856731572412981, 0.0005759451500761833, 0.0005620332297945941, 0.0005476552933092636, 0.0005343982409604575, 0.0005230818573365711, 0.0005154677062360481, 0.0005118773083414027, 0.0005131941709472186, 0.0005196957295815208, 0.0005317911357617153, 0.0005485383656231965, 0.0005686234183939658, 0.0005902298039388423, 0.0006089643951336854, 0.0006225638916044843, 0.0006243426460017983, 0.0006143660626914025, 0.000586104848714879, 0.0005366202956870428, 0.0004859447440473973, 0.00046471529141175083]
9 [0.4919403835894055, 0.2593383183138947, 0.11682014821022303, 0.06337157444377958, 0.02799378844563762, 0.015203058282835859, 0.009837719947804278, -1.4291053023171183e-05, 0.00022295010424423127, 0.0003005559628700518, 0.00039229476093742327, 0.0004735754010081698, 0.0005282739713572438, 0.0005585205902290467, 0.0005724486385365738, 0.0005731234446517795, 0.0005662888258585667, 0.0005545094047242292, 0.0005410903724271032, 0.0005283995107022439, 0.0005174234467211682, 0.0005097898303820865, 0.0005060221578357409, 0.0005071246220540386, 0.0005133623571443764, 0.0005252734986692163, 0.0005418075811397125, 0.000561742658111572, 0.0005831716006312307, 0.0006017246202707179, 0.0006151446344513382, 0.0006167898564612991, 0.0006068685819174803, 0.0005790136855123954, 0.000530496932902648, 0.00048143798868435756, 0.00046229288444456066]
13 [0.49575677690839043, 0.24783745807509422, 0.12851081536628106, 0.060586945773495555, 0.028304301059910046, 0.01570422838088254, 0.008452435914559114, 0.00017583284840028167, 0.00026670030653187294, 0.0003968592976146191, 0.0004811406512528647, 0.0005256066811239034, 0.0005434973112447246, 0.0005436682122076836, 0.000533497359193915, 0.0005192002071544508, 0.0005054288783508669, 0.0004938604085814286, 0.00048555302380209707, 0.0004806774689344377, 0.0004778029879968007, 0.00047615887516758615, 0.000474763433175218, 0.000473256067938339, 0.0004717032780104479, 0.00047110234657963943, 0.000472979423277325, 0.0004789961521721802, 0.0004905285096302903, 0.0005075043728934602, 0.0005282753192692792, 0.0005482104935826577, 0.0005614103574293264, 0.000560634099166095, 0.0005405483445183163, 0.0004947395716353361, 0.00045720083783627204]
11 [0.49030127662731554, 0.26229259131812716, 0.11338573294092995, 0.06456323586743654, 0.026329119860909772, 0.021202378041874033, 0.006255009207472559, -3.1551529823761358e-06, 0.00023556515433133268, 0.00031618345539063546, 0.00040844664253529713, 0.0004882997440529005, 0.0005418983468814708, 0.0005693907456865406, 0.0005798839481751218, 0.0005792413813804007, 0.0005701552121754068, 0.000556970926093134, 0.000543435972320916, 0.000530491289488149, 0.0005194592840309625, 0.0005119937729433819, 0.0005086155098010265, 0.0005096157655401293, 0.0005158603194763694, 0.0005277107376329756, 0.0005442580120330684, 0.0005639437693120052, 0.0005852936470914973, 0.0006046895284919662, 0.0006173459453512173, 0.0006204290128490964, 0.0006103043003798686, 0.0005834001020607869, 0.0005349117707492399, 0.00048629527840404583, 0.0004671838812293936]
12 [0.4907224985655052, 0.25521453048344533, 0.11963715092733511, 0.07144278104582201, 0.021072534153401948, 0.017229656819275435, 0.009143058803521516, -8.487136646838527e-06, 0.00022667808951438794, 0.0003052273648948855, 0.0003967200297869801, 0.0004776073178668417, 0.0005315220841375322, 0.0005614260285928805, 0.0005737078886807218, 0.0005744627692247774, 0.0005670238257484594, 0.0005545215075513307, 0.0005413817626934983, 0.000528685449171696, 0.0005176861392501357, 0.0005100483873629153, 0.000506628924981229, 0.0005075406998221097, 0.0005137789334580829, 0.0005256529381890793, 0.0005422507825184269, 0.0005619696292303992, 0.0005833091682424598, 0.0006026269573417816, 0.0006151095205997141, 0.0006179198363276078, 0.0006074424247330108, 0.0005801402500917082, 0.0005312625905141699, 0.0004823780947058637, 0.00046303298323731773]

===========================================================================================
python3 delay_tomography.py 4 1 uniform 0.5 1000000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.3236795820003229, 0.3384636586988591, 0.32221695019929353, 0.007622211602644756, 0.0007131102219167999, 0.0017604314227265393, 0.001653926423306525, 0.0011611671233369013, 0.0018169595138558953]
7 [0.3374402831735759, 0.3190072270852455, 0.3435524897411785, -2.1112790592530543e-23, -4.136984539316459e-23, -4.934341083847363e-23, -4.995816135986441e-23, -4.903697913274697e-23, -4.7467908888889814e-23]
3 [0.3365914231184101, 0.33899212105010496, 0.3226066332447201, -2.105274127014107e-23, -3.9740788425322643e-23, 0.0007955900176741838, 0.0010142325690906146, -1.6261267090490577e-23, -4.026442830408474e-23]
1 [0.28828688740075314, 0.43527813776438723, 0.24227839425858777, 0.027598992826316178, 0.000789281202774019, 0.0004005397001752206, 0.0007907938429707742, 0.001391439260994529, 0.0016947561086976]
2 [0.28435351272018905, 0.44055527575073367, 0.24176831063815682, 0.026681177564030677, 0.00045091494908034514, 0.0005185813409498636, 0.0008172001663933299, 0.001446549218033356, 0.0017944206314780098]
6 [0.3379432191450504, 0.3385357500234303, 0.32352103083151934, 2.993304722300336e-23, 4.769510185462153e-23, 4.4871287981715894e-23, 4.1699028503995487e-23, 3.871425613345479e-23, 3.880437781594408e-23]
4 [0.28432089863649335, 0.4368956982874374, 0.24459708652772666, 0.026293688058664715, 0.0025531465210131346, 0.00039898527210416654, 0.000699228656815269, 0.0012730741735243432, 0.0015803780404561262]
5 [0.28550302950167733, 0.43583407248810596, 0.24416246322248394, 0.026647616191205495, 0.0025667401831526034, 0.00042593501813278597, 0.0006887201061066161, 0.0012483767377492949, 0.0015561382721974975]
14 [0.3471386931140324, 0.32117246887918893, 0.3316888380067787, -1.1980925316942322e-23, 1.6653787540645484e-24, 5.756520059878528e-24, 5.385437266753387e-24, 6.0102492086336626e-24, 7.271852103936622e-24]
10 [0.3238503960497118, 0.3438463353801709, 0.3301165787068866, -6.970589480936018e-23, -1.1641871833818329e-22, -7.159175821274099e-23, -3.254372515147028e-23, -2.941138813534734e-25, 6.875775413233826e-25]
8 [0.32325098471596114, 0.35285631178139243, 0.31440221339427843, 0.0009168531965708748, 0.008573636911797165, -2.3950196477273675e-20, -1.5586032785494823e-19, -1.7760065415888559e-19, -1.9566304915731033e-19]
9 [0.28834474005464183, 0.4314356515151884, 0.24230940049714714, 0.02706502640873115, 0.006979150833086345, 0.00024069148659029433, 0.0004976277276158016, 0.0009676000271680098, 0.0011942149382956407]
13 [0.33064950817707994, 0.33048666062917065, 0.3368451656815803, 9.742031291575017e-05, 0.0002335889615423436, 0.00038591864124940076, 0.00041979611006017577, 0.00035612802594771115, 0.0002830409754154587]
11 [0.28194603842731536, 0.44255596077408943, 0.24355340508601026, 0.023737611560258068, 0.0026092457619586104, 0.00023363332866823848, 0.0007429188347646937, 0.001404710391849111, 0.0017112243172891322]
12 [0.28545501969249626, 0.435560306957378, 0.24531532425985125, 0.02659611558973383, 0.0016107655683032175, 0.00028105758126973116, 0.000749586844193001, 0.0013580322322404965, 0.001642026691147806]

===========================================================================================
python3 delay_tomography.py 2 2 geometric 0.5 10000  succeeded with stdout:
i_max is 27
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.31413399809665377, 0.2391440004371488, 0.14519832229451435, 0.09504435038603759, 0.06487615224353004, 0.043025264162831325, 0.0339591345524692, 0.01699634455909261, 0.015279540644505653, 0.005754131940221136, 0.009182306422537022, 0.0017012325294098896, 0.0015855811350487092, 0.0010609431929100759, 0.0011235086193914865, 0.0008783550390936845, 0.0009430586721795045, 0.0008745891945841283, 0.0009138782603284622, 0.0009164153277952258, 0.0008424459136892414, 0.0008715845327871562, 0.000849159088390741, 0.0008589856923140118, 0.0008592182220076791, 0.0008593085390631759, 0.0008593572031474932, 0.000859285885857067]
1 [0.35326142402239724, 0.20258413280123977, 0.15308399863113664, 0.1092922515856177, 0.04485218824024612, 0.045780062677796704, 0.02731921361123485, 0.022439951234746156, 0.008358816477979746, 0.011552739704325037, 0.0023692887075226843, 0.006256854674535895, 0.0013353506806495943, 0.0002733147382347563, 0.0005250918454547712, 0.0006692886195465782, 0.000751771129245404, 0.0007969322078404804, 0.000820743982454098, 0.0008421188095521842, 0.0008491451315866267, 0.0008631047659145466, 0.0008638855282534412, 0.0008662129053485699, 0.0008446877194967908, 0.000799110641529304, 0.0007132602897788995, 0.0005906520894619953]
2 [0.34962016963596365, 0.21127914062642641, 0.1358762306664652, 0.09524371032724446, 0.08264500814257679, 0.028825029313745122, 0.03908546078621583, 0.019466621811848613, 0.012602772767493987, 7.229935543622963e-06, 0.009789331847381039, 3.6429447958559874e-05, 0.002738339022069285, 0.0019106214252284418, 0.00029458971774057704, 0.0005470274753344795, 0.0007018351460141672, 0.0007834858642922873, 0.0008234799624259141, 0.0008475455268527039, 0.0008636283816204173, 0.0008726263360877353, 0.0008768465159502305, 0.0008721817390119139, 0.0008535528648110447, 0.0008048263858751952, 0.0007132026921445116, 0.0005817330947238779]

===========================================================================================
python3 delay_tomography.py 2 2 uniform 0.5 10000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.18307446147285505, 0.21912098255861695, 0.18157486608281143, 0.21728174555755875, 0.1919925770544687, -3.9795252423280533e-23, -3.6895536665840466e-23, 0.006955367273688984, -3.776289509289135e-23]
1 [0.215356244330531, 0.16904951194993356, 0.24801225733291576, 0.15708348834663488, 0.20398826655581848, 0.00040572046205388456, 0.0060190600940974994, -5.674314764135087e-05, 5.363863932342484e-05]
2 [0.21865798563227443, 0.15769708266420762, 0.24379989160029997, 0.1744652228366682, 0.2053798172665497, -7.02833501070232e-23, -7.812221613277761e-23, -6.450329638731566e-23, -1.0783072903847616e-22]

===========================================================================================
python3 delay_tomography.py 3 2 geometric 0.5 10000  succeeded with stdout:
i_max is 35
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.35233080468742145, 0.26236365447198673, 0.09966819146602926, 0.10182318653660932, 0.0606828030951875, 0.03430110990945332, 0.02838549223893762, 0.02485460896302609, 0.0033903542272346707, 0.007102694273295769, 0.0050313312172842635, 0.0024732825025651634, 0.002845687943042048, 0.0005894231053193786, 0.0007024913497217069, 0.00060397881062803, 0.0016058698371359923, 0.00046709340233032885, 0.0006331558353758499, 0.0005790978365843502, 0.0006211984413310168, 0.0005382157805069441, 0.0005537427316127384, 0.0005902468527555493, 0.0006153520220494857, 0.0005322793790515347, 0.0005810127073248489, 0.0005791780212294423, 0.0005689074994829381, 0.0005752765374882473, 0.0005733409865207907, 0.0005732550607240611, 0.0005737152747902399, 0.0005733903896772985, 0.0005735816940905542, 0.0005735048556324722]
3 [0.29170815760294144, 0.2118856157951465, 0.19599930220310202, 0.08853259205295119, 0.0872322315913737, 0.020442947210330825, 0.04159470813375996, -1.6326362068918466e-05, 0.03200785716714213, 0.0024831858480997755, 0.00700020616511175, 9.456475048041762e-06, 0.009579205751974063, 0.00017182724554882912, 0.0003219862569373691, 0.00038699975037964054, 0.0004483508262665198, 0.00048356449702130776, 0.0004992392972319193, 0.000508468415489765, 0.0005132687936012505, 0.0005092127446862794, 0.0005044242695419593, 0.0005043516981847571, 0.0005013817126925495, 0.0005060879484980656, 0.0005089489724905787, 0.000520108812867875, 0.0005329818053699102, 0.0005481387763403909, 0.0005604185689553883, 0.0005750783732796933, 0.0005704224697232527, 0.0005543742497564996, 0.0005145641025621408, 0.00043663398243936447]
1 [0.34704115161062943, 0.20892602436335472, 0.11068218730953483, 0.16099835656650918, 0.026830288130896187, 0.04053184071236651, 0.056138628748793974, 0.008338970491022524, 0.006273844443532212, 0.015389663617932411, -6.93620465646406e-05, -6.0859562275017705e-05, 7.799733422566333e-05, 0.005305981793811525, 5.928080900800569e-05, 0.0002010292955509914, 0.0003422953111683586, 0.0004387724475286637, 0.0005316028938403422, 0.0006128339799509794, 0.0006696846746934416, 0.0007157845107968683, 0.000746942771748642, 0.0007540364958408443, 0.0007706875944453314, 0.0007733584459182643, 0.0007782768313287299, 0.0007730209808329649, 0.0007634891603722991, 0.0007425994156055444, 0.0007222226385958385, 0.0006749905426635364, 0.0006265763669532733, 0.0005497319978945846, 0.000488985892791047, 0.00045069386980250655]
2 [0.34868936726688776, 0.2076204150268406, 0.13609304064000116, 0.07531820759301622, 0.08654271049210321, 0.07299092109398106, 0.0013595354880007785, 0.04086063403033357, -0.00010773067547145884, -4.9730905396934414e-05, 0.015457884835228588, 9.688797845712901e-05, 0.0001824194257371208, 0.00029146552197236895, 0.00039530231874484377, 0.0004829899279483922, 0.0005393198070413808, 0.0005879000819025926, 0.0006328651350968507, 0.0006612857317962128, 0.0006903730121178054, 0.0007052584734269254, 0.0007210015621791127, 0.0007292446843474897, 0.0007484439848589102, 0.0007491043216499957, 0.0007549732124241811, 0.0007504036044092252, 0.0007485976150974779, 0.0007302933456170808, 0.0007143074069529171, 0.0006705502646106166, 0.0006305228504973922, 0.0005621732024749844, 0.0005100297145327053, 0.00048337743333672686]
6 [0.3135490950518244, 0.20512815924246866, 0.1895177361097794, 0.0710412989298542, 0.0793377350281127, 0.04666812554543572, 0.023619098492373168, 0.025085026535738856, -4.504241212164808e-06, 0.02142725486524501, 0.003328747084006911, 0.008851317144717073, 0.0001795073801921012, 0.0003331295803556993, 0.0004032022319903836, 0.0004681538495247932, 0.0005056511384576335, 0.0005260534015877845, 0.0005365827035825526, 0.000546138819876937, 0.0005378705647653536, 0.0005324270673121099, 0.0005289144930903081, 0.0005228009881449706, 0.0005207236473017002, 0.0005188891991923746, 0.0005216312001938166, 0.0005291671841431776, 0.0005420803155025517, 0.0005540298784103709, 0.000566400181055096, 0.0005807984914796699, 0.0005777868487837729, 0.0005635001883033002, 0.0005267335142288903, 0.0004538266619002533]
4 [0.3216160745377158, 0.2279458742909469, 0.17441627323495784, 0.05773931127650953, 0.08419935070744898, 0.04553721538529024, 0.014676092524278086, 0.023509353157981396, 0.01644587030428723, 0.01472490728750151, -7.301565349921628e-05, -1.1873312019593153e-05, 0.005663069161091481, 6.75691490924923e-05, 0.00018887329448036288, 0.00030226797508794853, 0.00039223945696189693, 0.0004839987988993815, 0.0005471914375016881, 0.000613096931053088, 0.0006466192646779, 0.0006813489987522296, 0.0006993216744237214, 0.0007244969328076618, 0.0007327741724227277, 0.000741951899932213, 0.0007393226175842044, 0.0007479806507134562, 0.0007258186401246466, 0.0007227136646775822, 0.0006875847100986708, 0.0006580869864854719, 0.000609512852413661, 0.0005463071585280328, 0.00048567739798047573, 0.00045505124008780743]
5 [0.32666456223332324, 0.2159270582786168, 0.12295963979762159, 0.15426283803801605, 0.06363260552054859, 0.01003739706314221, 0.009990376039533903, 0.06366634357687409, 0.011687823424048166, -0.00010765476876709374, 0.0038791375646265, -5.8027098192319935e-05, 0.001502017080594516, 7.499469472055335e-05, 0.0004639192359052983, 0.0004046600095808584, 0.000568781907118309, 0.0006672765215054204, 0.0007298606554683025, 0.0007716770254672536, 0.0007733615041117496, 0.0007830735755256491, 0.0007925963970282332, 0.0007975329150496099, 0.0008016072603833802, 0.0008067936262591389, 0.0008038857459512586, 0.0008091907054785005, 0.000787646856799852, 0.0007904562187361424, 0.0007573986926334636, 0.0007283672332704873, 0.0006839128852923815, 0.000617157653028667, 0.0005517231428173097, 0.0005164254575724963]

===========================================================================================
python3 delay_tomography.py 3 2 uniform 0.5 10000  failed with stdout:
b'i_max is 12\n1.5265755972728088\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 4 2 geometric 0.5 10000  failed with stdout:
b'i_max is 42\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 2 uniform 0.5 10000  failed with stdout:
b'i_max is 16\n0\n0.0059\n0.0056\n0.0115\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 2 geometric 0.5 50000  succeeded with stdout:
i_max is 34
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.33019685661496856, 0.216513866635564, 0.1551897785268444, 0.09478536652750258, 0.06748199841154778, 0.04196612079483726, 0.029943715432681876, 0.017652974881128818, 0.012162628499105226, 0.007544734567016181, 0.006155339943875779, 0.002941810392320349, 0.0017944006624899314, 0.0012449080872619514, 0.001294691336256113, 0.0006352410314633264, 0.0006910031268466504, 0.0007109553980121463, 0.0006467172332901897, 0.0006486735498050314, 0.0006313104459755275, 0.0006304126887439096, 0.0006414870588783924, 0.000629484938535763, 0.0006288949778990872, 0.0006258878306448709, 0.0006282589504049293, 0.0006332354592203907, 0.000636116636328252, 0.0006237978253006535, 0.0006332947774259114, 0.0006259039182481745, 0.0006283215237431892, 0.0006281302731536072, 0.000628256078907775]
1 [0.33395901490264845, 0.2220315548068454, 0.14829189569056322, 0.10135451393245906, 0.06034871534741082, 0.04512900693946364, 0.02619091992642347, 0.017376974921731236, 0.01533719675337, 0.007731003352408357, 0.004978672885572972, 0.001228996008496669, 0.0020471676770596435, 0.0007288030415555117, 0.0006941162850976977, 0.0003363898249720513, 0.000550173264620464, 0.0006371614344164468, 0.0006458175193282495, 0.0006505502463041955, 0.0006388600476793934, 0.0006313345924761967, 0.0006200578712886693, 0.0006149843977987662, 0.0006128874620929532, 0.0006172357657792723, 0.0006243967813347513, 0.0006369096822615766, 0.0006524949179237845, 0.0006670530337670224, 0.0006725998627081532, 0.0006654740614319988, 0.0006383801140450239, 0.0005791064873463655, 0.0004977664991695403]
2 [0.3365487726421096, 0.22534733154355852, 0.13371398747698837, 0.10432510593079991, 0.0637638174330723, 0.039008283552113, 0.035564108553835926, 0.0169683594749165, 0.013940301026088807, 0.006178288134466699, 0.008544815262344995, 0.0006838726887149916, 0.0017455636086962276, 0.00023318178196777436, 0.00043029013348722556, 0.0005598029747108609, 0.0006225749616163147, 0.0006533271211348769, 0.0006581090678295547, 0.0006548828349313494, 0.0006448641700279218, 0.0006340152690586822, 0.0006250915523792753, 0.0006204623050348459, 0.0006185107071017164, 0.0006208646542502104, 0.0006287825212757849, 0.000641949821848578, 0.0006562015884226462, 0.0006696397668922048, 0.0006772327143945451, 0.0006705012061830767, 0.0006438058041514625, 0.0005877531299377588, 0.0005118839811687763]

===========================================================================================
python3 delay_tomography.py 2 2 uniform 0.5 50000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.19557027409634703, 0.20944845271831813, 0.19730108351376774, 0.18831806229643291, 0.20049136289815822, -3.065259530093804e-23, -2.8357175481978923e-23, 0.008870764476975896, -3.009189277259271e-23]
1 [0.2033195979224961, 0.17734005864303462, 0.221399642221012, 0.19481053240389698, 0.19287730041143292, 0.006120722799811297, 0.004132145598316082, -7.967356973932448e-23, -1.0094197703357959e-22]
2 [0.19917792490839753, 0.18609225498879986, 0.2180288388422638, 0.1943629209617187, 0.199671196981403, -0.00020663884521814396, 0.002648088982071353, 6.411453691002755e-05, 7.285541667666803e-05]

===========================================================================================
python3 delay_tomography.py 3 2 geometric 0.5 50000  succeeded with stdout:
i_max is 46
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.33614854877518596, 0.23171755626390955, 0.13545060879896456, 0.09713454015365662, 0.07208974978786206, 0.033168733211956264, 0.03227642651114964, 0.01662244486836503, 0.01356684886704168, 0.005689097456046784, 0.0052924435431823385, 0.0040966894298474985, 0.0005988927205996368, 0.0006403752702924227, 0.0006537511106870325, 0.0005800489095422611, 0.0005191839803630599, 0.0004948611743074375, 0.0004489238101360556, 0.00047343611471447006, 0.0004779312033968307, 0.00043429947818909934, 0.00043323941515660227, 0.00046849050262388496, 0.00043362072267493184, 0.00045995225397647306, 0.00042362566291588826, 0.00044773070975617405, 0.0004422123191591113, 0.00044203625697829046, 0.00044237891454797007, 0.0004423982098264447, 0.0004423034949826093, 0.00044226773816310983, 0.0004423851119251036, 0.00044227797853772273, 0.00044234690028757754, 0.00044231091592113664, 0.0004423247237628076, 0.0004423223076457543, 0.00044232062098451626, 0.0004423232580764758, 0.00044232061187386484, 0.00044232294120249353, 0.0004423213335001635, 0.0004423220965430553, 0.00044232183460624205]
3 [0.31750215484430344, 0.22711805240223215, 0.16028261645276756, 0.0964265867885302, 0.05066786111194553, 0.055088176666611255, 0.02900150970741437, 0.016337945793073134, 0.016128170408328465, 0.004825655581358654, 0.005074385243867975, 0.0008599823581397955, 0.0042005515102621, 0.0004787120795988769, 0.000208347524534365, 0.0003968784670693952, 0.0004574249861477123, 0.0004960331092988017, 0.0005196505473944382, 0.0005075433473332471, 0.0005111999905729846, 0.0004988296963199495, 0.0004929316772511656, 0.0004835308407234434, 0.0004780326244105754, 0.0004749295842559044, 0.0004695490532444866, 0.00046739015870846486, 0.00046630944108218817, 0.00046523092854749683, 0.0004645324045554169, 0.0004638904684056029, 0.0004633501273050332, 0.00046343074206020454, 0.0004644938479571605, 0.0004663740641038392, 0.0004697775656623112, 0.00047635798602070975, 0.0004860322255409304, 0.0004990607153954274, 0.0005135348397045136, 0.0005279033908451988, 0.0005386612342964216, 0.0005361136877179604, 0.0005198365543680775, 0.0004840435909463023, 0.00042743579287858087]
1 [0.33786621129155203, 0.21350434084018138, 0.1381934674496212, 0.0921036980323105, 0.08744526235118186, 0.04639862655111086, 0.0290368958421275, -4.284730551902437e-05, 0.017521728276668962, 0.017708515799112024, 9.188942731007727e-06, 8.200703313199047e-05, 0.0005248110838818165, 0.0024266704048898175, 0.0001310433679225781, 0.0002018114381327761, 0.0003054221924223986, 0.00039734490399606344, 0.000475778005374159, 0.0005244659806664669, 0.0005599089009189639, 0.0005739043647358325, 0.0005770580999529139, 0.0005726192922854821, 0.0005606115781483785, 0.0005500222972889811, 0.0005381527318779565, 0.0005328171952404409, 0.000525695460735285, 0.0005244831760723501, 0.0005269886429463593, 0.0005287716931735775, 0.0005388285247558802, 0.000546803653263625, 0.000559486692516788, 0.000571756040295494, 0.0005844356104347315, 0.0005962376793733881, 0.0006003443003819412, 0.0006061816571552932, 0.0005958173771497429, 0.0005829255020048888, 0.0005607641544186276, 0.0005243363437459276, 0.0004764871260538068, 0.0004374880951078166, 0.00043085292689116084]
2 [0.33536534170584476, 0.2245045221945208, 0.13254640717573762, 0.10800233172672921, 0.06001735590792691, 0.043123102624512445, 0.024907824468895425, 0.036916552383377564, -8.827712484626754e-05, 3.155430121773177e-05, 0.013252145013472756, -2.2085641958668508e-05, 0.00425297919977081, 5.70857663753303e-05, 0.00014793772583693033, 0.0002478415322736844, 0.0003339379222837295, 0.0004065495201328441, 0.00046491178580530704, 0.0005080882101007407, 0.0005356365920055827, 0.0005533426969099777, 0.0005588833923090438, 0.0005598626392150047, 0.0005531512498105299, 0.0005471228743775143, 0.0005381556335318986, 0.0005311271437606914, 0.0005263677837151397, 0.00052263103552747, 0.0005253825180050376, 0.0005268176578320983, 0.0005361283796582265, 0.000544662368179081, 0.000556390363256905, 0.000569894017845676, 0.0005816453791189261, 0.0005927615403464753, 0.000596539868049734, 0.0006011438126301723, 0.0005903828402179891, 0.0005770550307311409, 0.0005549847116836169, 0.0005193028827859169, 0.00047235287410245025, 0.0004337722540063872, 0.0004255648523820526]
6 [0.3342122135987686, 0.22109187855613208, 0.14854361838367075, 0.0872636624955655, 0.07250190100040996, 0.04267363139579543, 0.03069969733734994, 0.014980361117651945, 0.015574005058236032, 0.0015732929983434145, 0.013719461952562531, 0.0001659080561707814, 0.0003085331488950605, 0.00039226916070207415, 0.000452138577114615, 0.0004946778419904532, 0.0005094346258322299, 0.0005187464192361529, 0.0005164714489732079, 0.0005113499310617462, 0.0005024185484224539, 0.0004932603402378189, 0.0004861753948977844, 0.0004781372905066456, 0.00047177112677694247, 0.00046755896729411587, 0.0004643096374340516, 0.00046209387731363375, 0.0004599776331781475, 0.0004588368945769546, 0.00045771838196623644, 0.0004569806375824579, 0.00045632646927464557, 0.0004560920292577528, 0.00045692394579100034, 0.0004587520955705329, 0.0004622817003449401, 0.0004684857906802272, 0.0004782118259292514, 0.0004910955715046895, 0.0005057618963868331, 0.0005206077618688978, 0.0005318604393978642, 0.0005312012831169598, 0.0005178107761008707, 0.0004861047434209262, 0.00043753177233452246]
4 [0.31550399010363106, 0.2155855677179447, 0.17863766074974896, 0.0817574032971895, 0.0783816798596008, 0.031077818388777878, 0.04175557266689186, -1.3996089040954276e-05, 0.024048484209956575, 0.007348562889643233, 0.0033492349075788836, 0.0047423737569203895, 3.302961048655512e-05, 0.0001600565495918054, 0.00024394097681904533, 0.00033238778921143515, 0.0004036303182047613, 0.00046230922596089935, 0.0005066959989483281, 0.0005359680459195305, 0.0005566626563980191, 0.0005637809461616398, 0.0005658457991780576, 0.0005638484827412162, 0.0005558133088861405, 0.0005474940434157187, 0.0005398709147311464, 0.0005312317280034059, 0.0005271848666454326, 0.0005244425845519634, 0.0005258665022044593, 0.0005301087012931046, 0.000537329453342214, 0.0005480011458647905, 0.0005604932640231768, 0.0005723606962382717, 0.0005829710905516561, 0.0005964866529502245, 0.000599163068395526, 0.0006038431222234178, 0.0005949041787885266, 0.0005853411076187235, 0.0005558557187164616, 0.0005301992923547193, 0.0004837551624556389, 0.0004431815997167771, 0.00043525386820879227]
5 [0.30805179966824303, 0.24597419630706083, 0.13825594441420308, 0.11037636021922351, 0.0533800529759795, 0.05163340057499205, 0.015403769022502102, 0.020748132915991646, 0.02617233600626942, -2.1320965736791635e-05, 0.011437871726249898, 3.098647519445775e-05, 0.00017799606923699077, 0.00025062332829086395, 0.00032198803414455865, 0.00039137560745992634, 0.00045119479993863695, 0.0004965694692309452, 0.0005310623603559469, 0.0005583914769408591, 0.0005678068757714527, 0.0005778046441036358, 0.0005745347660124414, 0.0005710942349345597, 0.0005634307896865219, 0.00055444723204174, 0.0005460240177006307, 0.0005385438079860221, 0.0005341737890754302, 0.0005310534491391384, 0.0005326183762615232, 0.0005363080479463786, 0.000543820067418405, 0.0005534438227779697, 0.0005660880045269773, 0.0005777387258393967, 0.0005885270205742087, 0.000602001869138656, 0.0006046960950045145, 0.0006098606563579843, 0.0006010880745513, 0.0005922583589646463, 0.0005635661224406257, 0.000539281944360475, 0.0004942293364275307, 0.0004557550641090837, 0.00045054243940097606]

===========================================================================================
python3 delay_tomography.py 3 2 uniform 0.5 50000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.1618653559040956, 0.2133772379669723, 0.19265189018644704, 0.1972085577961669, 0.1775929359244277, 0.02756034369425952, 0.02289289676405725, -3.489501541156628e-25, -8.427271882784338e-24, 0.004448620819165969, 0.0024021609444078206, -7.20064366717472e-24, -1.0161988574337613e-23]
3 [0.21924752355000268, 0.1874974727529996, 0.21104784873987076, 0.21251335684346423, 0.15764922716246266, 0.00023997141551955795, 0.0009786364623154417, 0.0014243675398822751, 0.001862705009791347, 0.0019039562217870961, 0.0016698440243324427, 0.0016246552679633547, 0.001229689128482606]
1 [0.1904057412607294, 0.19330954489659868, 0.228735135866235, 0.2134277395416398, 0.1384029231830879, 0.03145665512264894, 0.0023674717111022967, 1.5134626253565371e-05, 0.00025479139333270027, 0.0003975528410579859, 0.00032777599504398, 0.00030093072193475236, 0.00037768113083438786]
2 [0.18388083858890852, 0.1964557715589727, 0.21609525084253262, 0.2536706781726292, 0.11447027164165374, 0.02584711231947953, 0.007783823204085313, 7.756891761845206e-06, 0.0002543433918669809, 0.00037163025892367164, 0.00030587359902106655, 0.0002879929548976315, 0.00036289793220945345]
6 [0.27834830573749214, 0.08430650694927995, 0.264009764441785, 0.20089779989415502, 0.1617151599317549, 0.00021024684754103614, 0.000842779207100597, 0.001296511799401286, 0.0016376002605661701, 0.0017292836467117352, 0.001457241937285394, 0.0014387191434089, 0.0011119123244498937]
4 [0.18894108540967466, 0.20005007515644996, 0.1966904143187468, 0.23710549863592828, 0.1546550485643498, 0.02152765334791998, -0.00037684715850480057, -0.0004830701949213543, -0.00022766683562221797, -3.221736175927577e-05, -3.133318717753761e-05, 0.0005308292266279814, 0.0004200279060736624]
5 [0.16808844733996237, 0.22565358059610538, 0.21116858579910866, 0.23476595999096903, 0.11775745750685265, 0.03245937246082295, 0.0045280552466813485, 0.004436447761868667, -1.6428184454820585e-05, 0.00023708110953354965, 0.00022922169748166958, 0.00024414768646258107, 0.00031652245078969964]

===========================================================================================
python3 delay_tomography.py 4 2 geometric 0.5 50000  failed with stdout:
b'i_max is 46\n1.5572835654030897\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 4 2 uniform 0.5 50000  failed with stdout:
b'i_max is 16\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 2 geometric 0.5 100000  succeeded with stdout:
i_max is 34
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3345143944583143, 0.2196296865673502, 0.14808788673098588, 0.09541355880099539, 0.06519439455856882, 0.04411539590957697, 0.02789289360355181, 0.01842882629264256, 0.013485804309342375, 0.007996574509030635, 0.005073057682662985, 0.003168334136193993, 0.0013073157088996745, 0.0014265081607353711, 0.0008254211907025336, 0.000729395466236547, 0.0007081574176793929, 0.0007016428943111977, 0.0006577756411547486, 0.000662387810669092, 0.0006356883362957791, 0.0006424426184278433, 0.0006622226223807685, 0.0006352404099096449, 0.0006363683153415808, 0.0006347125078553801, 0.0006396719256130945, 0.0006384715667964831, 0.0006409986491129558, 0.000637326422128384, 0.0006384479608169083, 0.0006359156233821565, 0.0006370421468770818, 0.0006370446535864668, 0.0006370483361039517]
1 [0.3313311805463842, 0.2207868171481889, 0.14956120347230806, 0.10404260595088882, 0.05964060171698015, 0.04396928965838172, 0.029179517269007287, 0.016860400842554475, 0.014258513606877323, 0.006461387418241044, 0.0052792239211152045, 0.002746334073252074, 0.002390338332787817, 0.00047041421745658784, 0.00031034245626446454, 0.0004980634919093928, 0.0005852488535041801, 0.0006246292313943193, 0.000641225965081837, 0.0006426128574620851, 0.000634743769376476, 0.000625922506958703, 0.000618595283717103, 0.000613019992346962, 0.0006112583368823403, 0.0006141108893490484, 0.0006213017122491719, 0.0006338789934226183, 0.0006487201291317198, 0.0006621586151365289, 0.0006686624640080014, 0.0006620214789426907, 0.0006348511385716032, 0.0005798063759925918, 0.0005010948495257793]
2 [0.3334497599334133, 0.21789851880732516, 0.14640842109373642, 0.10141774720825489, 0.06753020798816423, 0.038966497959704936, 0.02913717816569019, 0.020593768632852942, 0.013241918012989734, 0.007669063691808876, 0.006122974977659394, 0.001961714478986583, 0.0018257390816807395, 0.0007226777614607516, 0.0002759719073154051, 0.0004893530469870276, 0.0005922468833168735, 0.0006327643538243876, 0.00064766437937799, 0.0006480674763883357, 0.0006395488328967502, 0.0006294990564068021, 0.000622430387224024, 0.0006165447211825151, 0.000614658911408505, 0.0006174320340982335, 0.0006242485798875579, 0.0006366435018645216, 0.0006515145287462018, 0.0006649131436477671, 0.0006714520697888927, 0.0006650285957195221, 0.0006379553360440775, 0.0005826805509862121, 0.0005026797938155443]

===========================================================================================
python3 delay_tomography.py 2 2 uniform 0.5 100000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.19979874573078055, 0.20468643918821666, 0.19958119961770626, 0.1916717611216079, 0.19766277100511603, 0.0013458642385723479, 0.0010494996495795422, 0.0019433422666928868, 0.0014949954409052644]
1 [0.19643499800044067, 0.18712951491165583, 0.21165983831857826, 0.1996463124846473, 0.19942942204219066, 2.8367346533526793e-23, 0.0056999142424873465, 5.607548068701146e-23, 4.6916956448199194e-23]
2 [0.1938416938692869, 0.19419255872761693, 0.20123266635038692, 0.20568655264543523, 0.2025526838496046, 0.0023899898500253786, 5.640367182388742e-23, 1.582398307532148e-23, -2.6613416658055495e-23]

===========================================================================================
python3 delay_tomography.py 3 2 geometric 0.5 100000  succeeded with stdout:
i_max is 46
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.32943555659702684, 0.22832439841648608, 0.14725190565533164, 0.09210217627924701, 0.07268545056501294, 0.03427352956980612, 0.031230461191603828, 0.0193709023908308, 0.011835360227554933, 0.007374828746662965, 0.0052211923315224765, 0.0031326732293854116, 0.0016035659169514518, 0.0006026483597416264, 0.0006111187709380747, 0.0006131927904317071, 0.0005055691862690204, 0.0005310957969895758, 0.00046283746655731314, 0.00045238350640646396, 0.0004951181669924458, 0.00044834105924604025, 0.0004264509789513852, 0.0004699341875986252, 0.00043450534974621627, 0.0004572224511858373, 0.00042870695385737964, 0.00045233730545074513, 0.0004437910576497082, 0.0004410561989208481, 0.0004484562114981782, 0.0004401233375470546, 0.00044445950400941306, 0.00044776313751221917, 0.00044007326405781405, 0.000444403432713915, 0.0004436720159685817, 0.00044363387476799017, 0.0004435660118471935, 0.00044367603904485285, 0.00044360845896165087, 0.0004436305422001067, 0.00044363233875893574, 0.00044362173085350494, 0.00044363142073571796, 0.0004436266757549216, 0.00044362799350738415]
3 [0.3321301212690363, 0.21886864292034916, 0.1515776780760522, 0.10609181270819563, 0.04409393388414914, 0.05513903296398334, 0.03190091586053436, 0.013739865360636613, 0.012475521736034112, 0.008853438471997759, 0.0022493504774076687, 0.0050695452376772225, 0.0012764867990573726, 0.00019071550304854894, 0.00034226500326931734, 0.0004372831139370878, 0.000490709245969848, 0.0005199463501513126, 0.0005227739543221448, 0.0005212470263545242, 0.0005127570601656096, 0.0005033980388523826, 0.0004934394009994743, 0.00048641264700609614, 0.00048026375345810844, 0.00047543587217668674, 0.0004721213609881737, 0.0004695963527763334, 0.00046854252349222875, 0.00046764274104140786, 0.00046691072035935334, 0.00046639441113698456, 0.0004657839710581099, 0.00046610676292414236, 0.00046697579004596794, 0.0004688098248496831, 0.00047278745302555735, 0.0004790903918669954, 0.0004891625862013785, 0.0005019890897086346, 0.0005165240886249029, 0.0005310439766325617, 0.0005413281421952783, 0.0005394822739127349, 0.0005235761328518777, 0.00048606243628121883, 0.0004324871065896884]
1 [0.32852985276681346, 0.2275057138128074, 0.1350855725885063, 0.10255144929789986, 0.06841827833175732, 0.045834185684196976, 0.03213664268560821, 0.006195072706147667, 0.01658129745975499, 0.016049163568601057, 0.0024183950806265465, -6.534174193565856e-05, -2.8422048174257247e-05, 0.0009933955926444604, 0.00014089650949779004, 0.00031211101625537596, 0.00043899749602706415, 0.0005105578741570882, 0.0005467341616079153, 0.0005674244526937752, 0.0005772187727699557, 0.0005761152606669781, 0.0005716842810753978, 0.0005661846816034698, 0.0005557339959992672, 0.0005479512505377196, 0.0005403485239061047, 0.0005331680593053434, 0.0005283249668230352, 0.0005275376125201326, 0.000528760640455086, 0.0005325415179638516, 0.000541171742692608, 0.0005501725274942314, 0.0005616243244048332, 0.0005746298415662352, 0.0005878259844995153, 0.0005964454794604363, 0.0006047045512009709, 0.0006066052846558387, 0.0005988030343251612, 0.0005875832510472477, 0.0005686031233274693, 0.0005333430509319715, 0.0004907692324995311, 0.00045388500585659804, 0.0004412872524411206]
2 [0.32831461486752733, 0.21932335856523988, 0.15170934729017121, 0.09416147024730254, 0.06944909073676966, 0.04621939976809368, 0.01877914039109168, 0.03419440727403208, -2.3749846187117106e-05, 0.0019435783399545028, 0.01460019706729377, 0.0016230472200078688, 0.002369218548590286, 7.230068634124612e-05, 0.00016822911526627926, 0.0002649725236900394, 0.00034943064812176293, 0.0004229605252387699, 0.00047826192838971207, 0.0005186113013519836, 0.0005436292547401937, 0.000557107238678591, 0.0005619983715718685, 0.0005610130827090412, 0.0005539801502144888, 0.0005466222020355149, 0.0005390186249564842, 0.0005314821087736699, 0.0005266406082185636, 0.0005243498899330761, 0.0005262845356983036, 0.0005288700510493657, 0.0005370502222049002, 0.0005469768190576295, 0.000558012444841053, 0.0005709703090658849, 0.0005838997737019859, 0.0005922681584338086, 0.0006002157457760779, 0.0006010687216836675, 0.0005922254405577281, 0.0005792884155891051, 0.0005580171801769214, 0.0005202927656240515, 0.0004754984234888823, 0.00043798979600246176, 0.00042623220309482234]
6 [0.3384605278867221, 0.22047632868953676, 0.14252731540199903, 0.09664878039735592, 0.06927994997506107, 0.03720614216203254, 0.02708902991960798, 0.02284522555305831, 0.015845010487758406, 1.337302223174986e-05, 0.011248087970600947, 0.0012850699952239074, 0.00019362397093147945, 0.00034054065244772916, 0.0004346862637768468, 0.0004917049406124131, 0.0005255428118192311, 0.0005297530847890477, 0.0005305004116924276, 0.0005249116343135486, 0.0005139505329269327, 0.000503977353306269, 0.0004950833576159754, 0.0004870435983216581, 0.0004807004898551487, 0.0004752643826246826, 0.00047196849838599357, 0.00046936167604670533, 0.00046731499016592633, 0.0004661993726446345, 0.00046478938546120724, 0.00046384845468738957, 0.00046330343384046256, 0.00046323165554431613, 0.00046393328998476415, 0.00046589517737552586, 0.00046979029824244115, 0.0004761786681523343, 0.0004861623037436761, 0.0004991539759638472, 0.0005137978526666548, 0.0005286702784058909, 0.0005394685397620896, 0.0005386786823041603, 0.0005243566848301922, 0.000489216926977731, 0.00043902351009871205]
4 [0.3129300987325997, 0.22651964800689517, 0.16659238961767572, 0.08887569909811965, 0.06559286249153165, 0.04708554647371452, 0.028151599347020658, 0.009256550652373505, 0.01861782384196639, 0.012583288532927329, -0.0002198975001276891, 0.0060050558723919985, 2.2322186860600948e-05, 0.0001532119015468277, 0.00024608499920014313, 0.00033220155562955003, 0.000409236381132638, 0.000466632252806797, 0.000511014677240495, 0.0005433947373501323, 0.0005638635332900069, 0.0005714532991555796, 0.0005741970942528412, 0.0005708874432177582, 0.0005633720286699088, 0.0005553661377902485, 0.0005465216703308747, 0.000539413752463497, 0.0005336958011225895, 0.0005314872731712475, 0.0005332256591061963, 0.0005360100590211696, 0.0005450342558913153, 0.0005532166065492126, 0.0005670757072234429, 0.0005784380701735544, 0.0005887928800077484, 0.0006042423075999637, 0.0006049581606542228, 0.0006082579375931257, 0.000602120504423819, 0.0005908620633444325, 0.0005621636679566863, 0.0005352140209529301, 0.00048784693226902484, 0.00044863250710047123, 0.00043885943417625343]
5 [0.3156007581079213, 0.23285918653188606, 0.1535963579767609, 0.09343438437977178, 0.07163014277603752, 0.036501662422999216, 0.01715292561813395, 0.025049339561287506, 0.024537180245345954, 0.002479415280467694, 0.007373518018943716, 0.0006617150881463925, 0.0012083669817010453, 7.310304500641734e-05, 0.0002053143555391705, 0.00031654043057811844, 0.00040746727059749434, 0.00047669618593111255, 0.0005256942234347379, 0.0005600568009660836, 0.000573823548701735, 0.0005837922251415337, 0.0005772531946363747, 0.0005724576116735931, 0.0005648323161596015, 0.0005532628302246687, 0.0005446162272856941, 0.0005380402493085762, 0.0005324601903001264, 0.0005297566520404154, 0.000532120887881324, 0.0005354045305507918, 0.0005442058374978713, 0.0005525317935925632, 0.0005665823006412124, 0.0005778423230413104, 0.0005882107043347024, 0.0006037363693305944, 0.0006048779322045024, 0.0006085110149865423, 0.000602750031283906, 0.0005920426979309474, 0.000563727013244366, 0.0005369915430890913, 0.0004895460622150241, 0.0004500780643211166, 0.0004394562434826765]

===========================================================================================
python3 delay_tomography.py 3 2 uniform 0.5 100000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.1684831071801111, 0.2123399008170172, 0.19458924487827134, 0.19375835695142285, 0.18564009477251148, 0.037831427884795155, 0.001117969708909847, -0.00196919752149659, 0.0002611676677204248, 0.005305546807371133, 0.0030808708277073253, 3.4964042985269166e-05, -0.0004693090355926714]
3 [0.2314989791239943, 0.1854866189751242, 0.1955669136401858, 0.23015233838650997, 0.14540533461979446, 0.00022108729283378236, 0.0009966053734969044, 0.001421073569532629, 0.001817693370704841, 0.0019137463968173878, 0.0016343801200303179, 0.0015603331707935997, 0.0012372051902758174]
1 [0.17669867884084955, 0.20049917530011052, 0.21990617334157672, 0.23773951872306726, 0.12317406242361317, 0.03687213416694149, 0.003403732074138898, -1.698365535205421e-05, 0.0002144087909226603, 0.00035826353461244995, 0.0003027047770098162, 0.00027108565113696174, 0.0003608018346487481]
2 [0.1771555425443193, 0.21086427941954483, 0.19073895974555793, 0.2549996172388248, 0.1367753606121701, 0.02751350216390714, -6.27242540959653e-07, 1.4805755424172928e-06, 0.00024777377819285755, 0.0003913710913951272, 0.0003320194852720565, 0.0003140776386819724, 0.0004093040997730255]
6 [0.2727954838085775, 0.1053617936209006, 0.2420970170911426, 0.21555139236058443, 0.1541051202492719, 0.00017060205029591018, 0.0008138218903900007, 0.001234258282506372, 0.0015351800178008915, 0.0016443959288971468, 0.0013598150175088374, 0.0013242354513577355, 0.0010631879792831972]
4 [0.17696758375762336, 0.22797089126052572, 0.18891436202418338, 0.1987584921477403, 0.20139063757288317, 0.005998033237044162, 3.2273898587024707e-21, 1.3815816812893582e-21, 3.977431078167519e-21, 6.240666136863302e-21, 4.315562076426239e-21, 4.746125639738151e-21, 5.048538965680976e-21]
5 [0.17925304309000756, 0.2118383543043508, 0.21022315754648432, 0.21899426229267863, 0.14661043586203926, 0.02972712534900307, 0.0005675444617275443, 0.0013466297519906852, 2.1067682318202664e-05, 0.0002854519478398341, 0.0002597143038308539, 0.00028916970593321866, 0.0003830027341536025]

===========================================================================================
python3 delay_tomography.py 4 2 geometric 0.5 100000  failed with stdout:
b'i_max is 46\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 2 uniform 0.5 100000  failed with stdout:
b'i_max is 16\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 2 geometric 0.5 500000  succeeded with stdout:
i_max is 38
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.3323839029990783, 0.2193875850417726, 0.1499345831090676, 0.09628727438371218, 0.06591831563392045, 0.04340775237094671, 0.02809348326312914, 0.01859071623749979, 0.012601406380054702, 0.0078049231149433075, 0.005084107353900915, 0.0034319686630034196, 0.001798975992721857, 0.0009306163361980551, 0.0007039152367948462, 0.0006528090999282624, 0.000610754735306823, 0.0005893811126367957, 0.0005578791374014199, 0.0005716358367111994, 0.0005504201614600148, 0.0005520122550786708, 0.0005500325251515066, 0.0005398177043070887, 0.0005466771431710774, 0.0005411145523128934, 0.0005429055170566042, 0.0005410560007157354, 0.0005419822401897538, 0.0005424806889273448, 0.0005412441775903061, 0.0005406754435186456, 0.0005411237770777085, 0.0005411269154678524, 0.0005411268941904643, 0.0005411250029603823, 0.0005411257372574746, 0.0005411265637426045, 0.0005411260321094278]
1 [0.333537133353197, 0.22092262992450898, 0.1464116211299044, 0.09934470697943967, 0.06431500956773703, 0.041392226511741195, 0.029144199789108975, 0.019885306545838664, 0.01288432634647653, 0.0071608021554439814, 0.004792001043008167, 0.003353419979094629, 0.0021534181271518904, 0.000213205068335067, 0.00037169406698010044, 0.00048418000410900645, 0.0005514954258337306, 0.0005881216605030212, 0.0006015914227085869, 0.0006010398726229249, 0.0005936169065977352, 0.0005841841391381829, 0.0005745288914935953, 0.0005662402349133674, 0.0005598952689179141, 0.0005552730385368724, 0.0005526875460555635, 0.0005524885197370426, 0.000555156961867953, 0.0005614246341518081, 0.0005716485402155462, 0.0005853372813938412, 0.0006012549470898099, 0.0006158176652730595, 0.0006238462722233291, 0.00061935302503195, 0.0005961374910015446, 0.000548008540579727, 0.00048115439836076036]
2 [0.3316541036829691, 0.22351991721261283, 0.1455846288028629, 0.10003981218811712, 0.06383503597453706, 0.04172168164641141, 0.029447481053750387, 0.019263507680256385, 0.011301136370253758, 0.007852198686413858, 0.006093669154608018, 0.0021847422862685405, 0.0029233267752088784, 0.00020564458494504287, 0.00036145176170008847, 0.00047193674693404896, 0.000540249634086764, 0.0005784085882609534, 0.0005940008678448904, 0.0005950756637958016, 0.0005889239642922787, 0.0005804062698543747, 0.0005712167199672239, 0.0005633411744069693, 0.0005572649427704832, 0.0005528200533401772, 0.0005503381418417504, 0.0005501574912480849, 0.0005527821118986451, 0.0005589967859227149, 0.0005691473942951413, 0.0005827146873476147, 0.0005985374988438613, 0.0006129787469945369, 0.0006208419501800972, 0.0006161813315334071, 0.0005927940187236227, 0.000544586964002423, 0.0004778135899156819]

===========================================================================================
python3 delay_tomography.py 2 2 uniform 0.5 500000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.20115651921980604, 0.19525653938406723, 0.20257748067216733, 0.1965129451261688, 0.197398304045806, 0.0010753836664534043, 0.0018611875919261156, 0.0016148058760805104, 0.0017283769001223402]
1 [0.19563567776559093, 0.200968052973731, 0.1984045967366259, 0.2039610440405414, 0.1988878134835971, 0.0009749486963765953, 3.590477042439493e-23, 0.0011678663035370512, -3.159361403855e-23]
2 [0.19519286780657585, 0.20162969028186606, 0.20032497003177038, 0.20004361172108484, 0.19928440447480691, 0.002963201845459377, 0.0005612538384365577, -7.434939431774906e-23, -8.825984584624961e-23]

===========================================================================================
python3 delay_tomography.py 3 2 geometric 0.5 500000  succeeded with stdout:
i_max is 51
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.33014830732457745, 0.22093665267943488, 0.15159691318694374, 0.09511838140252421, 0.06642429909497692, 0.04229620067007035, 0.028807162811226698, 0.018856309593169113, 0.011197901027289474, 0.007832285615507006, 0.005387535368101357, 0.002774860436473648, 0.0019529084264074187, 0.0006088912901207764, 0.0005748175939619235, 0.00046912656068057634, 0.0005237902473694114, 0.0004259487059220335, 0.00046261853091868687, 0.0004030881968512776, 0.00042474323478997625, 0.00040367289311239035, 0.00041710804396226245, 0.0004004848508221304, 0.0004015419619611837, 0.00040191268858026435, 0.0004079826920174479, 0.0003962652296099798, 0.00040132731194998, 0.00040437991894879094, 0.00040170971346247864, 0.0003989512545383537, 0.00040258288906339264, 0.000401235239015883, 0.00040056259898874384, 0.0004012843512471489, 0.00040110567660343736, 0.00040112403059439127, 0.0004011145426528596, 0.00040111759540618875, 0.0004011184647112339, 0.0004011177573174086, 0.00040111804998783267, 0.00040111733170770903, 0.0004011181935492012, 0.00040111774350416404, 0.0004011177783187615, 0.0004011178683269185, 0.00040111783515466536, 0.00040111781820218226, 0.000401117827615506, 0.0004011178346903688]
3 [0.33747777198019613, 0.21877277860906616, 0.14437469654023496, 0.09745079232248902, 0.06656348998404796, 0.03930788848626988, 0.032708758071839025, 0.015556610284813172, 0.0159729857629855, 0.0053502327934428755, 0.004007491675767085, 0.0035933947023724985, 0.0010531361092722927, 0.0007021422527171872, 0.00022479782711258122, 0.0003615314363253426, 0.00044642464822670285, 0.00048031312760390293, 0.0004902829460148191, 0.0004868021988151098, 0.0004782079650656593, 0.00046767294199133317, 0.0004575553475374536, 0.0004495211234106781, 0.00044331385059616233, 0.00043853129113748086, 0.00043511727336447656, 0.00043262418412328123, 0.0004309847144687851, 0.0004298182281086832, 0.00042939605853876435, 0.00042889455250696317, 0.00042866086725593897, 0.00042836699428116273, 0.0004280857667448867, 0.0004278676794049119, 0.0004275869068083049, 0.0004274811749783524, 0.00042761179688237616, 0.00042837740624784295, 0.00043026924525963026, 0.00043399272582679435, 0.00044027251064563734, 0.0004499119755112916, 0.00046270405662512303, 0.0004772049233965114, 0.0004910621264155998, 0.0005003038328344225, 0.0004999314185160635, 0.00048522124520624765, 0.0004510135037208259, 0.00040343123194565517]
1 [0.3247653201874485, 0.22669839899376917, 0.1421478782251625, 0.10109751607760395, 0.06475573044146062, 0.04764551099245813, 0.029738254990981015, 0.014831367456070723, 0.008342296800111308, 0.012312670890105716, 0.007884288968705003, 0.00039823633722782883, 0.00011204309648846586, 0.0001918202385636194, 0.00027698891464667647, 0.00035669301434748375, 0.00041993717808094935, 0.0004659343517172302, 0.0004961688489063458, 0.0005169449985850833, 0.0005274320327089778, 0.0005315335065269621, 0.0005309805390258965, 0.0005264690997013896, 0.0005205332858465616, 0.0005126335505611499, 0.0005048482845153668, 0.0004966372212270173, 0.0004896987736208464, 0.00048303317710927485, 0.0004779985205828054, 0.0004744952886274357, 0.0004726670536454503, 0.0004727484298816576, 0.0004749601070146896, 0.00047994843974928907, 0.0004865030439577048, 0.0004958269420759934, 0.000506419848417867, 0.0005188975677409802, 0.0005310792655649379, 0.0005431992804356509, 0.0005533734882567715, 0.000558862407900266, 0.0005619224402385059, 0.0005555156030951111, 0.0005460322242104944, 0.0005243107946714878, 0.0004980407052560375, 0.0004581461155052744, 0.00042471322946349894, 0.0004217384514539396]
2 [0.32174803553805487, 0.2281735054250434, 0.14740596382429572, 0.09848163249604014, 0.06868217415212499, 0.035252118508990446, 0.030647410606009867, 0.02506182445002516, 0.0057463915642726165, 0.009666204839093414, 0.006968548743611482, 0.0031737156562244764, 4.0639056399490765e-05, 0.00015515824534738173, 0.00023814332360383902, 0.00031441222746795595, 0.0003812403452657674, 0.0004331855219920193, 0.0004740406444830301, 0.0005017442926596627, 0.0005179699572197925, 0.0005265862054649875, 0.0005284063501086374, 0.0005256392728576757, 0.0005196798652229316, 0.0005118099718224645, 0.0005038020088882972, 0.0004954850879340587, 0.00048782996242087537, 0.00048136279901385003, 0.00047595977495057433, 0.0004725747095943504, 0.00047047779740102576, 0.0004708918323522359, 0.00047305711189992697, 0.00047793241261612375, 0.0004847302561197634, 0.0004940351500747221, 0.0005047052196529723, 0.0005172185857690016, 0.0005293988448163527, 0.000541523884797266, 0.0005516096822127453, 0.0005570023725535241, 0.0005598016680709074, 0.000553049031106277, 0.0005430680032715953, 0.0005207580596650127, 0.0004938605388788183, 0.00045340063047255287, 0.000419382318343437, 0.0004151273455103479]
6 [0.33641241074852835, 0.2156608034933158, 0.15120408628674198, 0.09539395340195536, 0.0651359986672159, 0.03897439804058546, 0.030244551416971646, 0.020396422607647895, 0.012461094747030749, 0.006777811601547531, 0.005699513090011897, 0.0033886023195843925, 0.0006486039747511526, 0.00023507762170417768, 0.000333260545425392, 0.00042963551721007597, 0.00047295338541385385, 0.0004907260970704062, 0.0004932385144587436, 0.00048798277182604153, 0.0004786143544950199, 0.0004678935615640075, 0.00045854592396786216, 0.0004510675350938178, 0.0004448457864172069, 0.0004402025558488161, 0.00043677533443801773, 0.0004342844518535342, 0.00043245966400366444, 0.0004313557058162655, 0.00043049290331297004, 0.0004299444905192567, 0.00042938684613848146, 0.0004290796482208296, 0.00042871971797317363, 0.0004284672252018299, 0.00042819127692606993, 0.0004280670962416249, 0.00042824776362908123, 0.00042905450272788867, 0.0004309160235550593, 0.0004346728513569077, 0.00044097385614190075, 0.0004505910949522913, 0.00046336027966035673, 0.00047787756699780687, 0.0004917692563376293, 0.0005011269835739808, 0.0005010797766928602, 0.0004870333198914354, 0.0004541274538538107, 0.00040848935082382946]
4 [0.3236070617318412, 0.2265943321774784, 0.14867730505158877, 0.09938476562794035, 0.06249299941774252, 0.04500114618423407, 0.02678549205914413, 0.01723796262172012, 0.016844783293742144, 0.004875130291314931, 0.006775446615664982, 0.0025011322545274773, 4.9034556482436905e-05, 0.00015981595139123798, 0.00024540279457075303, 0.00032570374322487156, 0.0003925747020442888, 0.0004456787531929976, 0.0004859005063606081, 0.000512007552849297, 0.0005281676987428276, 0.0005350955540788986, 0.0005357549520750233, 0.0005322284316440978, 0.0005250341910028949, 0.0005169906475853063, 0.0005082626822236277, 0.0004993288605635154, 0.0004918180481875075, 0.00048507988077062415, 0.0004798697636195485, 0.00047632173140468317, 0.00047460197660722126, 0.0004747023725297902, 0.00047701907102787067, 0.0004817561569727901, 0.0004890897531165554, 0.0004976804111778909, 0.0005090445624296067, 0.0005213219064627105, 0.0005335383245510318, 0.0005452312950094975, 0.0005554623434067446, 0.0005616893648218478, 0.0005625594590755584, 0.0005579311406515382, 0.000546819147216999, 0.0005253766873484032, 0.0004985526807230638, 0.0004562549565641223, 0.00042432114322131536, 0.000419039269895017]
5 [0.3225885446371559, 0.22928419711032128, 0.14692625340209176, 0.09771479054215941, 0.06689355923086493, 0.04137169629072006, 0.02699757603355988, 0.02024624807244856, 0.0059983249464581785, 0.015404954296965435, 0.004960650969080226, 0.002591447112230098, 4.963366430239377e-05, 0.00015602109338976232, 0.00024229136997603137, 0.0003197848359972204, 0.0003860437233582859, 0.00043823531580918017, 0.000476811082720375, 0.0005041473814193024, 0.0005193442332075829, 0.0005271171031604996, 0.0005280341570299181, 0.0005250834652366632, 0.0005189404175872473, 0.00051118584082244, 0.0005028951069982682, 0.000494918675191608, 0.00048734482663765147, 0.00048097744556900194, 0.000475830199340939, 0.00047244266993478495, 0.00047075396854406653, 0.00047068773635396447, 0.0004730912847435018, 0.000477765090874977, 0.00048505757284792947, 0.0004935665133162834, 0.0005048550111965788, 0.0005170794580148521, 0.000529248429729504, 0.0005408408601747278, 0.0005510207336816648, 0.0005571745305464524, 0.000558017290227099, 0.0005533812098017777, 0.0005422925107643567, 0.0005209404829556138, 0.0004942451949652539, 0.00045215294217035664, 0.00042049187335521356, 0.00041533062638094364]

===========================================================================================
python3 delay_tomography.py 3 2 uniform 0.5 500000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.191978269505935, 0.2034857095587296, 0.19762091553356476, 0.19810323994338594, 0.19539425761133472, 0.005734848093538357, 0.005346652726071845, -2.603949044540037e-23, 0.0023361070274398096, -2.31307549680221e-23, -2.2913914755939597e-23, -2.30989990293706e-23, -2.4304771195152867e-23]
3 [0.2072974246067235, 0.1927394824292541, 0.20534989254995362, 0.2017274547176881, 0.19012598090806085, 0.00012357233104520385, 0.0002233519414259552, 0.0003224943850132707, 0.00041259092575452144, 0.0004417942880378559, 0.0003967450659614806, 0.00034264750732696843, 0.0002767280116516086]
1 [0.1870117009135988, 0.20068122568623942, 0.21052016534272786, 0.2426654090874831, 0.12355286470889366, 0.03158427931816033, 0.002185002031954422, -3.3937947060672964e-06, 0.00021905039576321746, 0.00037842937590926824, 0.0003063469041484359, 0.00029172792957255845, 0.00037660580748146295]
2 [0.18786079727645855, 0.20576589880980906, 0.19914320142180544, 0.24389532332161865, 0.1296908679082308, 0.0325635803915129, -0.0008186555902880258, 3.2892180520718297e-06, 0.00023139661214273503, 0.000394602381925848, 0.00032297524463569373, 0.0003065028981338497, 0.00039400450349812773]
6 [0.2132654052175619, 0.1957732492050043, 0.19229898771501472, 0.20049208666930404, 0.19817027119311503, 9.925754467343368e-24, 1.4468410132312565e-23, 1.6928589969296036e-23, 1.8516673675439682e-23, 2.1182514269135227e-23, 2.1552653877166483e-23, 2.1944073530428276e-23, 2.2053334578564897e-23]
4 [0.1850595942075941, 0.20800193135489897, 0.20444567106535352, 0.23224109755674308, 0.13918708217137088, 0.03062756415293637, -0.0006761720589043224, 0.00013482541156458331, 4.673752487577214e-05, 0.00016304019330977111, 7.228622445204559e-05, 9.908256833760683e-05, 0.0003277133113632867]
5 [0.18442522093810135, 0.2100245496741435, 0.20793387227682988, 0.2279382928940542, 0.13358820694377674, 0.034208700516757354, 0.00017234242969520848, -1.7765608732154138e-05, 0.0001723015130835175, 0.00036425703069923514, 0.0003018092959131671, 0.00027601208896980593, 0.00037404486992680705]

===========================================================================================
python3 delay_tomography.py 4 2 geometric 0.5 500000  succeeded with stdout:
i_max is 54
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.3390212223349215, 0.22020754358957725, 0.1393813702102531, 0.10455570029784875, 0.055103347253475286, 0.049696465861848185, 0.027163525133903466, 0.01900298935392821, 0.009385893324025904, 0.011404549248976768, 0.0015526337533511474, 0.004730094713662088, 0.0005733749646204142, 0.0023980938219723374, 0.00037410775370356423, 0.0005220438931686088, 0.0004475668708815413, 0.0004362767200663777, 0.0003721728021067036, 0.0003971768817975045, 0.0004093202894258287, 0.0003384437045113635, 0.00039505000728106115, 0.0003647768476650088, 0.0003727684033673734, 0.0003877643444593382, 0.0003473877709569677, 0.0003821849703415641, 0.0003696832973503622, 0.0003640892420339004, 0.00037645871523434254, 0.00036508002543608325, 0.00037453290259407664, 0.0003645201147155796, 0.00037343629727765485, 0.0003671657217896041, 0.000370501564731725, 0.0003693858252236071, 0.0003695174810855793, 0.00037097530230908223, 0.00036772126338991166, 0.00037050938546704526, 0.00036931288041133347, 0.000369581654581103, 0.00036956824903678796, 0.0003695474643139561, 0.00036956276305827513, 0.0003695555456633694, 0.0003695601820660078, 0.0003695540202448029, 0.0003695616109693374, 0.00036955455356442625, 0.000369559518506025, 0.0003695569623791326, 0.0003695578224735145]
7 [0.3310769243533448, 0.22420406672784657, 0.14126493667073148, 0.09588159021953988, 0.07558089908896597, 0.03254422639510944, 0.034089998351874, 0.01502523391927707, 0.017022938114896878, 0.0025221929129995704, 0.009212867011240591, 1.885696340356671e-05, 0.004254140871563128, 0.00015620949447658629, 0.0002719179270544343, 0.00034515768572876144, 0.00040188371797194336, 0.0004256911032781983, 0.00044139944098462277, 0.00044391921119574175, 0.0004394760661425817, 0.0004319696058046829, 0.000426378400996486, 0.0004177332031852695, 0.000413175154480919, 0.0004079466458352872, 0.00040582372363404335, 0.00040296125960976605, 0.0004013226547624689, 0.00040036591110462053, 0.0003994749174485744, 0.00039897061697348447, 0.00039838065079830743, 0.00039831166387307765, 0.00039785613740754664, 0.00039767692675363354, 0.0003975196596836935, 0.00039725805415381603, 0.0003971910492909295, 0.0003967571141174685, 0.00039682675534735863, 0.000396915180668693, 0.00039759891376339154, 0.00039946076651370627, 0.00040326628233144967, 0.0004097849987320509, 0.00041896850864092287, 0.0004315310975489012, 0.00044600108236803125, 0.0004591212254354358, 0.00046795214087863243, 0.0004690022392878628, 0.0004550580528708194, 0.00042548865512110175, 0.0003825381717171639]
3 [0.31553049251537346, 0.23745056917420618, 0.13965969121777985, 0.10100748122016256, 0.06035731062944159, 0.06237156785048749, 0.011413836783853402, 0.01368633765880986, 0.029789671846352325, 0.0029506975835058022, -9.357614213445068e-05, 0.005806114507592304, 0.00019893420003109933, 0.00025877306122601374, 0.00015316384268836952, 0.0002699204578399218, 0.00035807340056828756, 0.00042021984993947145, 0.00046595289500021223, 0.0004931182491599824, 0.0005084362258460487, 0.0005182842948531707, 0.0005200265623488852, 0.00051611015266755, 0.0005102957477654995, 0.0005027219046842329, 0.000495063039790027, 0.00048613169544090094, 0.000478878154822209, 0.0004720661538456888, 0.00046658802888861333, 0.00046101821822427816, 0.0004578592383207822, 0.00045587626220210413, 0.0004533889545270341, 0.0004547509728176103, 0.0004548503956832098, 0.00045936941121671405, 0.00046368888643049956, 0.0004714747609822887, 0.0004801272031537237, 0.0004918201632748928, 0.0005016064047172655, 0.0005167650206472214, 0.000525612546645744, 0.0005371327255656408, 0.0005418583447569473, 0.0005454465321895838, 0.000538564195764629, 0.0005302216045693117, 0.0005090932574114426, 0.0004817107669538452, 0.00044841198757393833, 0.0004067815960245694, 0.00041406851783867815]
1 [0.30982438404067847, 0.2393430361872972, 0.15981765997337394, 0.0961019526561683, 0.04825115713755858, 0.03549405072000253, 0.04107862973465222, 0.022452249853605298, 0.01632745304993169, 0.004110375223989235, 0.003882341760273161, 0.001219066937055218, 4.717160770232606e-05, 0.00013708527759027472, 0.00020809958568532904, 0.00027712333305753153, 0.00034761377527569025, 0.000412477960222817, 0.00046928195168601726, 0.0005131309459869253, 0.000543675588993788, 0.00056503087401724, 0.0005772761610645419, 0.0005818616513950294, 0.0005807230191375811, 0.0005757490623697979, 0.0005680973302107017, 0.0005597297946329078, 0.0005507925309330117, 0.0005425557539621071, 0.0005362202772102311, 0.0005319569440638004, 0.0005296303398798609, 0.0005302679123396613, 0.0005326582294082492, 0.0005390169385658761, 0.0005456435531538515, 0.0005545595451637526, 0.0005656613251647353, 0.0005767226862990892, 0.0005855939841618805, 0.0005950475280429655, 0.0006039220228814279, 0.0006082086344445128, 0.0006095459076259672, 0.0006025380283915895, 0.0005956354668534645, 0.0005848406881324654, 0.0005632442304240584, 0.0005364546063062695, 0.0005055852821623611, 0.00046637149911253064, 0.00043897297724936453, 0.0004453474984715833, 0.00044243575177495146]
2 [0.3092555025833844, 0.23728557540692266, 0.15794731060064487, 0.09958561667983405, 0.056984824969486605, 0.035040146883861964, 0.03811750842967108, 0.013494852798192, 0.018332032111469037, 0.0072741019106463784, 0.004093934886047198, 0.0004965092703864483, 6.234552470076008e-05, 0.00015217398743719627, 0.0002185966358469428, 0.0002844997117926908, 0.000351649094142208, 0.0004150760777044598, 0.0004705851233269835, 0.0005133367116786043, 0.0005412695882564659, 0.0005609238681214201, 0.0005722739715485035, 0.0005767313472937155, 0.0005758830872053322, 0.0005713680853845819, 0.000564607277225015, 0.0005569679961442277, 0.0005488796256378705, 0.0005412636436648188, 0.0005353446922373695, 0.000531300210185456, 0.0005290948528605022, 0.0005298272512207984, 0.0005322741524780279, 0.0005385461284136014, 0.0005451665719136554, 0.0005539650021216194, 0.0005649669465673235, 0.0005759781058705493, 0.0005848297070211749, 0.0005942232041750233, 0.0006029997747024588, 0.0006071714408119394, 0.0006084351051667913, 0.000601373828484806, 0.0005943848028512743, 0.0005835061297401436, 0.0005618142039441383, 0.000534963443195797, 0.0005040617856928346, 0.00046481685955698657, 0.00043742269521327104, 0.00044382502866038457, 0.0004412504058089805]
6 [0.3100984706924703, 0.23007678186955902, 0.16238934262621801, 0.08799909907167872, 0.07179266234357137, 0.04351765375419391, 0.02323163596996957, 0.02716244022417616, 0.001626996968027118, 0.010564285133287044, 0.011362202286698958, 7.752890819946471e-06, 0.00014804133905643767, 0.00022391765304028693, 0.0002908316811784242, 0.00035117657596002937, 0.00040320855940723023, 0.0004474405136763772, 0.0004726166917069864, 0.0004943939165737523, 0.0005037975142206032, 0.0005110994920423473, 0.0005099419607196246, 0.0005091137897856487, 0.0005016710495885609, 0.0004954518981410839, 0.0004888990116719775, 0.00048178249519688945, 0.00047439251471649633, 0.0004686537041567001, 0.0004630485859355944, 0.0004589763874507055, 0.00045491667290077463, 0.0004530632126656627, 0.00045059230701954573, 0.0004519718285698356, 0.00045222406724557595, 0.00045654175816203796, 0.0004609657185789043, 0.00046867477169646317, 0.0004774329585634409, 0.000488986458398459, 0.0004988162621808311, 0.0005138341552914965, 0.0005225677837556217, 0.0005340610379287898, 0.0005387960530950308, 0.0005423666770594955, 0.0005357341933872413, 0.0005276897035221943, 0.0005072053305193855, 0.0004807859178106829, 0.00044897876819545023, 0.0004096553521599933, 0.0004182416976196282]
4 [0.31180663517430507, 0.23830748404404822, 0.15620095347787044, 0.09743491847597316, 0.05645792904803808, 0.03651714382999108, 0.03870533691812933, 0.01096480585796478, 0.01608349180814877, 0.009491217599944953, 0.006055825722204114, -7.569093833209395e-05, 9.935130868311248e-05, 0.00018317670380531398, 0.0002355655982502307, 0.0002882152752299829, 0.0003503703745414977, 0.0004112073433375842, 0.0004621515393354241, 0.0005009460244768533, 0.0005304813779319923, 0.0005507100935597438, 0.0005628017124813412, 0.0005682864627071971, 0.0005686921570697368, 0.000567017438672355, 0.0005622183510856275, 0.0005550523927202984, 0.0005467807098817409, 0.0005403325024948117, 0.0005352703351214898, 0.0005314051974933281, 0.0005287106352647501, 0.000528663367734149, 0.0005315589644205505, 0.000537788291154085, 0.0005444023126545006, 0.0005535948906401193, 0.0005619208970202628, 0.0005735174199201043, 0.0005848806960760462, 0.0005932379160666906, 0.0005991086539671219, 0.000605384809389401, 0.0006037397046582949, 0.0006019063127209838, 0.0005921494765988944, 0.0005774806202924502, 0.0005601131012642941, 0.0005335205481176357, 0.0004998505038403522, 0.00046231881090290296, 0.00043332962722740905, 0.0004436776685169859, 0.00043912003956330905]
5 [0.311644873009583, 0.23722178385600212, 0.15675202593868026, 0.09837221894719664, 0.05365525487577897, 0.040411278479318954, 0.03584889316750903, 0.01183727485445567, 0.018776306388067536, 0.008923870897284452, 0.004246030790054921, -6.021771873608629e-05, 0.00010902703156084949, 0.00019171693991519494, 0.00024764973861127226, 0.00030458332443614026, 0.0003667685688054226, 0.0004267745561927479, 0.0004763195177839504, 0.0005153995200819673, 0.0005436842748294953, 0.0005628844607693442, 0.0005735951390028564, 0.0005778231024628714, 0.0005775135077912791, 0.0005745490004274662, 0.000568830115812021, 0.0005610095899989898, 0.000552221695376104, 0.0005453017404552561, 0.0005397682716733782, 0.0005357514443145599, 0.0005329536023201966, 0.0005328776429290164, 0.0005357391022011463, 0.0005419575137583548, 0.0005486879262108905, 0.0005579738379516404, 0.0005663850788534706, 0.0005780251353255973, 0.000589508164959807, 0.0005979485249589479, 0.0006039290068155428, 0.0006103025534783713, 0.0006087472200199779, 0.0006070286066425983, 0.0005973757145536117, 0.0005827978627888227, 0.0005655479943166022, 0.0005390369116403031, 0.0005054094829790238, 0.00046789591489075584, 0.00043893783495410583, 0.00044939763748480586, 0.000444871952136878]
14 [0.3274420329474216, 0.21534660572203942, 0.15972912175014714, 0.09564049438701527, 0.06300079317365812, 0.044782548726409, 0.02521532520084111, 0.021179489909487294, 0.012415279716395928, 0.006026804615316521, 0.008681496660491719, 0.0004933894232291733, 2.773115933389018e-05, 0.00256158185038866, 0.0001787305146840892, 0.0003039491750270616, 0.0003842139515474963, 0.0004367200859938872, 0.00045440301288106035, 0.00046176041173020995, 0.0004581188733575126, 0.00045088000284937966, 0.0004398434090738972, 0.000434302272239213, 0.00042590452859691386, 0.0004216110099054113, 0.0004174705138526836, 0.0004152536877800492, 0.00041297084742184713, 0.0004114824320352168, 0.00041064833508579353, 0.0004099494620955976, 0.00040945529359373014, 0.0004090254169854889, 0.0004090665200458036, 0.0004086224778327453, 0.000408595174118487, 0.0004083551096047929, 0.00040822210904081085, 0.0004079954500019758, 0.00040794849263888345, 0.0004080777294217876, 0.0004088100847911462, 0.00041061779654918024, 0.00041449485182576266, 0.0004210392910218601, 0.0004303114427526015, 0.0004430024635127603, 0.00045770279782927063, 0.0004710794381458831, 0.00048006286404562374, 0.0004812860715951939, 0.00046675888274058365, 0.00043588828523145884, 0.00039019354861826437]
10 [0.325691364239793, 0.23223787171834073, 0.1271904813934852, 0.11297588865109358, 0.059596188186269994, 0.05176327324379604, 0.015668547020474637, 0.02806926429898591, 0.014550707956095123, 0.0036054531653756665, 0.005423122897965363, 0.0012942170997006907, 0.0025833337321632234, 5.055236249502061e-05, 0.00015546898459214547, 0.00024330204641534846, 0.0003232980652935774, 0.00038685707847818635, 0.0004413265397932201, 0.0004747770439833941, 0.0004997041805679374, 0.0005114977299928837, 0.0005140026770747077, 0.0005129881238488542, 0.0005076326800983939, 0.0004982812524512312, 0.0004911065998387466, 0.00048166678535002953, 0.00047512998797195975, 0.0004671844410132777, 0.00046261469820579583, 0.0004570511902207316, 0.00045423081359875534, 0.00045160913462334823, 0.0004502902845879467, 0.0004499305240991609, 0.00045243641951234296, 0.0004541597276823653, 0.0004607414667307295, 0.0004668578900660168, 0.0004774222039434098, 0.0004852757599013591, 0.0005005657413619609, 0.0005104111490568143, 0.0005228953354437262, 0.000531592615287081, 0.0005392908198956335, 0.0005388752063597204, 0.0005367100843181591, 0.0005212007241815367, 0.0005075532292084863, 0.00047486489007319974, 0.00043872533390631096, 0.0004028195602140979, 0.0004054774322646857]
8 [0.3063265389162865, 0.2393994811115013, 0.15989729376467043, 0.09843307432634187, 0.05294611216332152, 0.03904609379249782, 0.03954523512554784, 0.013713334740681083, 0.014818069891153723, 0.007362102601097248, 0.005342805601805278, 0.0012764346065187496, 3.188806039383342e-05, 0.00013112957650734128, 0.0002010178266287609, 0.0002667789399125074, 0.00033299989916225686, 0.00039709425016824866, 0.00045404012094433165, 0.0004986714517179851, 0.0005315395077903637, 0.0005542650885049173, 0.0005678929129357255, 0.0005747146765309947, 0.0005761127153291572, 0.0005723050107277745, 0.0005657058772626578, 0.0005577859405044199, 0.000549900826252505, 0.0005421993879354579, 0.000535811235919539, 0.0005307292097904816, 0.0005287331399310039, 0.000529683933103605, 0.0005319777272293679, 0.0005366836423069965, 0.0005450076133529461, 0.0005530792852895844, 0.0005646092446421548, 0.0005746349403759648, 0.0005849984386262572, 0.0005933065954645066, 0.0006026299179809876, 0.0006067546003303268, 0.0006065817957795797, 0.0006027997205617823, 0.0005933086191031755, 0.0005803089422522982, 0.0005623569174100489, 0.0005342167956959572, 0.0005025035860334811, 0.0004612419666737926, 0.00043657387942160124, 0.0004416563034096504, 0.0004386589659008086]
9 [0.30697470700738205, 0.24142758753974844, 0.15963431331779843, 0.0940029819721591, 0.05352211600129412, 0.0379756404950243, 0.040498282616323766, 0.01801692720632671, 0.012933466221112638, 0.0037304456961685705, 0.0074823901781247105, 0.0021234770547032284, 5.9361788887837355e-06, 0.00011696887724508401, 0.00018947182188214828, 0.0002520747406079363, 0.0003171933291099728, 0.00038084318903959893, 0.0004389464308945989, 0.0004848878299843665, 0.0005205555523864997, 0.000545356301985015, 0.0005609449396890261, 0.0005697310386390819, 0.0005724724705163917, 0.0005698574387725835, 0.0005643591026345865, 0.0005572887496882192, 0.0005498555305492635, 0.0005420133592632102, 0.0005357725338623169, 0.0005306219465727176, 0.0005284156048428942, 0.0005291722842716729, 0.0005313391047580282, 0.0005358148002998272, 0.0005439126701138438, 0.0005519453126856084, 0.0005632654158259436, 0.0005731619216507164, 0.0005834205873736692, 0.000591600506946415, 0.0006008156810343951, 0.0006048508977498973, 0.0006045492020295524, 0.0006006270414131672, 0.000590987507458675, 0.0005778395972437223, 0.0005597501447936061, 0.0005315008906461719, 0.0004996964595178526, 0.000458388182653692, 0.0004335599499925488, 0.00043835399784166384, 0.00043481353157310935]
13 [0.3228745461362854, 0.22937161035841255, 0.14536543564436083, 0.09898259701686579, 0.060141579220319444, 0.05132000987241518, 0.027992687878214417, 0.015957675573271622, 0.01170949773752664, 0.00938618459866752, -5.403962514906722e-05, 0.007379680811047416, 8.450310511586449e-05, 0.00013731165391355196, 0.00020088595413913818, 0.00027556087397193687, 0.00034735974672898533, 0.0004051579459755193, 0.00044710777780590646, 0.00047671219000095183, 0.0004943412427571413, 0.0005041087631379748, 0.0005077151030933565, 0.0005065519767537254, 0.0005008817621999877, 0.0004948806656666668, 0.0004873013099028924, 0.0004798800223622715, 0.00047227316678877745, 0.0004662504850299285, 0.0004604008388938107, 0.00045573880947642124, 0.00045220598402822984, 0.00044971785159470776, 0.00044851722491802637, 0.0004478198603605908, 0.00045058311087887553, 0.0004523326163195715, 0.00045884849077653354, 0.0004651137798511384, 0.0004756365797197171, 0.0004834867236771844, 0.000498810046560022, 0.0005085698906003408, 0.0005209560505904781, 0.0005295792542325771, 0.0005372251210675513, 0.0005367191426476729, 0.000534590650451193, 0.0005190109278359565, 0.0005054647739207701, 0.00047270248380660315, 0.0004371153151782486, 0.00040293898512493723, 0.00040915150488885583]
11 [0.31009073629318373, 0.2377673342599259, 0.16065213861682462, 0.09937911620613027, 0.048390081588137526, 0.03505799751380905, 0.041897910370562966, 0.014465975310988753, 0.016336787330250253, 0.008136182102913926, 0.004972093792355565, 0.0009439660317055163, 4.3586305282104947e-05, 0.00013883760003522268, 0.00020509306481854452, 0.0002697439078709144, 0.0003380989368015086, 0.0004019018179611274, 0.0004567901426915114, 0.0004999322804149365, 0.0005320854438805685, 0.0005539606045051455, 0.0005671971169245306, 0.0005727568893486243, 0.0005735205661759112, 0.000570130115378057, 0.0005638642574211762, 0.0005563184641021063, 0.0005482853685466202, 0.0005407791685236626, 0.000534825287508572, 0.0005307122648470583, 0.0005287313637242856, 0.0005289543845535746, 0.0005320753289899762, 0.0005372388636740845, 0.0005442269175925758, 0.0005532220211262987, 0.0005637951748481806, 0.0005736324156191562, 0.0005845489744130687, 0.0005933592110229494, 0.0006015157761054768, 0.0006044494251765766, 0.000607186229515917, 0.0006015883370948144, 0.0005937492360265234, 0.0005794881934285466, 0.0005604659785869892, 0.0005348848131427744, 0.0005027863659452826, 0.00046098661216506715, 0.00043468737094705704, 0.00044307555783109406, 0.000438012793811559]
12 [0.30953332807147704, 0.2373019802601758, 0.15881843850086497, 0.09482163464294709, 0.05493849609433192, 0.042990704090822056, 0.03701718132147294, 0.011557011280294405, 0.01642878184360908, 0.009759118350819659, 0.004812234658170321, -6.768836515000868e-05, 0.00010502279643283923, 0.00018698201086290474, 0.00024063937961118915, 0.0002955987264599817, 0.00035694211498438016, 0.00041615034578701025, 0.00046713811780827244, 0.0005070316806500238, 0.0005347266637034989, 0.0005534312061781088, 0.0005649433885085018, 0.0005704133188708506, 0.0005705401916610185, 0.0005666966334508662, 0.0005609528565697033, 0.0005539445052531014, 0.0005462298099214861, 0.0005390059313142175, 0.0005330977329549396, 0.0005289016642678133, 0.000527060460757865, 0.0005273477371297605, 0.0005305088210906927, 0.0005356130557105858, 0.0005425825244001828, 0.0005516213750037823, 0.0005622707521960135, 0.0005720977236913127, 0.0005830044137818592, 0.0005918157190392148, 0.0005999518395400042, 0.0006028936449597711, 0.0006056744878766483, 0.0006000770782302628, 0.0005923064906096313, 0.0005781595418516937, 0.000559334051084951, 0.0005340027301867106, 0.0005022408201122398, 0.00046085322407925396, 0.0004352253070933834, 0.0004445505011269028, 0.00044030745190184084]

===========================================================================================
python3 delay_tomography.py 4 2 uniform 0.5 500000  failed with stdout:
b'i_max is 16\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 2 geometric 0.5 1000000  succeeded with stdout:
i_max is 39
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.33185376157083646, 0.2201984183888061, 0.14889218652429137, 0.09693745269828043, 0.06617282504713248, 0.043186998996201334, 0.028138420992333976, 0.01890386419433101, 0.012662370575404171, 0.007808010498947403, 0.004866251062518125, 0.00338085658350965, 0.0017104443378204855, 0.0008966965460146679, 0.0006725660305659275, 0.0006281728784708628, 0.0005846002509605601, 0.0005642922516884274, 0.0005495092062795996, 0.0005434861105787178, 0.000533094672892626, 0.0005273811077002074, 0.0005284042735463185, 0.000519322534064141, 0.000525245623484803, 0.0005203496794233687, 0.000521610547406132, 0.0005199130732617965, 0.0005203067103545154, 0.0005215500287445774, 0.0005200858372172054, 0.0005195157715698539, 0.0005199641062399558, 0.0005199684175823003, 0.0005197138193580418, 0.0005200784933459938, 0.0005197134134795141, 0.0005198255586506708, 0.0005200793818449336, 0.000519713740792029]
1 [0.33342416489411597, 0.2197976973532942, 0.14694748065069524, 0.09872225007230659, 0.06532700428529764, 0.04229635287808495, 0.02893841154282451, 0.01935054499649176, 0.012475088822794397, 0.007491228892017703, 0.0049223639058448366, 0.003588520589957543, 0.001663417066842909, 0.00021543102574327815, 0.00037551230781594953, 0.0004862240117905399, 0.0005510913697506368, 0.0005844524562301245, 0.0005952717945296973, 0.0005931568353495997, 0.0005850824570598455, 0.0005752961379528616, 0.0005654364550612093, 0.0005568906050171093, 0.0005503422578308465, 0.000545301573808505, 0.0005419972970513403, 0.0005404574334776447, 0.0005410652370110053, 0.0005442895722443648, 0.000551001621317464, 0.0005614550939936694, 0.0005752810829620194, 0.0005911327237101444, 0.000605823293545125, 0.0006141579110724047, 0.0006101448523828264, 0.0005879636599727212, 0.0005417298341859468, 0.00047697830021855095]
2 [0.3321190531808753, 0.22199609238243875, 0.14726149989115672, 0.09900621625649322, 0.06428676416583719, 0.0421940150471219, 0.029133777849479344, 0.018937486131765824, 0.011865386435630247, 0.007589373213055615, 0.005251269521875318, 0.0030295160827575078, 0.002393089510644918, 0.0002029865647462148, 0.00036136175953929695, 0.00047041907361267436, 0.0005375706103464548, 0.000574405206781442, 0.000588530662943842, 0.0005887264546301188, 0.0005821921559286157, 0.0005733089495435128, 0.000563885592305901, 0.0005556232290561836, 0.0005492601611494759, 0.0005442399347172094, 0.000540946733040331, 0.0005393024196093454, 0.0005398116075989753, 0.0005428763026412774, 0.0005494573866283092, 0.0005597539353431062, 0.0005734553977507213, 0.0005891871791102824, 0.0006037240907349722, 0.0006118766338232436, 0.0006076189147363731, 0.0005851683023647099, 0.0005387295553805286, 0.0004739481656429253]

===========================================================================================
python3 delay_tomography.py 2 2 uniform 0.5 1000000  succeeded with stdout:
i_max is 8
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.2010771376478785, 0.1961814016467421, 0.20139994474530376, 0.1971765897026837, 0.19660190407531253, 0.0015071825344629651, 0.001885227126396857, 0.001584900349263381, 0.0017180512676133132]
1 [0.19639823031375936, 0.2008771086448787, 0.2000552833542314, 0.20057298757452363, 0.20025022516758753, 0.0002512197041416675, 3.277318558554419e-23, 0.0015949452408776492, -4.411265965269658e-23]
2 [0.19711697902122016, 0.19978538657387834, 0.20030451185387116, 0.20134883469838794, 0.19934044750788796, 0.0021437138106880013, -3.987346593366157e-05, -5.695152950467451e-23, -6.267973992709782e-23]

===========================================================================================
python3 delay_tomography.py 3 2 geometric 0.5 1000000  succeeded with stdout:
i_max is 51
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.3330499468914203, 0.2203818773549565, 0.1507018053312359, 0.09441077421768794, 0.06552062780118285, 0.043558451401517116, 0.02754528742862793, 0.01920360812499253, 0.011219812644503929, 0.007763436210562554, 0.005413362726945295, 0.002670263622070862, 0.00176479031574904, 0.0007580763027802652, 0.000560028100625648, 0.0004928581385319484, 0.0005041848655468402, 0.00042961909870165645, 0.0004458098845091132, 0.00041543818146934537, 0.00042542407968902115, 0.0003984534680460139, 0.00041475377095972197, 0.0004005242385815927, 0.00040134336864139884, 0.00040155994902636906, 0.0004065455091974017, 0.00039584913045093135, 0.000402323652596479, 0.0004030724722904271, 0.00040061049606286556, 0.0003996433600236446, 0.00040167655203113305, 0.00040046784758900305, 0.0004004999827619296, 0.0004003645279314831, 0.0004006388862518569, 0.000400555974231784, 0.0004005558074428467, 0.0004005603217473047, 0.00040055752433362096, 0.00040055946288464954, 0.00040055837424073646, 0.0004005587563241066, 0.00040055856186994, 0.00040055875262317756, 0.00040055863949260245, 0.0004005586708865825, 0.00040055867957637626, 0.0004005586664691419, 0.00040055866805913706, 0.00040055867113440036]
3 [0.3319495045592694, 0.22157475503687338, 0.14602299075063208, 0.09587018337649278, 0.06771604097376044, 0.04046880981434209, 0.03290854722779846, 0.017025044055896492, 0.01262824285192088, 0.00802412986978927, 0.002514273173452007, 0.00315334122164731, 0.0030020671438472507, 0.0001653166961462929, 0.0002910779833812921, 0.0003791533427761394, 0.00043273327324544605, 0.0004629923862552947, 0.0004751242685729257, 0.00047543129262210077, 0.0004698548553055914, 0.00046094114356184024, 0.00045238195443006554, 0.0004453110301992898, 0.00043884787564944604, 0.00043426233138924134, 0.00043086347456780804, 0.0004284477423157423, 0.00042671408601848326, 0.00042571473332110083, 0.0004249204941418249, 0.00042448504636949836, 0.0004240772700014751, 0.0004238316355749923, 0.00042349250531336876, 0.0004232950784495551, 0.0004229748459898328, 0.0004228460317451313, 0.00042297845362390375, 0.00042373731954081057, 0.00042561305093349747, 0.00042934584280663197, 0.0004355973021729506, 0.00044511721486402336, 0.00045773912615782684, 0.00047212381027719557, 0.000485923387035625, 0.0004948312818434139, 0.0004944756737385032, 0.0004799582222535611, 0.00044660187991992536, 0.00040057828961282717]
1 [0.3241578544226328, 0.2279643720856391, 0.1435562248457093, 0.10192525455093693, 0.05765378959816182, 0.054758525515169354, 0.020543882341755786, 0.023240557436355766, 0.00826959139460793, 0.009917397834711478, 0.0075942684680853885, 0.0011264871201138325, 7.674891961883905e-05, 0.0001727433564585255, 0.00025953366194048647, 0.00033968045033790247, 0.0004056271050497416, 0.00045631209223709736, 0.0004920428547031897, 0.0005159305109162152, 0.0005291168236932032, 0.0005338445874301969, 0.0005333749507253239, 0.0005290724154699764, 0.0005219585070530561, 0.0005140375586444543, 0.0005058280123164376, 0.0004975339924751627, 0.0004903130710559021, 0.00048374239465436957, 0.00047869504372574856, 0.0004751398577629416, 0.00047336438704861613, 0.00047353796991051264, 0.00047602457127974386, 0.00048081623262213186, 0.00048739142280617754, 0.0004968599413181672, 0.0005079839374925953, 0.000519348187841914, 0.0005326335532061504, 0.0005445841199176843, 0.0005539868247385166, 0.0005609620472599269, 0.0005625373906229941, 0.0005570342882004595, 0.0005462571852910031, 0.0005247648463249069, 0.0004984509484567685, 0.00045742414856697134, 0.00042417939122270837, 0.00042010709175278665]
2 [0.32327089747159576, 0.22604711531765354, 0.15086108689688843, 0.09667247946772237, 0.06591444125761414, 0.03670179216123397, 0.03449563008539671, 0.018286323799129187, 0.011900918145669289, 0.007612276582469346, 0.007157043455956556, 0.0018079463752343605, 6.179177378522915e-05, 0.0001654602900516543, 0.0002522898476608801, 0.0003318394888272464, 0.00039893059884965105, 0.0004514225067279659, 0.0004892787924467513, 0.0005153511818460696, 0.0005296423911037198, 0.0005357904754906114, 0.0005355682677124277, 0.0005315430973655294, 0.0005242752854611745, 0.0005159486528568718, 0.0005074844894939393, 0.0004990279986684387, 0.0004913624125606467, 0.0004848540665889615, 0.00047958003041735924, 0.0004760459606033613, 0.0004741600250274947, 0.0004744158003972778, 0.0004768711344457393, 0.00048163048604383456, 0.0004882782296315754, 0.0004977406599305981, 0.0005088594244564408, 0.0005203089180468851, 0.0005335824772272229, 0.0005455748757122501, 0.0005549881572122424, 0.0005619713454855005, 0.0005635127695204603, 0.0005579331888562853, 0.0005470481282026193, 0.0005253959580403592, 0.0004988994440884549, 0.0004576808886389708, 0.0004242342697325641, 0.00041987608854247323]
6 [0.3317039957239337, 0.21823885128109347, 0.15053447690730018, 0.0980365811482162, 0.06386698015043057, 0.040908757142612086, 0.029524371237851975, 0.01873022633731497, 0.015310204510188994, 0.00581628226875342, 0.006583791939577949, 0.0019049117550842187, 0.001056745377564052, 0.0005110057795635457, 0.0002158202086176534, 0.0003998357478091696, 0.0004721677820074918, 0.000491423005256618, 0.0004979311373055806, 0.0004928529629628904, 0.00048159959152696953, 0.0004720512228582207, 0.0004610857019815635, 0.00045336800538737235, 0.0004476267889499814, 0.00044210403846998915, 0.00043876671526176794, 0.00043618059088148213, 0.0004343047451805931, 0.00043291569377319755, 0.00043230871806933274, 0.0004314137043725601, 0.0004311009926159893, 0.0004306703766659768, 0.0004304479010195672, 0.0004300633827126187, 0.00042988776460217064, 0.0004297194344187784, 0.0004298701603838348, 0.0004306254210734495, 0.000432557184100566, 0.00043624991652801135, 0.0004425222236416741, 0.00045208275503618995, 0.0004648006702809191, 0.00047931713617742393, 0.0004934304435118367, 0.0005027602869600394, 0.0005029303855733806, 0.0004890389710395316, 0.000455713575673242, 0.0004079004875294052]
4 [0.325718600451383, 0.2267945411329506, 0.14714492409877944, 0.09781752552346593, 0.06205810482077806, 0.045242067039158174, 0.02549499670806383, 0.02142767087882251, 0.015256699917770922, 0.004870729561807386, 0.005235094718787494, 0.0037806134515489913, 3.6169449623475217e-05, 0.00015347852306131867, 0.00023873691648077457, 0.00031686833465669275, 0.00038511669410763445, 0.0004392937564351656, 0.00048051622732525455, 0.0005080847412528408, 0.0005253504913080028, 0.0005335362286801998, 0.0005355769217826999, 0.0005323438114618958, 0.0005255138054512501, 0.0005175546166626419, 0.0005087433544214389, 0.0005000061373684729, 0.0004921039218214222, 0.00048535089595891335, 0.00047998265418362784, 0.0004762487251740604, 0.0004745103553899438, 0.0004746530535564683, 0.00047701045214355777, 0.00048192878502274317, 0.0004889497575006888, 0.0004979677919926151, 0.0005090714408071857, 0.0005214662271821193, 0.0005340381896918372, 0.0005452478954541841, 0.000556066784038222, 0.0005611330985689363, 0.0005630769348275529, 0.0005580071006932642, 0.0005459226072340907, 0.0005256479020207213, 0.0004973782807658212, 0.00045587282855797024, 0.00042327410324163005, 0.00041780750025786017]
5 [0.3239719057858136, 0.22955331368721274, 0.14291413166172537, 0.10211335871561267, 0.06173627247761016, 0.04752677191522818, 0.023175410617051074, 0.02157933616411041, 0.0070882554781253855, 0.01298538708408863, 0.0056311086614862695, 0.0026742777681186937, 4.827860359677113e-05, 0.0001559139592077126, 0.00024236911480302606, 0.00031955043307593215, 0.0003860434279433213, 0.000438610884815261, 0.0004778241445782964, 0.0005048248728037859, 0.0005202856152443239, 0.0005283057533657816, 0.0005297087342789089, 0.0005264507012483638, 0.0005203150981418194, 0.0005123409631586891, 0.0005040190596649977, 0.0004959124559634634, 0.00048820955356587866, 0.0004817834797553264, 0.00047656336915028515, 0.00047294671482197095, 0.0004713039173345099, 0.0004713560214499074, 0.00047373325297345853, 0.00047858389168649773, 0.00048558983590793437, 0.0004945141113519202, 0.0005055886808264863, 0.0005179184635308422, 0.000530465525297077, 0.0005416108483493366, 0.0005524017276063655, 0.0005574625619252855, 0.0005594363267246839, 0.0005544320066296095, 0.0005424651622820968, 0.0005223716891194397, 0.0004943343742322612, 0.00045309807302487237, 0.00042084006993355766, 0.00041568745198355267]

===========================================================================================
python3 delay_tomography.py 3 2 uniform 0.5 1000000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.19581067913926906, 0.2043237904213816, 0.192191972103113, 0.19745303618519724, 0.19986909959770863, 0.0015042957859718203, 0.00038708067926649997, 0.001758652154714925, 0.0010341085826939863, 0.0011907980090920455, 0.001225869136868641, 0.001079540700399131, 0.001347670007597646]
3 [0.20174574239996232, 0.19377835756089146, 0.20594631678727998, 0.20180336135023086, 0.19458676740312467, 2.444717175913153e-25, 0.0021394544985106367, 1.7184794167600557e-23, 4.755478633586369e-24, 9.21378368040763e-24, -3.1094122861950202e-24, -1.7326286931138794e-23, -1.74913266353819e-23]
1 [0.18946558662030144, 0.204507545770665, 0.2016639160418366, 0.23976634109983858, 0.1333039530887934, 0.02719852530742139, 0.002301291137783111, -8.939092644125705e-06, 0.00020162171790564102, 0.00037505933670785264, 0.0003029754378502642, 0.0002936495583802546, 0.00038704557620698483]
2 [0.19873263431298205, 0.20617555887854622, 0.19112073106587296, 0.20666287104340353, 0.19534494145619263, 0.0018031058872099777, 0.0001601573557925936, -3.479996621917876e-20, -5.830670896021561e-20, -4.286315439239541e-20, -5.655477030677758e-20, -3.8263335878409383e-20, -2.3034545358734666e-20]
6 [0.19907684752560956, 0.198249304052224, 0.20146186343891448, 0.2051015103915352, 0.19174615433921477, 0.001147797143930118, 0.003216523108571896, -1.5360719168078557e-23, -2.0912934115060604e-23, -1.5396211991153007e-24, -3.2514430104183073e-23, -7.467453887086298e-24, -4.137099382557561e-24]
4 [0.18809311149600197, 0.20737190440568798, 0.20285550897858207, 0.23584342542935474, 0.13281450487048332, 0.032050527267589016, -0.0008710085260108858, -7.3778797372932206e-06, 0.00021237547128981186, 0.0003854513734247737, 0.00031775994127592074, 0.0002936300611388042, 0.0003931513307445142]
5 [0.18507555709788903, 0.21307088704487992, 0.2024615482155283, 0.23698071090338763, 0.12704690953632702, 0.03248422986672651, 0.001119195494389302, -1.750621469885569e-05, 0.00020144432646181099, 0.00037187221447358476, 0.00030542200005425843, 0.0002822064320355942, 0.00038164009335886007]

===========================================================================================
python3 delay_tomography.py 4 2 geometric 0.5 1000000  succeeded with stdout:
i_max is 61
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.3316606147407095, 0.22639350530827795, 0.13786952322304546, 0.10427982988092033, 0.060991858772177804, 0.04501308040413252, 0.028547601666534667, 0.01795962149843893, 0.01116361843359227, 0.009826591672007159, 0.0018087201625511307, 0.005359075759580327, 0.00043384148299142997, 0.002197014212632968, 0.00039823534341002187, 0.00041467889712671566, 0.0004909977113651297, 0.00031102444485391306, 0.00038952585556135163, 0.0003475399395568746, 0.00035044950199215137, 0.00032719195529267125, 0.000340910570740222, 0.00032541451532612357, 0.00033532238398518185, 0.00033963441254436483, 0.0003173747163086303, 0.00033861470328067425, 0.00032538388040073305, 0.0003290561632295516, 0.00033588448415327547, 0.00032313002184699045, 0.0003341072929997625, 0.00032671860265330154, 0.0003314290363332098, 0.0003284793284479685, 0.00032936637908724336, 0.00033034845536868563, 0.0003284967875330372, 0.00033055698413511414, 0.0003284746277071901, 0.0003298853275348901, 0.00032934638420801035, 0.00032945151822523, 0.0003294441047914573, 0.0003294474360284372, 0.0003294417964836557, 0.000329444778454441, 0.00032944665552522596, 0.0003294414902283491, 0.00032944695044478424, 0.00032944295884593743, 0.00032944535226037505, 0.0003294440454808565, 0.00032944473968692274, 0.0003294443583775987, 0.00032944457537676893, 0.0003294444649867938, 0.00032944450183328025, 0.00032944450364282224, 0.00032944449190462383, 0.00032944450045139444]
7 [0.3357094912168632, 0.21649167471005562, 0.14760610888228604, 0.09588588500604972, 0.06499661452160067, 0.04585221000542926, 0.024703191183942944, 0.01815086746771649, 0.01764263161085764, 0.0013476563374961886, 0.008955868325838695, 1.2740942055492574e-05, 0.003906166906885283, 0.0001444165229857378, 0.00025834542827870937, 0.0003277912210309852, 0.0003794071574912875, 0.0004055490029193222, 0.00041688025452964536, 0.0004184190522368436, 0.0004132062271529413, 0.0004053220472236728, 0.0003988749641465623, 0.0003895290624269159, 0.0003854312147499832, 0.00037936628979714533, 0.0003769625877682708, 0.0003741307415720019, 0.00037225844514277956, 0.000371343617459099, 0.0003702631594607323, 0.0003698566967942068, 0.0003693409850726491, 0.00036915150644731417, 0.00036886585480171976, 0.0003687640450253075, 0.0003686231882608843, 0.0003685476662187705, 0.00036853324392618756, 0.0003684403015786912, 0.0003684471153887452, 0.0003684077489260728, 0.0003683419793384359, 0.0003683038089406849, 0.00036814298029647915, 0.0003680861253888603, 0.00036774356520670156, 0.00036777357771190366, 0.0003677738246931409, 0.0003684748463901763, 0.0003702466357925231, 0.0003738084347248516, 0.00038017371843468455, 0.00038935996308126235, 0.0004017415497441349, 0.00041633032565281837, 0.0004299336626756945, 0.00043988407298380566, 0.000441029908277578, 0.000429175405798029, 0.00040218609163146225, 0.00036307136080684487]
3 [0.3169045473356278, 0.23623209194610284, 0.1413557099726657, 0.10043585521352899, 0.060357165977242284, 0.059143865594689114, 0.013145389050204848, 0.013237555627473994, 0.027633216658313073, 0.004777019372483294, -3.524988766244855e-05, 0.00564934250293765, 4.4542206493814406e-05, 0.0001349721203716886, 0.00020861323264857983, 0.00027746010972127947, 0.00033690161970410657, 0.0003882794415039319, 0.0004235189189445653, 0.0004488548130915417, 0.00046423612793485453, 0.0004734196193091259, 0.00047453503745881914, 0.0004709495429432256, 0.0004661497515729618, 0.0004585870766745982, 0.00045107968463117153, 0.00044345647293919676, 0.00043678684765812277, 0.00043126589083451207, 0.00042680047794235124, 0.00042340632512698917, 0.000421024392434903, 0.00041936709628369095, 0.00041781325694955246, 0.00041707027175993076, 0.0004155794424586238, 0.00041508316559706683, 0.0004136345736114239, 0.00041297715295506287, 0.0004122890185086698, 0.00041172575608375744, 0.0004126096611706322, 0.0004138441149707469, 0.0004180142042179942, 0.00042148747815902367, 0.00042946174205608163, 0.00043744412527492807, 0.00044852007241699546, 0.0004581261691625923, 0.000472332716212521, 0.00048100431645760723, 0.0004933877774801323, 0.0004964986010080538, 0.0005011579578668263, 0.0004977485976708279, 0.0004858799439107821, 0.00047247164660179427, 0.00044508157791324314, 0.0004166095170054443, 0.0003761021622204933, 0.0004044301131285483]
1 [0.30786426857453586, 0.23996505624822634, 0.15729277908859524, 0.09504011195878256, 0.053608289701517375, 0.03850478975743793, 0.038860243147972456, 0.01658613274445376, 0.0168315808556017, 0.008377961528201555, 0.0032152727795783757, 0.00032373052182094815, 6.914285990031909e-05, 0.00014896304025016082, 0.0002062238888716428, 0.00026489680943649746, 0.0003273547039577573, 0.0003857874446109309, 0.0004361726693627734, 0.00047414449770739897, 0.0005001266573307771, 0.0005180376812564418, 0.0005284624177077412, 0.000532545560171267, 0.0005323697155663895, 0.0005288038832930344, 0.000522726882692015, 0.0005149830171127629, 0.0005062750114976475, 0.0004975260291744475, 0.0004890908582792376, 0.00048094769820028856, 0.00047358886364560896, 0.00046756807866931967, 0.0004629818704473877, 0.00045950300545264424, 0.00045762979615471163, 0.0004575670195463609, 0.00045911103396508075, 0.00046272672005453813, 0.00046771057280313195, 0.000473702012514521, 0.00048276601436628825, 0.0004918836920980412, 0.0005022793626340313, 0.0005126268222841184, 0.0005242719078759458, 0.000533920047475217, 0.0005428833039017737, 0.0005503732800318198, 0.0005546215583958798, 0.0005565745434899141, 0.0005507384084924679, 0.0005436293220075593, 0.0005358570081973532, 0.0005169172748352839, 0.0004927414280397294, 0.00046725777255463897, 0.00043015709239724726, 0.000405066732448476, 0.0004116436286873826, 0.00044580519032442806]
2 [0.30797699878302054, 0.23918795455126865, 0.1578105374687287, 0.09681626891116368, 0.05363409383209037, 0.0366323979962775, 0.04182584266239723, 0.016022958448967596, 0.01570961737492885, 0.005871255702831039, 0.00462266827803072, 0.00031463301361518193, 6.323487420073674e-05, 0.00014515215285476564, 0.0002028708728846791, 0.0002618017419263852, 0.0003248343073308866, 0.0003839499741482685, 0.0004352261785775508, 0.00047455879404762293, 0.000500691371642212, 0.0005195226576903234, 0.0005306037786694817, 0.0005348663435219983, 0.0005349915405287488, 0.0005313215333512019, 0.0005252576920287487, 0.0005172134556705348, 0.0005083635765080403, 0.0004994032942274851, 0.0004906850414280838, 0.0004823317665734482, 0.0004749231783019308, 0.0004688177918435033, 0.000464221097333216, 0.0004607133353781377, 0.00045889586478581963, 0.00045885079498930725, 0.0004604342934931177, 0.0004641155313937354, 0.00046916200525436017, 0.0004752112444441884, 0.0004843128424408906, 0.0004934677251691686, 0.0005039072293939843, 0.0005142882618677664, 0.0005259423321606726, 0.0005356100432129733, 0.0005445843643894237, 0.0005520816429174093, 0.0005563261193227789, 0.0005582596666135052, 0.0005523955538236816, 0.0005452287172771691, 0.0005373759356868416, 0.0005183590277079272, 0.0004940950393056633, 0.0004685061527728523, 0.0004312965404632768, 0.0004060294815640987, 0.00041233509083333174, 0.0004463977095147399]
6 [0.31631606631290177, 0.23155235219739462, 0.14778633559136728, 0.09708269840547418, 0.0710091153106121, 0.03738360555286335, 0.0317259055602066, 0.01896490167797929, 0.007805162621228822, 0.01008820224075914, 0.008579652583773249, 3.9370898389352274e-06, 0.00014136327647015648, 0.0002101708733067272, 0.00027371618035929756, 0.00033361658215258304, 0.00038175793274172157, 0.00042107505753982705, 0.00044506333991938565, 0.0004649327204830219, 0.0004725611301567935, 0.0004778014324713031, 0.00047609226059701067, 0.0004737517151688642, 0.00046592081862309887, 0.00045914775416830796, 0.0004523338102526427, 0.00044569630350261587, 0.00043881867583035663, 0.00043380003828229495, 0.0004297020696542033, 0.0004265376657399177, 0.00042378535821845434, 0.0004222166545575189, 0.0004206601066491662, 0.0004196613130164994, 0.0004182959231581462, 0.0004176402542858844, 0.00041621162386412566, 0.0004154416351310532, 0.0004148650316735886, 0.00041420532580972177, 0.00041511941668176833, 0.00041637620453736506, 0.00042051783154007424, 0.00042398313349852333, 0.0004319450007549888, 0.0004399072344190459, 0.00045093713617270044, 0.0004605038110564631, 0.00047468308760711736, 0.00048331838852752916, 0.000495730419832932, 0.0004988941740235761, 0.0005037139527596583, 0.000500555970378039, 0.0004890700413423531, 0.0004762237062583072, 0.00044953913690122066, 0.0004219110371471744, 0.00038230425247404463, 0.0004114476203067182]
4 [0.3081773955313713, 0.23909516704171138, 0.1583682871476158, 0.09545991924192022, 0.05368565012281915, 0.03982411418658768, 0.04008142481344598, 0.01403557909953645, 0.01425240756542322, 0.006935682313139719, 0.006418726353162483, 0.00030757503779125996, 5.1904515668076704e-05, 0.00013787799225862315, 0.0001939926899715979, 0.00024990141715798434, 0.00031154159140185206, 0.00037123828315978303, 0.00042173910745257144, 0.0004611724292871117, 0.000490406704712013, 0.0005097787646165512, 0.0005221326310540062, 0.0005284585263255671, 0.0005295693278937504, 0.0005272440387705543, 0.000522120375657107, 0.0005149202995602404, 0.0005064326697795549, 0.0004978213236225674, 0.0004893123807720556, 0.00048118307104023705, 0.00047378156874080624, 0.00046758140292397273, 0.00046273731036670376, 0.000459331511470787, 0.00045734813681351315, 0.0004573413386990637, 0.0004591214417314287, 0.00046201356936819896, 0.0004671217058622554, 0.00047387619272127755, 0.00048228157307025855, 0.0004915427721563697, 0.0005026643544145748, 0.0005121136166548574, 0.0005241777257196749, 0.0005335421044491838, 0.0005432175503839977, 0.0005498617035213675, 0.0005550698532883072, 0.0005538199094558853, 0.0005523295741914366, 0.000543855318809248, 0.0005321267935150663, 0.0005157067512029838, 0.0004936067401962107, 0.0004630059102055489, 0.000428581486631944, 0.00040213861123149756, 0.00040935757176991836, 0.00044266989725048276]
5 [0.30829119641388886, 0.23944608139503917, 0.15835361881439758, 0.097120830042458, 0.051466330812136016, 0.03958370626788012, 0.03821675051028525, 0.012650571780449303, 0.01812033428036207, 0.009857987558459902, 0.0031981880426584855, -5.803005206068921e-05, 0.00010483658745169446, 0.00018020223120558484, 0.00023105162545274688, 0.00028272207991510286, 0.000338136221015246, 0.0003928745014723328, 0.0004388041910139565, 0.0004751279312431251, 0.0005008562898160382, 0.0005181897550379781, 0.0005286038713309058, 0.0005335137748253701, 0.0005337909184438127, 0.0005306764250087278, 0.0005252127635742925, 0.0005175273345501251, 0.0005088877994032714, 0.0005003568430611568, 0.0004918071249444798, 0.000483714892780656, 0.00047627222913805567, 0.00047003450160403346, 0.00046525309338382796, 0.0004618510167209533, 0.0004599122828418889, 0.00045988320753292635, 0.0004616472244603289, 0.0004644852231630106, 0.0004695683744312764, 0.0004762781520368027, 0.0004846684103928387, 0.0004938826288620193, 0.0005049751437310618, 0.0005144058083264416, 0.0005264905592761372, 0.0005358562154663727, 0.0005455722547356105, 0.000552263020931828, 0.0005575395587362325, 0.0005563726943412589, 0.0005550240477918977, 0.0005467028038016171, 0.0005351830673290819, 0.0005190224041181206, 0.0004972339841786621, 0.00046699035414280457, 0.0004329989304389244, 0.00040708962509658096, 0.00041497313742923646, 0.0004490170581057643]
14 [0.33250863464691044, 0.21476347448596336, 0.15760377122641422, 0.09132906020448743, 0.0682152311470501, 0.040629211907947424, 0.02757690377855201, 0.01826902174869276, 0.01438931658563806, 0.0056878631007209746, 0.005412746701828971, 0.00287125302210763, 0.00047623615820490306, 0.0012073560502947032, 0.00017211186110370813, 0.0003125182870377062, 0.00038538828280695837, 0.00042949263079341816, 0.000440904730691843, 0.000440121853090299, 0.00043251702827814674, 0.00042183540489383614, 0.0004116053974785118, 0.0004047608804366769, 0.00039603221352698325, 0.0003927654655389109, 0.0003877913544308433, 0.00038601577425740024, 0.0003836221589335662, 0.00038218607288206726, 0.000381607994234339, 0.0003807431243304021, 0.00038037548909734137, 0.00038009197291862857, 0.00037994777222189824, 0.0003798198015650477, 0.00037971226114962096, 0.00037966481820527186, 0.0003796254675765952, 0.0003796709156056168, 0.0003795759113456859, 0.00037961748187818504, 0.00037953659661084995, 0.00037947591338092417, 0.0003793738804080895, 0.00037926935070453107, 0.0003789621871960557, 0.00037897201437724927, 0.00037899974923003937, 0.0003796849012406502, 0.00038148706620831825, 0.0003850452927494632, 0.00039147535323333013, 0.0004007049666127827, 0.0004131944053295494, 0.00042794834059331645, 0.0004417625876942574, 0.0004519122549041695, 0.00045324584580465837, 0.00044109235666058835, 0.0004132875198470404, 0.0003719132624290094]
10 [0.31978643630144366, 0.2348763775150145, 0.13573071823504704, 0.10260544623952489, 0.06560843889167398, 0.04477414287508991, 0.025238263047753152, 0.025047150861131726, 0.011512903879970452, 0.003918785623738495, 0.006405829760134292, 0.0019113093827819328, 0.0017699032802808423, 5.494850799733026e-05, 0.00015083766144439195, 0.00023162699571717692, 0.00030401484654010366, 0.0003640118143093541, 0.0004125587226192117, 0.00044184882348927764, 0.00046366990575850514, 0.0004721597404350817, 0.00047467508189605117, 0.00047191930638248476, 0.00046592397511044316, 0.000458144306942848, 0.0004503503690378284, 0.00044261561463085857, 0.00043642795497060035, 0.0004304318049994415, 0.0004265089609521502, 0.00042287788728325446, 0.00042058922103509975, 0.0004187459832226585, 0.0004174468687686132, 0.00041646723371347854, 0.0004153461778017171, 0.0004142675708196837, 0.0004134926135067787, 0.00041216747077834763, 0.0004116190069638279, 0.00041137308594315605, 0.0004114256330093471, 0.0004140568387728468, 0.0004161241749451022, 0.0004209702118767579, 0.00042893089429070345, 0.00043628569127820006, 0.0004461718758745786, 0.0004593424069848572, 0.0004688518731510799, 0.0004822143761105943, 0.0004905993692456856, 0.0004972524811854848, 0.0004997686245696194, 0.0004965631309156381, 0.00048611972945395424, 0.00047001094729787413, 0.00044537000121648525, 0.00041133545784571444, 0.00037424583176428293, 0.0003988808446255984]
8 [0.30737557224887213, 0.2386492741205345, 0.15867963230728338, 0.09766505498197642, 0.05454276139228253, 0.04120242406425528, 0.03687909365602242, 0.01291049305167088, 0.015056728166890897, 0.007269279369283386, 0.005673900845226893, 0.0007096970636489206, 3.7612390993131885e-05, 0.00012908527572998596, 0.0001909803698250479, 0.0002491245007301765, 0.0003089448300189708, 0.00036859039079354083, 0.000421092811291787, 0.0004612836463453925, 0.0004906153412902851, 0.000511501141141013, 0.0005245443933731283, 0.0005316047845620941, 0.0005328767501689062, 0.0005296942586385964, 0.0005243698445870595, 0.0005171921980127922, 0.0005086672964064415, 0.0004994828233317073, 0.0004906248379238685, 0.00048237349985766895, 0.00047507015829732654, 0.00046891699062607384, 0.00046367060182177027, 0.00046049991911548875, 0.00045872524922624044, 0.0004585051201077035, 0.00045993176073778777, 0.00046313350722519415, 0.0004685721834938153, 0.00047556912886574974, 0.0004830397309818952, 0.0004932165270411309, 0.0005023859519329743, 0.000514634563958543, 0.0005257160502691517, 0.000535482071539475, 0.0005427668917826557, 0.0005519346899894855, 0.0005563492908704046, 0.0005566334153744806, 0.0005531454326821409, 0.0005447839812041521, 0.0005333225226212374, 0.0005176992643063194, 0.0004942811174338099, 0.00046459051828098884, 0.0004292131483142286, 0.00040349481470671204, 0.00040959419283408767, 0.0004428775937588557]
9 [0.30832601402991866, 0.24022514741549988, 0.15886794345401337, 0.09668263411821854, 0.05204351855691154, 0.03654718035827105, 0.040687930826904126, 0.01571880172861477, 0.013767260160084527, 0.006057326148164566, 0.0064804385756391265, 0.0014455945780785227, 1.1840881588454746e-05, 0.00011540137185444904, 0.0001807523425528138, 0.00023699362929929826, 0.00029563706378637534, 0.0003540643904201011, 0.00040649045822938425, 0.00044831256619194215, 0.000480433536796224, 0.000502589834279357, 0.0005175221248334314, 0.0005262284039001658, 0.0005287485997229771, 0.0005265799558899879, 0.0005218971548650622, 0.0005153975979762319, 0.0005072449773431737, 0.0004981335694437558, 0.0004894934359667071, 0.00048119806953712417, 0.0004737669226050513, 0.0004675839793163165, 0.00046223087945143463, 0.00045891723925680836, 0.00045702506947531017, 0.0004568273255986881, 0.00045816187565670167, 0.00046127978824725, 0.00046665972428179656, 0.00047359389077490313, 0.0004810255583591638, 0.000491170287301864, 0.0005002958750641156, 0.0005124939373256409, 0.0005235321919217338, 0.000533261951420094, 0.0005405169741807582, 0.0005496317365072986, 0.000553996022354076, 0.0005542253700617404, 0.0005506715810724989, 0.0005422378882043695, 0.000530702836233698, 0.0005150173721236757, 0.0004915569530251809, 0.0004618354696099586, 0.0004264192644169844, 0.00040061683607668126, 0.00040656619657602637, 0.00043971572094085804]
13 [0.3219998575685029, 0.22575823668104308, 0.14191776745490975, 0.11086455636589887, 0.05797662695431567, 0.04616815768172351, 0.02659712039675833, 0.021578968074751605, 0.007442374266620288, 0.011853394342556516, 0.0013818236536489539, 0.005432598992397692, 1.998681607756167e-05, 0.00013245465397625038, 0.0002063336568770998, 0.00027386312789715777, 0.0003343557584532719, 0.0003829750975054352, 0.00042023886255400925, 0.0004450484255131245, 0.0004609285165517043, 0.00046931132786268143, 0.0004706009059992836, 0.0004685667789142321, 0.00046299630251080425, 0.0004565081528242856, 0.0004493106405849138, 0.00044179087370823815, 0.00043554192810500453, 0.00043048619946807904, 0.00042566184584745206, 0.0004225379268541456, 0.0004198487932532723, 0.00041793186520318684, 0.00041676090242865455, 0.0004154864963221615, 0.00041461103119816493, 0.0004132985329304798, 0.00041257610253733393, 0.00041130595887185235, 0.0004107325260128148, 0.00041051211787403874, 0.00041057326513995715, 0.0004131902848380678, 0.0004153100822397072, 0.0004201239364179273, 0.0004280937234372959, 0.0004354172842815961, 0.0004453026494537908, 0.00045842063518623127, 0.0004678677830078461, 0.0004811667259329388, 0.0004894536575318389, 0.0004960263085191884, 0.0004984958541421005, 0.0004952895164801274, 0.0004849530157324624, 0.0004690832383482259, 0.00044484087992671076, 0.0004114080391346381, 0.0003751968965328226, 0.0004007910397500037]
11 [0.309591403194275, 0.23813872551160814, 0.16087922846002162, 0.09843221864702174, 0.04808197829140942, 0.035300698641133756, 0.04083484168352698, 0.0162695077259547, 0.015540235487155881, 0.00828559061606808, 0.00497397153407047, 0.0001470128087747907, 6.763557427445798e-05, 0.0001493114607500726, 0.00020428800328096448, 0.00026072030079632945, 0.0003227656424499987, 0.00038154647213147765, 0.0004313098305629355, 0.00046916577019642667, 0.0004962009603214118, 0.0005142040790289417, 0.0005250710492846432, 0.0005297777069290784, 0.0005309156234609858, 0.000528321049041271, 0.0005230335626328819, 0.0005157884345681843, 0.0005075857484021177, 0.000499079922456922, 0.0004905807214975897, 0.0004827715386409665, 0.0004755842629389107, 0.00046941965511100337, 0.0004648521802847536, 0.00046133259845967337, 0.0004594358835472869, 0.00045921684475455887, 0.0004606040426115872, 0.0004640303863354609, 0.0004687712214825548, 0.0004754191454897426, 0.00048364010128651175, 0.0004928765149648259, 0.0005030709944320306, 0.0005142768114060217, 0.0005245576924390403, 0.0005352987813185539, 0.0005443287373695673, 0.0005514871693141907, 0.0005544441494269086, 0.0005580010659090508, 0.0005523372597554481, 0.0005459420186607142, 0.0005336331296230728, 0.0005182986145057286, 0.000495700822956877, 0.0004658294150110272, 0.000428964103388554, 0.00040545519873214347, 0.0004122476197685261, 0.000445827377671539]
12 [0.30929723068089743, 0.23864345803890086, 0.15741679055235064, 0.09580105946693501, 0.05339992858407964, 0.04004381514202479, 0.03905916969171535, 0.01323472297115542, 0.017354395742225116, 0.007746153897933404, 0.004375629941574744, 0.0001047848822405347, 6.437860394891659e-05, 0.00015043913854213424, 0.00020832854052234902, 0.0002662063987985125, 0.00032819113520570473, 0.00038641975199192423, 0.00043520181925015456, 0.0004720446269041565, 0.0004979163092154658, 0.000515067158562505, 0.0005255837237367672, 0.0005304904730781318, 0.0005311054690794466, 0.0005281899490369045, 0.0005226625574869729, 0.000515196066345787, 0.0005067976991258885, 0.0004981414258045963, 0.0004896125317846124, 0.00048157120150532976, 0.0004743633763782103, 0.00046819621518684457, 0.00046370292199803367, 0.00046020954751711216, 0.00045832448069328034, 0.0004581800063896577, 0.0004596210434830993, 0.00046304681041109077, 0.00046784009622812775, 0.0004745243952903068, 0.000482766134261014, 0.0004920198992278372, 0.0005022341724192805, 0.0005134486098619952, 0.0005237344580141115, 0.0005344775531485622, 0.0005435182154179608, 0.0005506821394384949, 0.0005536533086431389, 0.0005572147975105733, 0.0005515680894768267, 0.0005451952099785693, 0.0005329235723387567, 0.0005176364721687203, 0.0004951016004833076, 0.0004652972219504763, 0.00042849624662689935, 0.0004050082462168021, 0.00041176652470104286, 0.0004450142272640838]

===========================================================================================
python3 delay_tomography.py 4 2 uniform 0.5 1000000  failed with stdout:
b'i_max is 16\n3.303918503415089\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 2 3 geometric 0.5 10000  succeeded with stdout:
i_max is 39
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.25625681411574347, 0.17445710502351544, 0.13402511780392884, 0.12160028825045625, 0.06971666662759203, 0.0593234493667371, 0.042636795115022566, 0.031481683884271874, 0.024754913409990434, 0.02738178676787108, 0.0083103445697107, 0.00884478099525168, 0.011450285655245838, 0.003540233710933336, 0.006203298894300239, 0.003329463958444625, 0.0017574183032312124, 0.0006803707583195809, 0.0009417602004035899, 0.0011148869562573702, 0.0006508911149027335, 0.0006038245553016261, 0.0006238686758271964, 0.000562880929734643, 0.0006522419318142379, 0.0004696860956484341, 0.0011149431671975522, 0.00046209955705665476, 0.0005447133985011852, 0.0006035869219276095, 0.0005633743325143105, 0.000551139160769048, 0.0005620022323748388, 0.0005597884860775327, 0.0005633488295664472, 0.0005621644660490982, 0.0005612635711170944, 0.0005626545588090618, 0.0005620110384524623, 0.0005617881722219012]
1 [0.24927246958319926, 0.19739600435304916, 0.13523953721553, 0.09366054344486081, 0.10014156266986873, 0.05177828739778803, 0.03389735523305977, 0.033886561464585185, 0.020578011192298958, 0.026082481738870934, 0.011447977773196918, 0.004548020683272777, 0.007774164840218592, 0.013610697267777493, 0.0017539991862536406, 0.0011407020670778233, 0.0013387742283880034, 0.003781523429029066, 0.0001505224233364753, 0.00028105623955578316, 0.0003831860175115258, 0.00047868355121876517, 0.0005321234843216165, 0.0005788595282253878, 0.000605501743270669, 0.0006255732827914879, 0.0006368558141781667, 0.0006523580475062362, 0.0006530492655717334, 0.0006598308727603292, 0.0006691879592923577, 0.0006701173108018328, 0.0006722236872348845, 0.0006716174190268172, 0.0006614287609471656, 0.0006422428934288549, 0.0006099660502044122, 0.0005596213261770918, 0.000499214981860424, 0.000434410015885912]
2 [0.24384546730214274, 0.19451790593605084, 0.14939230806021264, 0.08585614243772838, 0.08531116218528198, 0.05153967507823316, 0.05248009031496585, 0.039131388016020924, 0.02184464257689056, 0.00768009789540027, 0.029295323198296464, 0.012107628604313428, 0.00030408582815387013, 0.0010216584901634991, 0.0013496589847848473, 0.007753236818131227, 2.5652941326304642e-05, 3.491620315235086e-05, 0.004372726983637902, 0.00016558327188791275, 0.000288128170413592, 0.0003907123328070323, 0.0004864280021255396, 0.0005457989464867923, 0.0005894413547399245, 0.0006181913764216338, 0.0006331612904619198, 0.0006481828038024603, 0.0006629591625958195, 0.0006671442456370131, 0.0006712344247432238, 0.0006768368455323537, 0.0006764882155719965, 0.0006751812483550307, 0.0006650256944407218, 0.0006454116149252839, 0.0006108860786285114, 0.0005580367562938965, 0.0004955972997528581, 0.0004283848196140688]

===========================================================================================
python3 delay_tomography.py 2 3 uniform 0.5 10000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.11481501478655683, 0.13926993916152347, 0.13706074757368597, 0.1704467557618851, 0.11205408364707119, 0.1419044455765015, 0.14654470888883164, 0.03258096148907843, -1.5129790510267117e-23, -1.576964835781852e-23, -1.9239081626428534e-23, 0.00405780596171418, 0.0012655371531516977]
1 [0.1714621926764633, 0.16802234207624325, 0.10138107897708915, 0.14422870516169334, 0.12803944755227273, 0.19704904347494445, 0.08818781085708825, 3.3787036367667128e-21, 1.5839237934266958e-21, 2.5221736391380787e-21, -1.441972824770797e-23, -8.433872781387364e-22, 0.0016293792242055157]
2 [0.1867255904717104, 0.13306017437219286, 0.12265491748227197, 0.13376883980308577, 0.14335021819542343, 0.17898285722799046, 0.09788349410092129, 6.350046639918796e-22, 2.8709624620589307e-22, 4.663841443775488e-22, -9.998897315098834e-24, -1.5458209915567875e-22, 0.0035739083464038208]

===========================================================================================
python3 delay_tomography.py 3 3 geometric 0.5 10000  failed with stdout:
b'i_max is 48\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 3 uniform 0.5 10000  failed with stdout:
b'i_max is 18\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 3 geometric 0.5 10000  failed with stdout:
b'i_max is 59\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 3 uniform 0.5 10000  failed with stdout:
b'i_max is 24\n0\n0.0017\n0.0014\n0.0031\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 3 geometric 0.5 50000  succeeded with stdout:
i_max is 49
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.25420918290455535, 0.17743715955919462, 0.13562212367118381, 0.11712912654320716, 0.07300817131346815, 0.060796768599487946, 0.042399246910689345, 0.03278760527174867, 0.024733757828659345, 0.019202422568019236, 0.013346976238731437, 0.00942389344434134, 0.006777662881157366, 0.005405910237716938, 0.0044390250695583965, 0.0035248705575187628, 0.0012829286896501397, 0.001619469946212124, 0.0005503132741759675, 0.0016139645548101829, 0.0005882260213549398, 0.0005574259418030215, 0.00044880697726420754, 0.0005165234825068062, 0.0005650822459433759, 0.00043534178558574305, 0.0005412309267881835, 0.00045353591935618724, 0.00045401541278686523, 0.00047766950207019267, 0.00048028444064632036, 0.00047076603107527436, 0.00045554233487731465, 0.0004928812847031718, 0.0004512902059880327, 0.000466026371152475, 0.00046739971913616497, 0.00047196205976206404, 0.00046285712207029344, 0.0004663586500423622, 0.00047309619839823013, 0.00046877895773946027, 0.0004628130911674124, 0.00047295314376023714, 0.0004626861315997735, 0.00046610968844098893, 0.00046669638487042, 0.00046611314345077035, 0.00046639013491639274, 0.0004663529973575685]
1 [0.24489636443818716, 0.1907260577095911, 0.1478778668176668, 0.09722301589685264, 0.07918539297587573, 0.06526616107495, 0.038593009511082084, 0.028875210962150066, 0.030230157902903888, 0.01660343064605664, 0.010788231133009848, 0.006915100645285685, 0.013497077863226875, 0.005134926466614347, 0.004099537415621382, 0.00045502831966258, 0.0011545236657402472, 0.0013695004824340092, 0.00017737875248688444, 0.00030501335562750035, 0.0004130002706337806, 0.000491499052543297, 0.0005381435688775923, 0.0005626505946815343, 0.0005722434264549584, 0.0005740103498338285, 0.0005706939268628061, 0.0005653366004137943, 0.0005581937757777379, 0.0005509168591729343, 0.0005441293911481464, 0.0005383322832182345, 0.0005349978609443915, 0.0005328429080764898, 0.0005322213027309403, 0.0005330365293480161, 0.0005359778777688617, 0.0005418665725518597, 0.0005501377313202604, 0.0005592868193709465, 0.0005689308128696732, 0.0005784099656541236, 0.0005860323709126875, 0.0005901978216017559, 0.000587964104938521, 0.0005779231058421143, 0.0005561438161316924, 0.0005209825524439386, 0.0004755496954386196, 0.00042712269163848893]
2 [0.2505124563822759, 0.1867727811534009, 0.14744686334483725, 0.08947650517502094, 0.08508495594969492, 0.0533670071125637, 0.04878166940332024, 0.028411103829499903, 0.03164750224291128, 0.014284366134491097, 0.01513257888554853, 0.007438828266451175, 0.01034303668669406, 0.004601110676455094, 0.004679324482636234, 0.004275329493215497, 0.00013549918424141317, 0.0002495541423782861, 0.0003392973166617596, 0.0004179291861631971, 0.0004705919879519488, 0.0005113467687550262, 0.0005373611558621892, 0.0005535002871581089, 0.0005621952538987804, 0.000564900198648879, 0.0005624908156511547, 0.0005585796783511099, 0.0005526554809555967, 0.0005467341714164138, 0.0005408743727097322, 0.0005363928104282934, 0.0005322761227201894, 0.0005299013139530707, 0.000528951593883095, 0.0005303307769689788, 0.0005334417649217403, 0.0005388649114096843, 0.000545997721875522, 0.0005552013204919032, 0.0005650209150353824, 0.0005740967873331223, 0.0005814956189248969, 0.0005853438621128248, 0.0005827103963689045, 0.0005728248579883663, 0.0005518452534874648, 0.0005185451754604114, 0.0004757294226810295, 0.00043159642260115445]

===========================================================================================
python3 delay_tomography.py 2 3 uniform 0.5 50000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.12697515276610563, 0.1478334444129068, 0.1421332111539948, 0.14178169929322154, 0.13674046619554497, 0.1410086626801233, 0.15284958879048022, 0.005690645402983851, 0.000673918608920093, 5.347222660644234e-05, 0.001409934686949746, 0.0011900509266666189, 0.0012221913088972598]
1 [0.15955380622546297, 0.13612751807683043, 0.1416883546715304, 0.1385008168428539, 0.13512333448739502, 0.15705810424167155, 0.13194806545425572, 1.1748502715802652e-23, -1.5067347262854933e-24, 1.5413679233198484e-23, 1.411860608097265e-23, 7.766822325381206e-24, 3.168386308418281e-23]
2 [0.15750995013237584, 0.136955975434744, 0.13610312077603326, 0.14941131557612006, 0.14379786367415862, 0.14127559834588174, 0.134536313738405, -5.581541273369705e-24, -1.94847536726836e-23, -1.1414931617031011e-23, -2.5355964284590396e-24, -7.79768974494362e-24, -7.546218078776511e-24]

===========================================================================================
python3 delay_tomography.py 3 3 geometric 0.5 50000  succeeded with stdout:
i_max is 66
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.23368024267768395, 0.21036333166076407, 0.13400092352737872, 0.11536704309288953, 0.06206062061043089, 0.05458940301306005, 0.061196804183382796, 0.018045096700306504, 0.028759769417661684, 0.022983030197595185, 0.0071269297750697685, 0.010895408830040787, 0.004733347531889139, 0.006951076383999549, 0.005337911391341437, 0.0005088663848068083, 0.0015264638191248773, 0.0008522826343995095, 0.0005466052219364828, 0.0019175440722578893, 9.423274309108022e-05, 0.0015747358708278615, 0.00036638445152280534, 0.0005187925243639434, 0.00026283428944396634, 0.00041102277317173127, 0.00047596511709110836, 0.0003473882280565796, 0.00031087965413109035, 0.0004035103855183734, 0.00039423581538908784, 0.00037977735200674665, 0.0003174446879905501, 0.00039589680088150843, 0.0003866665886676536, 0.0003676243178334914, 0.0003355060634726715, 0.00037392421528654324, 0.0003690727216419021, 0.00036406050112114754, 0.0003657179682830007, 0.0003656482032268315, 0.0003652126224822295, 0.0003654159610711702, 0.0003657552458182229, 0.00036551936712051093, 0.0003652819859500217, 0.0003655563004801735, 0.00036560438078193295, 0.0003654338548900142, 0.00036545245033413565, 0.0003655585153988127, 0.00036549629596963615, 0.0003654617582542475, 0.00036550852194036746, 0.00036551234667794207, 0.00036548596705033795, 0.00036549475369939484, 0.0003655017696439753, 0.00036549643153952144, 0.0003654960467452667, 0.00036549672832940583, 0.00036549843669379594, 0.00036549603669102065, 0.0003654970565101488, 0.000365497358229009, 0.0003654969945288577]
3 [0.2726128840960663, 0.14200856463813422, 0.15070513189105425, 0.12802395645514789, 0.06465153817448355, 0.05614273366372845, 0.04124319050524988, 0.04900319968853613, 0.004255538258919108, 0.023644357176732633, 0.022381135434107385, -1.7174429444596937e-05, 0.004225660957077904, 0.01620991991947513, 2.1930090860617175e-05, 2.692175755116868e-05, 0.0014048637774744864, 0.0024472179531798057, 0.00011154534069586004, 0.00024016507743710672, 0.00032462819698365154, 0.00038623590162878066, 0.00042186483404298624, 0.0004444536781862545, 0.00046862164508518943, 0.00046143125485658873, 0.0004667037224502021, 0.0004640801641239698, 0.00045442136012537054, 0.0004493815397425164, 0.00044059733219123165, 0.0004371838152474206, 0.0004330544976629698, 0.0004285650022322532, 0.0004241140483213958, 0.00042205978006814367, 0.0004203997921958084, 0.00041917876959850377, 0.00041639913977722313, 0.000416875718137216, 0.0004161495683299803, 0.00041542093098238033, 0.00041502616887616303, 0.000414005658199224, 0.00041512969036621247, 0.0004133804030881723, 0.00041389467504505544, 0.0004134485847078745, 0.0004141459925009862, 0.00041428901318530666, 0.0004158898185257203, 0.0004176635347969779, 0.0004225291991379525, 0.00042552209623871747, 0.00043254775843495327, 0.0004412698827994364, 0.00045024844033506874, 0.00046294480958584754, 0.0004700756774902301, 0.00048323619963308763, 0.0004866978920747574, 0.0004873399968980546, 0.00048488129409526794, 0.00046890312127941073, 0.00044855277171936003, 0.0004064270674326821, 0.0003781016746114336]
1 [0.24522409543434884, 0.19026603687221946, 0.13805855887472998, 0.0901288112195896, 0.06278182614165409, 0.10208057460894705, 0.036394818211682334, 0.028605183055078667, 0.03433929261057292, -5.547108370977387e-05, 0.017687490487539037, 0.004601558435793971, 0.016905051656691705, 0.007729413904290248, 5.880930345101247e-05, 8.928153599153157e-05, 0.00015858675782041233, 0.00021395093124512037, 0.0002646587072792986, 0.000328129414920725, 0.00037828683735259723, 0.00041642984461431816, 0.00045210459180846437, 0.0004775137460398452, 0.0005017123679417245, 0.0005136009051226998, 0.0005248550954709041, 0.0005361906613067233, 0.0005358139659800661, 0.0005347073907422427, 0.0005362163177511665, 0.000531247386942904, 0.0005268433967623911, 0.0005218782217463368, 0.0005140412186826423, 0.0005099747718176742, 0.0005030296529794428, 0.000498366596927418, 0.0004921510837656918, 0.0004905203124497706, 0.0004886019823795586, 0.0004861614498745576, 0.0004857470000176175, 0.000488317445159663, 0.0004935002922418787, 0.0004926956212122678, 0.0005051872390389911, 0.0005090792635801722, 0.0005171811619038661, 0.0005222762747464941, 0.0005370207616347974, 0.0005470376954270521, 0.0005489597497804729, 0.0005506000382648078, 0.0005676740964268688, 0.0005704301553103024, 0.0005555416296478707, 0.0005630783678382994, 0.0005555076173898815, 0.0005414606007870851, 0.0005180614675448061, 0.0005152902499486864, 0.0004901315153731779, 0.00043230476617251064, 0.00042394207285797526, 0.00041554071555483223, 0.00047120405163901703]
2 [0.23237970049739404, 0.20503586672888163, 0.14080434117562154, 0.10323151976732493, 0.08003959177254594, 0.03483200183973097, 0.05264878575914476, 0.045492168742422644, 0.016194648332147718, 0.032452753970340885, 0.008882697024918878, 0.004574195174611877, 0.007215211541581645, -4.33349658418999e-05, 0.003445314044616374, 0.005466269088647359, 0.003598012732827659, 4.7864901520600563e-05, 0.00010301644498265821, 0.0001616568551278761, 0.00022912875243862754, 0.00028938422138207376, 0.00034269014742707433, 0.00039184835190168545, 0.0004310008555496454, 0.0004662791032905086, 0.0004906434654729537, 0.0005086209475360229, 0.0005206139319217955, 0.0005290025694411411, 0.0005327470439890676, 0.0005335725308866367, 0.0005297804907483004, 0.000526644872402276, 0.0005192571741651794, 0.0005148795134848433, 0.0005089290356835543, 0.0005026569077000288, 0.0004956015420208861, 0.0004935351056249974, 0.0004910295677324761, 0.0004881224333549378, 0.00048788992720014433, 0.0004900853054015123, 0.0004953225170487246, 0.0004942080130350974, 0.0005065454543143695, 0.0005111500516445443, 0.0005188205200278998, 0.0005243451304976889, 0.0005392894040328734, 0.000549334333575637, 0.0005514163472782258, 0.0005532253621872865, 0.0005697803836010192, 0.000572307241207702, 0.0005573920954028076, 0.0005638156732825734, 0.000555303794489625, 0.0005399668935693342, 0.000515129719299457, 0.0005102666333102472, 0.0004833643649677179, 0.0004240121911944783, 0.0004122911189191245, 0.0004003580136253116, 0.00045086495152726755]
6 [0.27647840549187497, 0.14948453754029203, 0.16052775310994594, 0.07857220361930567, 0.10019076704390383, 0.04823440535559224, 0.06030806594330632, 0.0020263125191465267, 0.04592070310552425, 0.01701192977020258, -2.712503093919444e-05, 0.024279448975504526, 6.204881605925256e-05, 0.0059371066087359915, -5.324476699487862e-06, 0.01027154286671474, 9.768917877746816e-05, 0.0001966471810395607, 0.00026857550634503644, 0.0003179929324157828, 0.0003614226401095908, 0.0003852854561168257, 0.00041470187735271176, 0.0004243937070275218, 0.0004327738937235418, 0.00043892590979153383, 0.00043381613063146296, 0.00043591477354530146, 0.00043102958294370956, 0.00042546541092740363, 0.00042306960388563083, 0.0004188622584234319, 0.0004144682294507585, 0.0004095624250543603, 0.0004076874149324202, 0.0004063173021912847, 0.0004023175907750803, 0.00040186812570836906, 0.00040066574386169915, 0.00039976843236392624, 0.0003986247251762156, 0.0003976030346243618, 0.00039837779514696563, 0.0003965992145482452, 0.00039705965622400055, 0.0003957559758803875, 0.00039620866249200917, 0.00039598440740117155, 0.00039596566089376324, 0.00039646404506600563, 0.00039801566076583126, 0.00039977015625364547, 0.000404379675320728, 0.00040721116327810473, 0.0004145050409580604, 0.00042287768907470013, 0.00043178779020380906, 0.00044407948108801074, 0.00045107390541496747, 0.0004641255798543528, 0.0004670669746266546, 0.0004679707723473808, 0.00046585891481540457, 0.00045027321441781434, 0.000431793864659686, 0.000391942096741602, 0.00036792072949479214]
4 [0.22923613647178312, 0.18680733434288677, 0.14466233129662043, 0.11265455910384747, 0.09135879765926808, 0.05115277229112254, 0.04502471412108794, 0.020981925190113278, 0.03642313560306626, 0.013056066296832846, 0.01053845521426142, 0.012440597129080182, 0.0040855241547246195, 0.01587576300862202, 0.0011616796095815978, 1.789120910343614e-05, 0.00011430033864198919, 0.00017898529057510222, 0.00023690824340412138, 0.0002824477060920735, 0.000340085029258385, 0.00038304536994059426, 0.00042098743114277307, 0.00045507975959917143, 0.00047594128223583503, 0.0004958638238367443, 0.000512067049200152, 0.0005182988845445369, 0.000526509574985576, 0.0005264768192228649, 0.0005274474748665298, 0.0005266286856518976, 0.0005204077354842503, 0.0005146502455800662, 0.0005102078991303086, 0.0005038611090386691, 0.0004984845748851823, 0.0004899344340695917, 0.0004906177868817052, 0.00048498504077869445, 0.00047865268010711075, 0.0004831035305039108, 0.0004824944873549612, 0.00048396777851937144, 0.0004847057963005807, 0.000494099070675286, 0.0005002720836356574, 0.0004980010939013562, 0.0005187072570688742, 0.0005265415160489608, 0.0005240215097315165, 0.0005399317496671813, 0.0005500394438314529, 0.0005535888347004221, 0.000554746701251142, 0.0005590209185669633, 0.0005726882915822909, 0.0005415513123179432, 0.0005500239721178027, 0.0005504328646109558, 0.0005068773945233786, 0.0005043738072174153, 0.0004805950131111304, 0.0004469136828570324, 0.0004049985329707403, 0.0004069557946103703, 0.00045797184836184155]
5 [0.22112905071327155, 0.2081803382427661, 0.1451662252104831, 0.08922659706920916, 0.07642395515224282, 0.07591118476942567, 0.05417459057904282, 0.02670373956925562, 0.011269223687829899, 0.009655819527919057, 0.021409510673014817, 0.0110365614016582, 0.01539897627433323, 0.005316034512432248, 0.0008535824285649071, 0.0038601211408962237, 2.2875123469502018e-05, 0.00010260683899382522, 0.00017130831649619894, 0.00023098810198908933, 0.0002890584365998369, 0.00034311515301229474, 0.0003950573823864616, 0.00043245934988484007, 0.00046531084963133385, 0.0004928845502319175, 0.0005080974915018814, 0.0005244791350031048, 0.0005329566412919028, 0.0005346684294554158, 0.0005353574080956683, 0.0005337588433579198, 0.0005316262622854376, 0.0005248337733432884, 0.0005181340126015931, 0.0005131873201327556, 0.0005056675531123529, 0.0004971332149631624, 0.000497242922712057, 0.0004910990975934145, 0.00048444396825115, 0.0004876664009762667, 0.00048769549262451866, 0.0004890538199428047, 0.0004891144062210131, 0.0004987879330719284, 0.0005051277860614919, 0.0005026619501532847, 0.0005232108095403681, 0.000531123198348222, 0.0005284255487347698, 0.0005444633904821319, 0.0005545513308355275, 0.0005582297741946604, 0.0005592222472010797, 0.0005635530125399843, 0.0005772397367223522, 0.0005460365083014575, 0.0005542471051391907, 0.0005543957022518491, 0.0005105932349417304, 0.0005076071047335061, 0.0004832829215389924, 0.0004489686429569151, 0.00040626474193800093, 0.0004072940665864727, 0.00045722624652913904]

===========================================================================================
python3 delay_tomography.py 3 3 uniform 0.5 50000  failed with stdout:
b'i_max is 18\n1.521291234696451\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 4 3 geometric 0.5 50000  failed with stdout:
b'i_max is 65\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 3 uniform 0.5 50000  failed with stdout:
b'i_max is 24\n0\n0.00142\n0.00128\n0.0027\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 3 geometric 0.5 100000  succeeded with stdout:
i_max is 49
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.2493470738276805, 0.18764335189776557, 0.13740703854047567, 0.1087892243324516, 0.07326326901375668, 0.059745245850269066, 0.04447202859462103, 0.032571713091550804, 0.0249699732691068, 0.01755543911229454, 0.013596939181850669, 0.011081564737111343, 0.006820250546898695, 0.005798383117471837, 0.004632180068122671, 0.0027503531595673867, 0.001479615732876277, 0.0013517799280146668, 0.0005852978720826043, 0.0011893816331376, 0.0005687921693760115, 0.0005960768926699387, 0.0005020704696904622, 0.0005125282837200973, 0.0005287539740550495, 0.0004768995152319651, 0.000540622212793717, 0.0004591859633226897, 0.00047153411413499623, 0.00047326742191242956, 0.0004861810924225661, 0.00048623381500229165, 0.0004714474222640564, 0.0004943933772741696, 0.0004570992746282055, 0.0004722567863500506, 0.0004732714839376414, 0.0004759466884358422, 0.0004744162829833492, 0.0004711052568019007, 0.00047604553761164365, 0.0004743165913220683, 0.00047433641204110865, 0.0004742953931278852, 0.00047111344603173444, 0.00047282107406203245, 0.0004729361292979358, 0.00047288735405316554, 0.0004728889276882829, 0.00047290066446518345]
1 [0.2507462422931191, 0.1789781648626809, 0.15185692203080664, 0.09868424938697876, 0.08328408282698058, 0.05990243956004781, 0.041876853832878924, 0.026035467363583115, 0.03173348741801146, 0.016612274039224075, 0.00951801403276397, 0.011101036718058233, 0.009347261266861497, 0.005256393223529706, 0.0015160088211280086, 0.0047057366121822045, 8.584313976309874e-08, 0.0020259704675394553, 0.00014786505651973085, 0.000285646407268425, 0.00038504343556459015, 0.0004643985067316902, 0.0005107998011453947, 0.0005418940364502929, 0.0005574645571790428, 0.0005639306131152129, 0.0005632310740749629, 0.0005590271645085424, 0.0005526853490696298, 0.0005473824262773255, 0.0005406343088515894, 0.0005353879275070974, 0.0005321208420519703, 0.000529604078843442, 0.0005287090159707751, 0.0005299861984811783, 0.0005322655493698743, 0.0005383941093862078, 0.0005456957892851759, 0.0005548920877002618, 0.0005645348640474584, 0.0005740562823454956, 0.0005815839369478135, 0.0005849896217049209, 0.0005823382937069642, 0.0005719845193053069, 0.0005507719706579078, 0.0005169781889905944, 0.00046997564527509076, 0.0004206606565895798]
2 [0.25273810846426686, 0.18403737183182078, 0.13478561752437962, 0.1081879347982674, 0.07875401060535758, 0.060240065903269906, 0.04254321594576703, 0.03386362009327573, 0.024813057697845493, 0.013939225463431647, 0.01761405656443718, 0.008707459691408157, 0.007345127113982002, 0.006272060399471183, 0.004575388262742442, 0.0030672099250557004, 9.763682263278122e-06, 0.0008638271532423183, 0.0010480499414847815, 0.0002172771279467752, 0.0003392138303478099, 0.0004480789034626363, 0.0005126531390578946, 0.0005475594038760732, 0.0005610896600615684, 0.0005666780543158909, 0.0005652678408917347, 0.0005612189606342833, 0.0005547049287289896, 0.0005487052570458213, 0.0005425427220176539, 0.0005377073037927658, 0.0005337647604002512, 0.0005316698578695541, 0.0005312170679808256, 0.0005319091251666442, 0.0005344301745083045, 0.0005399724396526629, 0.0005472150528760232, 0.0005565030646514346, 0.0005660590166232317, 0.0005756209232547114, 0.0005827560090910476, 0.0005865286235805312, 0.0005837731538577586, 0.0005737813824118244, 0.0005529548489235365, 0.0005188853102884321, 0.0004707999593186468, 0.00041961864183347934]

===========================================================================================
python3 delay_tomography.py 2 3 uniform 0.5 100000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.13416086811600905, 0.14780711593208118, 0.13796852545399238, 0.14044875738651588, 0.1376234310542679, 0.1420005791934988, 0.15364470106172753, 3.5342555971806076e-24, 3.98653639111092e-24, 0.00634602180190731, 3.425835700006459e-24, 3.7324931384929994e-24, 3.9679355964854655e-24]
1 [0.15005621540368638, 0.1372015220192372, 0.15018628947141086, 0.13821198774816532, 0.13795870604336283, 0.14671605792329662, 0.13966922139084081, -6.067661840249908e-24, -1.87260209181177e-23, -9.578714159656647e-24, -2.392454698931709e-23, -2.1070484944883697e-23, -1.9465620640468925e-23]
2 [0.15054365109713522, 0.13028387115163742, 0.1497252353160771, 0.14839170112058134, 0.14208643330991702, 0.14040407163458604, 0.13784421352209586, 9.802185371188867e-23, 0.0007208228479700685, 2.239910727932042e-22, 1.7472952078591455e-22, 2.0932803952713552e-22, 1.6230341851521226e-22]

===========================================================================================
python3 delay_tomography.py 3 3 geometric 0.5 100000  succeeded with stdout:
i_max is 66
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.2390147220031086, 0.20026401913659736, 0.1400320741320042, 0.10854487724843424, 0.06460608920414272, 0.06364846132567509, 0.05383643461999269, 0.017568943755557558, 0.02885732447453796, 0.022106536882008768, 0.007661979045453469, 0.014199715120998543, 0.003684638059041052, 0.006013383163187494, 0.004435655659223177, 0.0016683947096253562, 0.0021361251015200693, 0.0008564080024426399, 0.0004701119250478864, 0.001943263448444702, 0.00020379509438921964, 0.0010473422229113688, 0.0003271769338171292, 0.000559468878218001, 0.0002613498975472609, 0.0004542186804709327, 0.00044512608824975826, 0.00040171465481541403, 0.00031847390546074235, 0.00038124451716023113, 0.00044870888268033787, 0.00031939787164570854, 0.0003737015239663299, 0.0003942218158961235, 0.0003726142017733763, 0.00037072412686164457, 0.0003595363808065878, 0.00037195274362711024, 0.00037252597198203497, 0.00038478159718716056, 0.0003560418316656351, 0.00037469962705298455, 0.000371054546534065, 0.0003777954154480619, 0.0003636012527152418, 0.00037264789733391294, 0.0003710787068232689, 0.00037104527966231183, 0.0003773753832545674, 0.00036386838811497407, 0.00037260090949587483, 0.0003711076033178079, 0.0003710584836458322, 0.0003706674200682435, 0.00037105895153614107, 0.00037085252341136505, 0.000370902860058204, 0.00037096896477381537, 0.0003708493085093627, 0.00037096238870650423, 0.0003708853005349069, 0.0003709168460458464, 0.00037092235781251246, 0.0003709039425070556, 0.00037091566002809574, 0.0003709131814198589, 0.0003709153208798201]
3 [0.2577718479915124, 0.1760621840164716, 0.13444092014145842, 0.11489684999779395, 0.08309767367631438, 0.049489606750508425, 0.04058070397737419, 0.03777215126126965, 0.023695751729514037, 0.012787156753699982, 0.02603124196387549, -3.5677339183214153e-06, 2.303073153114003e-05, 0.01736340922103346, 1.9626800277076864e-05, 1.2683069851403077e-05, 0.004458847298627141, 0.00011598207580429024, 0.00021947680992891495, 0.0003009512976396284, 0.0003697144999540693, 0.00039826463289565825, 0.00043782995036201596, 0.0004586902935314881, 0.00046205298605259425, 0.0004673622432481285, 0.0004680991203303345, 0.00046060971273888506, 0.00045848956788824876, 0.00045005294674201, 0.00044442728759251524, 0.00043948696563536014, 0.0004347615393350117, 0.00043089624451042287, 0.00042739080400756277, 0.00042470382997237676, 0.0004237260596779551, 0.0004206802038536587, 0.00042054946712996236, 0.0004188988341165133, 0.0004192184404033041, 0.00041777859198021517, 0.0004178535163709543, 0.0004171123646360986, 0.0004177383047420006, 0.0004164324959694653, 0.0004168651234344203, 0.0004168269973054737, 0.0004168982323129046, 0.00041769855892731576, 0.0004192022675123656, 0.000420795668602866, 0.0004252987357796268, 0.00042902743328654695, 0.0004361906166566554, 0.00044414130618909963, 0.0004543827260894592, 0.0004646999584569805, 0.0004738428279314388, 0.00048523784393024797, 0.000490817221014826, 0.0004904013029156137, 0.0004862772766039161, 0.00047206957735074445, 0.00044926474379456175, 0.0004121932436338707, 0.0003817876102063102]
1 [0.2377090365846594, 0.194902207142927, 0.14326355103861735, 0.09221310201574726, 0.07023385593125465, 0.09020385473807163, 0.03309593338289149, 0.02598975347294035, 0.030935902680949683, 0.010278719464311402, 0.014514393048405667, 0.011057481794729498, 0.013309346711743107, 0.005295148205725587, 0.002206533692066896, 2.8140096485849663e-05, 0.00011982747759631492, 0.0001783680717792528, 0.00023851430853155274, 0.00029737521325255445, 0.00034816195720377874, 0.0003939448287817161, 0.0004349895945220559, 0.0004652047923797819, 0.0004910177889897989, 0.0005076620779410342, 0.0005209840272624093, 0.0005303766594474416, 0.00053354867053582, 0.0005334000593844182, 0.0005332981532491124, 0.0005290498561067806, 0.0005242274267949806, 0.0005200489583124788, 0.0005127938919600721, 0.0005057581911634079, 0.0005005605304612898, 0.0004960360324659577, 0.0004904267452805493, 0.0004867805463243237, 0.00048596673830789876, 0.0004844041613417619, 0.00048399497678091956, 0.0004854092237771407, 0.0004921645263864545, 0.0004926099519310071, 0.0005011051620507365, 0.0005068059570052157, 0.0005191955755422316, 0.0005210974207278685, 0.0005335313604798667, 0.0005441001578407778, 0.0005494598265173565, 0.0005497678188074524, 0.000565804043161834, 0.0005685912145101113, 0.0005554084246895141, 0.0005615218339259762, 0.0005506789110214145, 0.0005441597791031312, 0.0005190865658860582, 0.0005078991173787276, 0.0004829482567677668, 0.00044258087394173737, 0.00041793336629014925, 0.00040495177273924127, 0.0004628350571092866]
2 [0.23470452625716767, 0.1935501040624552, 0.14120649282874415, 0.11155580845506306, 0.08169461067615483, 0.03737450393759596, 0.0497745979975287, 0.04886514564256736, 0.00892666262098574, 0.03429481086048016, 0.009696471155514579, -4.205342818317032e-05, 0.009608552419148566, 0.0017330423812825034, 0.007642327216780558, 0.0045243073451079144, 0.000766082302449, 0.0002811797614895339, 8.024104905184594e-05, 0.00015494148183992304, 0.00023398337275902102, 0.00030650432552096487, 0.00036204071580842376, 0.0004122703507929394, 0.00045135580888556515, 0.0004806000168844171, 0.0005026159385814184, 0.0005190413350110903, 0.000529191250175516, 0.000532790364231395, 0.000533431152034734, 0.0005336020228346391, 0.0005306292705094596, 0.0005263146715366444, 0.0005204076822859854, 0.0005140111900436935, 0.0005076751432237447, 0.0005027004475089674, 0.0004967506487446416, 0.0004927030263542573, 0.0004913426719284359, 0.0004895159509622052, 0.00048916438385586, 0.0004901910750399066, 0.0004967282823141036, 0.0004969110169373555, 0.0005053666528533595, 0.0005112813845079891, 0.0005235542543217619, 0.0005255462473641702, 0.0005382488841818999, 0.0005486171020626807, 0.0005539903124709411, 0.000554238930835578, 0.0005701390045075938, 0.0005727035613201905, 0.0005589939238637772, 0.0005646835668881825, 0.0005531186338475994, 0.0005457367663631164, 0.000519475810457548, 0.000506981159197959, 0.00048028464886832353, 0.0004379036665094313, 0.000411524889070924, 0.00039737718791876093, 0.00045530877212593917]
6 [0.2550244914312655, 0.17523977061485752, 0.15182024069481037, 0.09728232377904844, 0.06991195843943362, 0.0722849402376706, 0.04090680955721466, 0.025303313444163256, 0.030578929065501217, 0.017582681158472002, -2.6482389243443902e-05, 0.02870895628408376, 0.0010712231773328028, 0.004702490433399454, 1.4440673165374508e-06, 0.007479956965148856, 0.00011170574621956042, 0.00021431584941466631, 0.00029875377342972317, 0.0003544217065279626, 0.00039620741274095137, 0.00043141139225458936, 0.0004567532701946756, 0.0004641078300384545, 0.0004717304881448197, 0.00047545659288020947, 0.0004685245006593854, 0.00046944187990447764, 0.0004616456792510726, 0.000455917354277229, 0.0004501060707136336, 0.00044640123007789795, 0.00044036023639709856, 0.00043690031304940264, 0.0004327060114985133, 0.0004316030654341344, 0.0004274990328778018, 0.0004268865875626818, 0.00042484853434181393, 0.00042410926922716545, 0.0004228670253571088, 0.00042177402776484194, 0.00042190898382936197, 0.00042079376586517275, 0.00042071870426511356, 0.0004197275781086321, 0.000420131559397628, 0.00041982852852369195, 0.0004197879994541628, 0.0004209081348495805, 0.00042206349138432757, 0.00042396133250282274, 0.00042830931873313844, 0.00043204807909823657, 0.00043935193758589574, 0.00044734223587548217, 0.00045745985087941045, 0.00046783415722652063, 0.00047699728425660935, 0.0004884935720193423, 0.0004939561118343287, 0.0004937581419950718, 0.0004899189103938356, 0.0004759933880329046, 0.0004538316925717298, 0.00041747536104964916, 0.00038840433129142617]
4 [0.23264288736108774, 0.186926791404526, 0.1459364173823895, 0.12289361975909414, 0.07437680266425828, 0.04142824674078023, 0.056951090300517426, 0.02599209554459471, 0.037830281583086406, -9.978167569962729e-05, 0.012977296293925931, 0.01633343236843368, 0.007858653671921706, 0.009896279772022683, 0.0030639587334038106, 5.085652755080392e-05, 0.0001298019865386944, 0.00018689204936671032, 0.00023408214726208966, 0.0002818661128623069, 0.00034416209546836294, 0.0003863695955083702, 0.00042420150974369753, 0.0004603418110802086, 0.000485400324658351, 0.0005040703613023749, 0.0005199508636435389, 0.0005280809437144561, 0.000536299303956608, 0.000537562817258692, 0.0005371911424247596, 0.0005354755444871265, 0.0005297509564246159, 0.0005238642525711364, 0.0005197877293087563, 0.0005135418753769647, 0.0005055118525054427, 0.0005009007060780544, 0.0004970678387808413, 0.000493494897621898, 0.0004883199249287892, 0.0004906041247046261, 0.0004909126286616161, 0.0004909979643297376, 0.0004948976704039268, 0.0005020014355796159, 0.0005055341159471943, 0.0005104015118360107, 0.0005252661299125036, 0.0005308347954365465, 0.000536293467881758, 0.0005467236935070684, 0.0005585301637353248, 0.0005607601788196351, 0.0005665518610225462, 0.0005631983197900935, 0.0005767659073635615, 0.0005568849260383587, 0.0005548318287209918, 0.0005528105283650088, 0.0005186547602456467, 0.0005026383529259022, 0.0004934634648243747, 0.00044680940482128955, 0.00041239833352927805, 0.00041789781127235493, 0.00047670512648525674]
5 [0.23575281646043736, 0.1957215025168537, 0.14150921382542248, 0.10298159587769759, 0.06955182190428932, 0.07308632024791398, 0.050623514665314145, 0.025032266684549234, 0.01309272550980292, 0.016541009144091387, 0.012566530870132868, 0.01616013406601645, 0.014630373775958825, 0.0022833596871367585, 0.005412732486642376, 0.0005553654021564553, 5.8016845007599125e-05, 0.00013151406221431226, 0.0001986144582482355, 0.00025592901896714975, 0.0003174714361680985, 0.0003704816282312884, 0.0004120088549686414, 0.00045123213725681147, 0.00047764890101924137, 0.0004979957062345042, 0.0005160726829698449, 0.000525583463687751, 0.0005323056263410442, 0.0005341290649911423, 0.0005338687452304707, 0.0005317931463251925, 0.0005274010364424391, 0.0005214460608930864, 0.0005160510748870889, 0.0005106015713105421, 0.0005028551236069632, 0.0004977833686436465, 0.0004942792046331765, 0.0004905500152788375, 0.0004854040273645319, 0.00048726879541687707, 0.0004875184208225403, 0.000488058062329896, 0.0004916332020944922, 0.0004988361148396317, 0.0005024968896984194, 0.0005071877682680187, 0.00052186424204399, 0.0005277238106441167, 0.0005330567655005148, 0.0005433451590844674, 0.0005550172637397751, 0.0005574343655125307, 0.0005631293692936343, 0.0005598770944657339, 0.0005730528819760032, 0.0005536200634532926, 0.0005515937563121848, 0.0005497356049899034, 0.0005163727982730783, 0.0005003229976249639, 0.000490873138028304, 0.00044392810993260524, 0.0004069549673399202, 0.00040751048849086845, 0.00045991415413425344]

===========================================================================================
python3 delay_tomography.py 3 3 uniform 0.5 100000  failed with stdout:
b'i_max is 18\n1.5990893238872548\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 4 3 geometric 0.5 100000  failed with stdout:
b'i_max is 65\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 3 uniform 0.5 100000  failed with stdout:
b'i_max is 24\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 3 geometric 0.5 500000  succeeded with stdout:
i_max is 55
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.251881650985472, 0.18561985256619212, 0.13708512197119754, 0.10736865133017541, 0.0771967506205462, 0.058237052627091467, 0.04478656396564719, 0.03239976856562288, 0.024193175172505632, 0.017650244141444893, 0.013117662453179916, 0.010694938452988474, 0.006721271922621607, 0.005363375421125901, 0.00398931710529376, 0.002871676633658321, 0.0019492270908984745, 0.0011656646935553103, 0.0007998608671296021, 0.0005690651886986968, 0.0005467785670637195, 0.000537194157255708, 0.00047467528350823217, 0.00047461427690693493, 0.00047710502342573175, 0.00044928692568709904, 0.0004504707098963103, 0.00045368524205414453, 0.00044087654542681215, 0.00043342253963761306, 0.00044639285404788123, 0.0004401203186009146, 0.00043044493199965, 0.00043816865552548075, 0.00043309420894537736, 0.0004350687892277229, 0.0004302250727512083, 0.00043386609066725033, 0.0004353475473074401, 0.0004310390300430326, 0.00043290896706098166, 0.00043350982658970944, 0.0004338086994563025, 0.0004334360634272686, 0.00043149856472926026, 0.0004326010400721315, 0.0004325861720472786, 0.0004325978972600586, 0.0004325899066039335, 0.00043259525835427523, 0.00043259076631258826, 0.0004325922461967203, 0.0004325936910345437, 0.0004325918300436327, 0.000432593234307911, 0.0004325927210554287]
1 [0.24721742180386513, 0.18691903648434463, 0.14203674890201182, 0.103480508793456, 0.07730914450589194, 0.06064899266626371, 0.04373039254813776, 0.029761688282106766, 0.02612019834992968, 0.01763796597709331, 0.013350009009305141, 0.011779695172187736, 0.007249433173333638, 0.004698341776948021, 0.002930657092885169, 0.004086074816972415, 5.6320890123030584e-05, 0.0021133651338432896, 0.00014348590714409836, 0.0002694375992783425, 0.00036422106223997974, 0.00043714763897132613, 0.0004849914012802494, 0.0005143679270879955, 0.0005304378609659492, 0.0005363776688341547, 0.0005354959496814825, 0.000531005649340148, 0.0005246634452418996, 0.0005187377933865907, 0.0005117555756964881, 0.0005058746347028924, 0.0005008818051509302, 0.0004965237963814477, 0.0004931025494703547, 0.0004901439222354635, 0.0004881011297031947, 0.00048669768996985894, 0.0004862268910126825, 0.00048685289357276956, 0.0004885109826902757, 0.0004916673717001653, 0.0004965285067112138, 0.0005032875008902326, 0.0005117424583881318, 0.0005215887511407465, 0.0005322977862955358, 0.0005426438256139345, 0.0005512175225562334, 0.0005559031242716155, 0.00055472874713336, 0.000546124284169498, 0.0005272831276718322, 0.0004972706115347891, 0.0004554712692702999, 0.0004117182027364068]
2 [0.2445773175042279, 0.1909781010487617, 0.1374872532065864, 0.10677806876594612, 0.07940211733443767, 0.05907581480274695, 0.04156962577009319, 0.03282127154795508, 0.02587605106739604, 0.01640305260163319, 0.013841160914835386, 0.010587036998622939, 0.006611243174965215, 0.004975621571352375, 0.004648134950512408, 0.0027220052792832575, 0.0014811694903728752, 0.0012674161066220475, 0.000155191697054077, 0.0002762451147893724, 0.00037154358597428364, 0.0004427086127561673, 0.0004886396214302802, 0.0005161410577108263, 0.000530817219720731, 0.0005356241419416936, 0.0005344624885361851, 0.0005297983692254773, 0.0005235291659981934, 0.0005175855079521102, 0.0005109575016170933, 0.0005051261298291806, 0.0005003174061577428, 0.0004961238403409788, 0.0004927415615535561, 0.0004898755655323404, 0.0004878692766192304, 0.0004864990834689014, 0.0004859943265059023, 0.00048662052326296323, 0.00048822472310130826, 0.000491332617433176, 0.0004961800278063793, 0.0005028785656214112, 0.0005112971999079973, 0.0005211045579179355, 0.0005317767975479999, 0.0005420990273312459, 0.0005506325102117772, 0.000555300159113865, 0.0005541227733800354, 0.0005455518881997017, 0.0005267876623793209, 0.0004969170167269052, 0.0004552961804388186, 0.0004118185472516466]

===========================================================================================
python3 delay_tomography.py 2 3 uniform 0.5 500000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.14332575684734056, 0.1399349181780519, 0.1423702423000877, 0.1381163348820026, 0.1438459471852019, 0.14072379311644612, 0.14379009949326432, 0.0005639532766370681, 0.0016354707765844703, 0.0014463385492993154, 0.00114801725316046, 0.0010623514488539427, 0.0013891255059762207]
1 [0.14124647341152013, 0.1448303068026712, 0.14120405378338313, 0.14773945484013848, 0.13796911058154362, 0.14092482235638176, 0.14608577822436175, 9.828709639812612e-25, 7.841793767448339e-24, 5.026570271131376e-24, 1.2741025185632934e-23, 1.0583956656083281e-23, 1.4869295692275014e-23]
2 [0.14030849672973394, 0.14318720558395348, 0.1419871516745749, 0.14575589528848082, 0.1400200123585816, 0.14613340926733717, 0.13859333266946958, 0.0037520560795792812, 7.986867935951518e-05, -3.8786368771257845e-05, 2.9491190900868836e-05, 4.823885406728867e-05, 6.810240927346747e-05]

===========================================================================================
python3 delay_tomography.py 3 3 geometric 0.5 500000  succeeded with stdout:
i_max is 71
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.23778102398229164, 0.1943239827263993, 0.14125489470076755, 0.1070184398347992, 0.07377888343357439, 0.060968091539009645, 0.04675029443203496, 0.02885640250976322, 0.025374751608597236, 0.02102593592888459, 0.009937369221091171, 0.010603800369716011, 0.006669010829075739, 0.005467829937141509, 0.003908594313243327, 0.002717900141933677, 0.0010000914728202316, 0.0018037667749444708, 0.0004744826050676778, 0.000552976286032682, 0.00048448399495453935, 0.00042956050812665496, 0.0004059828509029257, 0.00047412231924673506, 0.00033051638234382613, 0.00047013299776118585, 0.00035561074847656384, 0.00038612709110147575, 0.0003638104252330117, 0.00037636220450358, 0.0003893310091991521, 0.0003567605971974981, 0.0003792168511334923, 0.00036232103638576417, 0.00036793881893966304, 0.0003607448438958447, 0.00037440075509970617, 0.0003638754156013348, 0.0003687182693007466, 0.00036250945566544744, 0.0003641904460604451, 0.00037070064373097115, 0.0003655734978266767, 0.00036507739864857823, 0.0003641116057758924, 0.00036645686230017834, 0.00036574647603084546, 0.00036699872200270545, 0.00036560968543566756, 0.00036466945728291794, 0.00036607604594872574, 0.00036575819459142846, 0.00036567895114286274, 0.00036571191475804336, 0.0003657114392611096, 0.0003657058967372361, 0.00036570910962186007, 0.0003657081960588538, 0.00036571022698073395, 0.0003657055524243464, 0.0003657106485216536, 0.0003657087835353713, 0.0003657075197752642, 0.00036570878863167165, 0.0003657088455388741, 0.0003657085054153303, 0.0003657082946022431, 0.0003657087023849708, 0.0003657086193390448, 0.00036570846473819364, 0.0003657085536855078, 0.0003657085692398288]
3 [0.26440434993941053, 0.17307508499193502, 0.14127413023777868, 0.10043942580287521, 0.07955452125631654, 0.06024834406631768, 0.0432224166360608, 0.029108844133755182, 0.023360581516719634, 0.021341718147953367, 0.013023856705950496, 0.005562857546469272, 0.011285616704125891, 0.003643160622239598, 0.002423223249936839, 0.0013619896507794417, 0.003730398524095927, 0.0001088166564169337, 0.00021419008183388817, 0.00029203497145155336, 0.0003538137403466609, 0.0003961935182260369, 0.00042686613831443513, 0.0004463849537991154, 0.00045510880366977967, 0.0004584234246054769, 0.0004581391241647777, 0.0004523226022977537, 0.0004469231478373359, 0.00044015556711266067, 0.0004339338927855344, 0.0004285668329107364, 0.0004238647167733094, 0.000419175327901057, 0.0004162402266514831, 0.00041312580081347806, 0.00041116848510551663, 0.0004093736485294712, 0.00040819503589765717, 0.00040703489404735467, 0.00040657200457174935, 0.00040580426354411725, 0.00040564518093103653, 0.00040531962109915877, 0.0004050888458297832, 0.000404916429300615, 0.00040462786244781, 0.0004045686307946458, 0.0004042689560068675, 0.00040416557342002214, 0.00040392327182809995, 0.00040387438250698884, 0.00040377032015888895, 0.0004041976944409758, 0.000404774853430845, 0.0004062162920685177, 0.0004083611728814916, 0.0004119913222331945, 0.0004167025711931265, 0.0004235358958159198, 0.0004315594713828464, 0.0004420194710902562, 0.0004523095776111986, 0.0004625549547692066, 0.00047208853074046314, 0.00047795854106050814, 0.00047846924130047827, 0.0004736771805948014, 0.0004598390430415529, 0.00043745516838585436, 0.00040321725830097657, 0.0003748074377604965]
1 [0.2353010541703243, 0.1962062961868078, 0.1414121301166132, 0.0994225913727525, 0.07317297187659653, 0.06517665501516873, 0.049802417773782, 0.02695241928624578, 0.03203499497916193, 0.013867499628379649, 0.011654616435973007, 0.007144414347048076, 0.009757710134454445, 0.006096797816044615, 0.0061914067562964525, 0.00019290621572546712, 5.8940494158942805e-05, 0.00013368790827006578, 0.0001943365350715219, 0.0002521835577778447, 0.00030674345516931267, 0.0003558361506664089, 0.00039597039076911823, 0.00042837674838681135, 0.00045552349716145593, 0.00047465665169317713, 0.0004886609770330167, 0.0004996108502716147, 0.0005057229956025367, 0.0005081152010866588, 0.0005083861456913143, 0.0005068525036724743, 0.0005030017101102718, 0.000498706324843724, 0.0004934879658811962, 0.0004876688784972774, 0.0004815821904417127, 0.00047587121313734235, 0.0004706300353755396, 0.00046582139787754514, 0.00046089878089973166, 0.00045726352050482735, 0.0004546058167363883, 0.00045262225365410403, 0.0004511859225512834, 0.000451000043721108, 0.0004529101680642301, 0.00045456796114954457, 0.000457009367565025, 0.00046312007424970916, 0.00046900860461616684, 0.00047408045913381245, 0.0004820919280159607, 0.0004919252992453497, 0.0005000008834876687, 0.0005065929112191767, 0.0005180410267051945, 0.0005250123269576137, 0.0005303175549994572, 0.0005345175229353556, 0.0005403219322933051, 0.0005379406846019332, 0.0005307933934308618, 0.0005285340709366951, 0.0005186072443338132, 0.0004982843619004286, 0.0004817797306521956, 0.00046217096372874777, 0.00042833310061484543, 0.00039399560556262057, 0.000391474127288432, 0.0004595015594651749]
2 [0.23173448117540366, 0.19726398285266586, 0.1412969796557823, 0.10422509388637526, 0.08509189342704686, 0.04791546353170708, 0.049178669216193266, 0.03258656627876953, 0.01887608849832941, 0.024672950430857703, 0.012892839636693451, 0.008500796978738913, 0.007985732843096267, 0.004734444396068286, 0.005285519260251241, 0.002372254600464606, 2.1695383642177808e-05, 0.00010306054896465798, 0.00016710452477468964, 0.00022409830843109533, 0.0002783389895181799, 0.000330827251345358, 0.0003742579269872771, 0.0004122940308848895, 0.0004434542980651403, 0.0004677994702994723, 0.00048477892419301427, 0.0004977531585535578, 0.0005054955457129398, 0.0005092722340721877, 0.000510059798366585, 0.0005086191006116315, 0.0005053436001739698, 0.0005003138604084329, 0.0004947635454027639, 0.000488981808649493, 0.0004826484686972615, 0.0004765793329238243, 0.00047117466985395696, 0.00046619802526363344, 0.0004613616628009008, 0.00045751756592551533, 0.0004548761742137335, 0.00045282642128923655, 0.00045152013505332726, 0.0004512592724410548, 0.00045321828550694846, 0.00045499360119867553, 0.00045741750534206025, 0.000463523217045611, 0.00046947263693764083, 0.00047457781945306124, 0.00048266471520142234, 0.000492495810243047, 0.0005006244627938469, 0.0005072681591911305, 0.0005186970793812348, 0.0005257085854570682, 0.0005310299872865827, 0.0005352164994171956, 0.0005409734963763978, 0.0005385320904794445, 0.0005312644382097186, 0.0005288199211419697, 0.000518646176769808, 0.000498042388686994, 0.0004811784280870405, 0.000461201664000748, 0.0004270176463401187, 0.0003923003058692328, 0.0003892961069356652, 0.00045662804492061415]
6 [0.2601880825743794, 0.17530141311755837, 0.143064494193072, 0.10331316015947313, 0.07441058941613093, 0.06324586407749777, 0.0360193137944033, 0.03768856079946715, 0.022971049575899207, 0.019234997055880936, 0.006242400076764319, 0.014326564888375007, 0.010269446128268581, 0.0031347522651019684, 0.0021974597469227785, 0.0043753394535177344, 0.0006311995314142818, 0.00014032681782731138, 0.00024939817698461095, 0.0003338769417909819, 0.0003925562615792733, 0.00042803551820540036, 0.0004517190425182501, 0.00046488556657243904, 0.0004686469389625652, 0.00046772576221652595, 0.0004649780569734598, 0.0004586994284203516, 0.0004513722886712935, 0.00044430407976544237, 0.0004382021252855905, 0.0004327670331017984, 0.00042799534063089786, 0.00042347461746361097, 0.0004204420110916284, 0.000417489593098215, 0.0004153366162043708, 0.0004138394042215555, 0.00041239504135818925, 0.00041137370741112955, 0.00041076519967608367, 0.00040993508025455354, 0.0004096513130318365, 0.00040931520050365794, 0.00040885504581965, 0.0004086937167892902, 0.00040824651745836166, 0.0004082138944897525, 0.00040787743104815806, 0.00040770305312775944, 0.000407461017210639, 0.0004074394541512832, 0.000407294810829229, 0.000407747839790725, 0.00040834365163505004, 0.0004097832509728374, 0.00041195502438098354, 0.00041558193836865366, 0.0004203153731800682, 0.00042715359094700075, 0.0004351926449227034, 0.0004456836482992319, 0.0004560177104018729, 0.0004663451586187894, 0.00047600204491343045, 0.0004820513673954424, 0.00048281897246893625, 0.0004783758606419757, 0.0004649487992758008, 0.0004429996998544719, 0.0004090786097261223, 0.00038092401291943217]
4 [0.23411148864742556, 0.19629668437895903, 0.14173460625273843, 0.10825735317018989, 0.07382553335003637, 0.05601920117834257, 0.05019798966085272, 0.028027731061465784, 0.026219354185812612, 0.015356192912158144, 0.011533252412191298, 0.01638530392140914, 0.004907148276549393, 0.00626972046706, 0.0038426139037846534, 0.0013067663574391744, 3.9481336591202755e-05, 0.00011615805758773266, 0.00017953708120158385, 0.000238792908301183, 0.0002957870647669243, 0.0003478357410400479, 0.0003921248246436975, 0.00042847815109417774, 0.00045766049851390543, 0.00048012031913881927, 0.0004959213547632761, 0.0005072362669063058, 0.0005134382764789538, 0.0005158455963549197, 0.0005154309139040702, 0.0005133778483602336, 0.0005090990260342239, 0.0005035289457728648, 0.0004976903935912783, 0.0004915263318027672, 0.0004850213075494183, 0.0004792357544072621, 0.0004735222789072015, 0.00046857885274206423, 0.0004638761800580822, 0.000460234455537144, 0.0004571176276538985, 0.0004557413857514117, 0.0004546788195340416, 0.0004537947898415679, 0.00045551750760170704, 0.0004581299023933849, 0.0004608355354406054, 0.00046614092384836086, 0.00047155350607219185, 0.0004782966895877913, 0.00048552759133235903, 0.00049523008041938, 0.0005029883954662159, 0.0005118701077415685, 0.0005198603951900276, 0.0005294797313176031, 0.0005346339425350895, 0.0005372592136679644, 0.0005411082105707021, 0.000545283755289692, 0.0005342728803983277, 0.0005305459683619966, 0.0005198328405045097, 0.0005047707637132076, 0.0004829727032169754, 0.0004666180454097111, 0.0004289941741844731, 0.00039591323054987933, 0.00039375291180728704, 0.00046182908245593875]
5 [0.23529792618565873, 0.1954846895783741, 0.1415270017234981, 0.10391077031321228, 0.07591485530268843, 0.06424993585884853, 0.0427750777750539, 0.03350995553314268, 0.016331588000674333, 0.021399234602725452, 0.01735505051981376, 0.0034368616226557406, 0.007975592613652242, 0.006413963875811895, 0.008078843300567006, 0.0011097818623758131, 3.570901731559488e-05, 0.00011146789486323844, 0.0001705046278690499, 0.00022588177411188222, 0.0002810618785030362, 0.0003303443517465222, 0.0003735103803723809, 0.00040966590958630957, 0.000438370470286878, 0.00046062010904961365, 0.00047828631136458735, 0.0004904663308950584, 0.0004980475256866258, 0.0005015111663234474, 0.000503383289905126, 0.0005022475973995211, 0.0004990585943064759, 0.0004949852783646036, 0.000490074363149501, 0.0004846059988909774, 0.0004787999579802096, 0.00047328731439466414, 0.00046800100255388224, 0.00046341170880919363, 0.0004586397786921175, 0.0004552230219861872, 0.00045194833246373745, 0.0004505936151360384, 0.00044961445813810035, 0.000448550952145485, 0.0004502210765020959, 0.0004527900177770651, 0.00045554224861527455, 0.0004608156534402713, 0.00046613533598973046, 0.00047284058142144087, 0.000480053342077557, 0.0004896835144666005, 0.0004973808494803535, 0.0005061805604178576, 0.0005140778845960324, 0.0005236038680458441, 0.0005286052127616723, 0.0005310748530499897, 0.0005347863180933355, 0.0005387870388051422, 0.0005276177785079228, 0.0005237415883949653, 0.0005128974544714614, 0.0004977440806522579, 0.0004758974628671706, 0.0004595366959302072, 0.00042197175119500593, 0.00038902356380146434, 0.00038709170458082066, 0.00045524606073173325]

===========================================================================================
python3 delay_tomography.py 3 3 uniform 0.5 500000  succeeded with stdout:
i_max is 18
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.11834317478590978, 0.14977240415000764, 0.13219392633348095, 0.15006134876602453, 0.14098291995620296, 0.13647848722789876, 0.1276886493034692, 0.0380448818976602, -5.078844725654107e-24, 0.00292757267656991, -3.34412634948991e-24, -2.476767169304124e-24, 0.001853581713108293, -2.910446664689412e-24, 0.0016530531896677338, -2.1174964914472354e-24, -2.259926477472473e-24, -3.0374688123957565e-24, -1.9532690026821532e-24]
3 [0.1543143416504868, 0.12669762558255254, 0.16314411850613847, 0.14540781839296704, 0.10539039946278592, 0.20013778697831397, 0.091140625046085, 3.0595167332287255e-05, 0.0005408807308239308, 0.0007969062703243249, 0.0011067755136893276, 0.0013308993884379523, 0.001548596573895486, 0.0015868127398086574, 0.0013947011332295, 0.0013270162443704042, 0.0012649699835703301, 0.0010930597382982237, 0.000914612998013587]
1 [0.13401638269631824, 0.1436635644137187, 0.13926397789393496, 0.1473499443575818, 0.17303664202725244, 0.16489796276531948, 0.05131184383411482, 0.02926376468056595, 0.014648385215530933, 2.1665657634239196e-05, -5.414861381472402e-06, 0.00018596970665426187, 0.0002694044479675409, 0.0003083218698028979, 0.00028686620549344267, 0.00026502024372723624, 0.0002678549323670798, 0.00028721603665236677, 0.0003111593360475554]
2 [0.12738889675576703, 0.15050371666813528, 0.147470365035297, 0.14743662334695817, 0.15956112799854272, 0.16054982353604025, 0.059921713076941295, 0.03543886883168253, 0.009767029286193513, 7.871543079880611e-05, -0.00015873398426651818, 6.0494935459190626e-05, 0.00017321210896798829, 0.00023921387796458032, 0.0002374697395403046, 0.0002272704656919381, 0.00024075720770930838, 0.00025984876774713466, 0.0002831488324381749]
6 [0.16552398457529435, 0.13547081778261882, 0.15075667347713903, 0.13693912257077379, 0.12668991980821429, 0.17176834486932446, 0.1128511369166352, 1.0885925419793844e-21, 9.463419989647037e-22, 9.450374189299806e-22, 1.0850339778395802e-21, 8.502005725870016e-22, 1.0967692209476166e-21, 1.0721654155226608e-21, 5.30122225443543e-22, 7.555303811332895e-22, 7.041411565454461e-22, 6.092614327792254e-22, 7.520300690773396e-22]
4 [0.12681951059582253, 0.15004468980757746, 0.14560223025562194, 0.13828270137814358, 0.16410773116506017, 0.16734996337854546, 0.061135117277055485, 0.03761266713563559, 0.007007249530663803, -4.368966385830285e-05, -2.3094075804592234e-05, 0.0001380827711033341, 0.00020259280934197807, 0.00024603899154779316, 0.0002254991953104853, 0.00020124558580313057, 0.0002156096013178089, 0.00025165847270829675, 0.00029059230853558407]
5 [0.1307429407520589, 0.14231218427195075, 0.14502368985760233, 0.14077696509290039, 0.1709769752978635, 0.16775125316069736, 0.05601311782547055, 0.03282847243161611, 0.011646167595922567, 4.8721451569291464e-05, -0.00011408782490133384, 8.377333609855533e-05, 0.00017337584872961396, 0.00022988394057500404, 0.00021974395932810624, 0.00020741809760525885, 0.00022372622386925838, 0.00025244226537355654, 0.0002826692187075703]

===========================================================================================
python3 delay_tomography.py 4 3 geometric 0.5 500000  failed with stdout:
b'i_max is 78\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 3 uniform 0.5 500000  failed with stdout:
b'i_max is 24\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 3 geometric 0.5 1000000  succeeded with stdout:
i_max is 55
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.24961459163090766, 0.18660100213509073, 0.13772292234023598, 0.10619068764903883, 0.07858261543229501, 0.05856427305083089, 0.04414150761821191, 0.03316786415331765, 0.0237951083617399, 0.018286080054123115, 0.013087202528388436, 0.01073919802658882, 0.006946184493381013, 0.005177899146954474, 0.0038791727459215565, 0.002833516633659159, 0.0018115002939817796, 0.0011403846768571141, 0.0008230178720508056, 0.0005694272220564593, 0.0005557941230065088, 0.0005207911613188594, 0.0004781323650544696, 0.0004743992009213923, 0.00046902695861826923, 0.00045725745958606845, 0.0004498182030546309, 0.0004511217702278308, 0.00044427457342697873, 0.00043632907684949525, 0.0004396134963257315, 0.0004422099365494395, 0.00043126237927405765, 0.00043601225787857456, 0.00043401137796518, 0.0004349991602662798, 0.00043113906945070347, 0.00043419209453202036, 0.0004334602979672685, 0.0004320511010450746, 0.0004329530555418809, 0.0004339232646696391, 0.000433377031238889, 0.00043240633608977985, 0.00043231097830319175, 0.0004326666343139916, 0.0004326700578452112, 0.00043267132992039626, 0.0004326689462994847, 0.0004323467929766421, 0.00043252822370947754, 0.000432528430783407, 0.0004325283126929215, 0.0004325277182323184, 0.00043285248282730744, 0.00043234604928268986]
1 [0.2486566085938769, 0.1850919227022811, 0.14221948815123678, 0.10338683675760701, 0.07729082809799334, 0.0604309373599179, 0.04403351680304998, 0.030375383988274975, 0.026708243746085783, 0.017051349031326858, 0.013483268375181415, 0.011091535155807238, 0.006684470937237985, 0.0055341362152414725, 0.0030164495034555863, 0.00393069627731296, 0.0007814996186899907, 0.0012463705840812943, 0.00016265655764699863, 0.0002834868351112578, 0.00038133017697191784, 0.00045160733125568215, 0.0004969465873250239, 0.0005226009948674994, 0.0005351108026393171, 0.0005390867770659251, 0.000536856049179562, 0.0005319296351811661, 0.0005255098160007871, 0.0005191132270615854, 0.0005125258365985088, 0.0005063433014740714, 0.0005012096458151508, 0.0004968217342681258, 0.0004932440125530443, 0.0004903139793282316, 0.0004882210774569746, 0.00048684252472010143, 0.0004864079750208607, 0.00048702012706099867, 0.0004887547215463185, 0.0004919821336515238, 0.0004969255073317116, 0.0005038106998103694, 0.0005122826993096342, 0.0005221849400277859, 0.000532848797789047, 0.0005432289071054515, 0.000551714620774831, 0.0005564160590035282, 0.0005553965813818262, 0.0005466759332820065, 0.0005279509608550337, 0.0004982752909270282, 0.0004564714045873868, 0.0004131202421123238]
2 [0.2470561642270641, 0.18931136434387513, 0.13740026596028537, 0.10762199681689293, 0.07699593392992041, 0.059828716030014904, 0.04207705957824056, 0.033277220155736954, 0.025480941492778943, 0.01608720205278589, 0.01412307714434086, 0.010346319109459538, 0.006966184618734146, 0.0046462515757088735, 0.004208309818216479, 0.002871193391217558, 0.0018363252976808099, 0.0009099236289622422, 0.00014308645316925283, 0.0002863261414650976, 0.0003821997435240868, 0.0004516317286788684, 0.0004949838397529569, 0.0005203362145578521, 0.0005331915312577278, 0.0005375021079355293, 0.0005356876923028864, 0.0005313402138627163, 0.0005248682169374972, 0.0005191970961591718, 0.0005124121478867452, 0.0005064667579937409, 0.0005014263663189159, 0.0004971883787774638, 0.0004936119016294911, 0.0004906676330997521, 0.0004886351268443499, 0.00048718857642101904, 0.0004867274092775749, 0.0004873153610533069, 0.000488916556627366, 0.0004920699772093585, 0.0004969862035172687, 0.0005037766487596951, 0.000512167488896702, 0.0005220329890878886, 0.0005326287099361672, 0.0005429451757847307, 0.0005513718896853892, 0.0005560273317162918, 0.0005549106918093372, 0.0005461542439919387, 0.0005274033047471619, 0.0004977633313769873, 0.0004560551519192787, 0.00041269297663516953]

===========================================================================================
python3 delay_tomography.py 2 3 uniform 0.5 1000000  succeeded with stdout:
i_max is 12
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1434988093434169, 0.13794368113443525, 0.14432258923321756, 0.13955600728102918, 0.1436796228693207, 0.13862955464430865, 0.14456874419236077, 0.0005748190534513699, 0.0015336879841399988, 0.001254880568607278, 0.0014050360117889341, 0.0011105271486410097, 0.0012812454128071707]
1 [0.1394280167294301, 0.15027718247591934, 0.1375739020383001, 0.14661930468858758, 0.13789015284520653, 0.14330683797014931, 0.14483454003875545, 1.2124388046163123e-22, 1.8663931082966985e-22, -2.7515941953007676e-05, 9.757915560464776e-05, -1.9918411132136984e-22, -2.2018051767067155e-22]
2 [0.14137312561724022, 0.14352211492769842, 0.14015887724647386, 0.1452728906943651, 0.1431333175474997, 0.14435787614181445, 0.1395213700515761, 0.002443259812457619, 2.772876761219797e-05, -2.4827213688085115e-05, 2.790293418277691e-05, 4.700701442815139e-05, 6.51489698993044e-05]

===========================================================================================
python3 delay_tomography.py 3 3 geometric 0.5 1000000  succeeded with stdout:
i_max is 71
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.24486294381693538, 0.19178426431516526, 0.13774562892640968, 0.10828587556115096, 0.07487127968647103, 0.059449609810213584, 0.044800585001878106, 0.029901452747265068, 0.02530344662993017, 0.01939585698435024, 0.011289136465179418, 0.01029415494010558, 0.007023051269126779, 0.004805296070368838, 0.0043336026278068575, 0.0018184366069209426, 0.0016814992116740127, 0.0015178374893489452, 0.00047164885341920024, 0.000721530659238692, 0.00046302573442624534, 0.0003913713289747377, 0.00044752786252555757, 0.0004438652571675753, 0.0003726393094445578, 0.0004155811319959245, 0.0003736696628265144, 0.00037736593868986266, 0.00038595536305460114, 0.00036391625207048703, 0.0003728501308259166, 0.00037246414861697645, 0.000364608697249374, 0.00036670047687015325, 0.0003647178982436073, 0.00035903555184622004, 0.0003749114374395229, 0.000359571950963646, 0.00036760023664828554, 0.00036131325917321277, 0.0003649259284650337, 0.0003670921700443723, 0.0003643615035910952, 0.0003629933725401817, 0.0003659299206708707, 0.0003618842125671886, 0.0003649687487581927, 0.00036560089549588783, 0.0003639777136295306, 0.00036380674237512453, 0.00036387775837329523, 0.0003644053490672144, 0.0003641710795584626, 0.0003641893632475503, 0.00036418080861934095, 0.0003641886101148745, 0.00036417970054788593, 0.0003641912277750641, 0.00036418398232019157, 0.0003641841111433441, 0.000364186999349358, 0.000364185595028325, 0.00036418529595740826, 0.00036418523579138896, 0.00036418598659624144, 0.0003641854807958041, 0.0003641856635517581, 0.0003641853816148676, 0.0003641857294774469, 0.0003641855384881288, 0.0003641855766956911, 0.0003641855947625538]
3 [0.2539332871368778, 0.1804393382939069, 0.1395192073910705, 0.1047447974102058, 0.07683664037266422, 0.059707247954222595, 0.04514397684034209, 0.03041142754070582, 0.02374873120296183, 0.02047790924084348, 0.015265592617755525, 0.003276047732180144, 0.012237837774475822, 0.004890542570077838, 0.0002108757683156352, 0.0017746818774476755, 0.004459191910427399, 0.00011227570911431979, 0.00021485349743271154, 0.0002907377448327984, 0.00035191813517793634, 0.00039388859045861663, 0.00042476732698092996, 0.000443417234073842, 0.00045307254646729893, 0.0004566983571063478, 0.00045612658932424674, 0.0004514303161516701, 0.00044604649429368434, 0.0004398855337364452, 0.00043372430170091433, 0.0004284998742227714, 0.00042355915909652496, 0.00041935128252385033, 0.0004161460567014314, 0.0004132406280468616, 0.0004112838471966751, 0.00040961045849310815, 0.0004081074869732888, 0.0004072690477393641, 0.0004065522786026706, 0.0004059497112975784, 0.000405611268339985, 0.0004052594031329943, 0.00040501493354663717, 0.0004048357417064649, 0.00040455627003416585, 0.00040440111042331343, 0.0004041859422819662, 0.00040393823533302017, 0.0004037677820330915, 0.0004037021334386328, 0.00040362062170654404, 0.0004039662876330808, 0.0004046140762570514, 0.0004058856012366751, 0.0004081867173563973, 0.0004116118020238805, 0.0004164817517580431, 0.00042310824118541084, 0.0004312305944652418, 0.00044120124597641004, 0.00045173987617364047, 0.0004620218809050421, 0.00047135590808799387, 0.0004775639763920361, 0.0004785364335294634, 0.00047379395265705266, 0.00045988077550471087, 0.00043769901192823514, 0.0004044290521097876, 0.0003749029081177453]
1 [0.23497661115179533, 0.19567216419395184, 0.14134826734056452, 0.10282548701467364, 0.07743100192665901, 0.058233346979292264, 0.04485253365340168, 0.03301488227657658, 0.030098916400449715, 0.012036571654032423, 0.013352582573744325, 0.010091720676624668, 0.007925841673785726, 0.006922211870624342, 0.0050604548869321465, 0.0005587602031643444, 5.085860389556224e-05, 0.00012641246139550758, 0.00018695665971254398, 0.0002442565029709278, 0.0002995243150637414, 0.00035025435927168113, 0.0003926573704398674, 0.00042717982558640097, 0.00045589260121055774, 0.00047637190839146053, 0.0004907932111254511, 0.000502070626493662, 0.0005079828229760529, 0.000509742329363678, 0.0005097485745147902, 0.0005080097384356997, 0.0005042883252797615, 0.0004991248222826008, 0.0004938180732910687, 0.00048814545825453983, 0.0004821691387044186, 0.00047609433826247455, 0.00047107784853311696, 0.0004661188783428065, 0.00046124308371490373, 0.00045785551921034997, 0.00045493506318231236, 0.00045296000951493384, 0.00045177392306055327, 0.0004515546369048917, 0.00045327256758237087, 0.00045543487450253934, 0.0004577949121680485, 0.0004638648392413239, 0.00046868454619944876, 0.00047534664320903613, 0.00048369670523903924, 0.0004924311774104884, 0.0004995544154415988, 0.0005080031833944177, 0.0005190561630288701, 0.0005260894372817852, 0.00053060378073535, 0.000535263981503685, 0.0005419411983244209, 0.0005372017343574606, 0.0005332177131760984, 0.0005284920028456308, 0.0005180028218835632, 0.0004993897665433252, 0.0004831654693777497, 0.0004617027191336746, 0.00042681503862281896, 0.0003962335735457204, 0.00038987195770070246, 0.0004600960364108884]
2 [0.23241480622754582, 0.1967840424821236, 0.14373212201719363, 0.10394718526853763, 0.07917794952976526, 0.05512741054279782, 0.04480328267808105, 0.028586598824857506, 0.027969436357792712, 0.021230836224518303, 0.011165126900314862, 0.010640970436299727, 0.007898976605467449, 0.004778511709818259, 0.004404260428911835, 0.00175503471658327, 3.309089958690668e-05, 0.00010876874877619873, 0.00017313501711151052, 0.00023315406171828815, 0.0002886245421175241, 0.00034043473485779996, 0.0003848521612644536, 0.0004222760919166254, 0.0004528089705002233, 0.0004760116428944227, 0.0004925459939514092, 0.0005043971819545206, 0.00051110014521396, 0.0005141779141463333, 0.0005137421461556151, 0.0005116250730462182, 0.0005079676696874364, 0.0005025156300216671, 0.0004966377859212689, 0.0004903860281375906, 0.0004842139697450467, 0.0004779910298084893, 0.0004727238883377601, 0.00046751760285547054, 0.0004627043323875933, 0.000459189717753788, 0.0004562841127324523, 0.0004542901542730542, 0.0004531880625725158, 0.000452842686753586, 0.0004545984162812825, 0.00045684285807951543, 0.00045918311078916696, 0.0004652329604967569, 0.00047007667203121463, 0.00047674289414098624, 0.00048512876803597025, 0.0004938774444457194, 0.0005010557931106294, 0.0005095348088917539, 0.0005205955874231963, 0.0005277023246141891, 0.0005322595163381261, 0.0005369531058864118, 0.0005436462015539882, 0.0005389310707594221, 0.0005349339909075923, 0.0005301492735532489, 0.0005195802832391154, 0.0005008597497475018, 0.0004844800264538682, 0.0004628468222434202, 0.0004277783251699758, 0.0003969573499226203, 0.0003902763530438427, 0.0004601291019643457]
6 [0.2515875969774371, 0.17852505363471854, 0.14633825253817612, 0.10085420655812011, 0.07920231577511838, 0.06022778441323311, 0.039877129440850936, 0.03255169011550907, 0.027353994762411016, 0.01484439042263989, 0.013668764569001662, 0.010703463793055423, 0.011110405033161314, 0.0003959651185519522, 0.006449994625028314, 0.0017747067358733959, 0.0010736590800098128, 0.00013535843512308218, 0.00024330001148523578, 0.0003282408065644638, 0.00039131306889837855, 0.0004310089920722672, 0.0004564210078950149, 0.00046944380621374523, 0.0004728892293839025, 0.0004718345694669966, 0.000467979365035353, 0.0004612592783632735, 0.00045399902991492114, 0.00044691051285017315, 0.0004402292974013947, 0.0004347696428855683, 0.0004295956382912067, 0.0004253309257806498, 0.0004222196956683139, 0.00041904119579353974, 0.00041705732434523006, 0.00041539507311282183, 0.0004137387984911024, 0.00041283113306456854, 0.0004121091510380585, 0.00041135577616652734, 0.0004109741664346312, 0.0004105266549255254, 0.0004101697745129825, 0.00040999491298703645, 0.0004096506694827098, 0.00040945604660392237, 0.00040924116431498465, 0.00040897911537327, 0.0004087980937693445, 0.000408750311047239, 0.00040865028376650225, 0.0004090168300231884, 0.00040967732878962243, 0.0004109361461548925, 0.00041325980951230243, 0.0004166687348826474, 0.00042155795238738123, 0.00042818674082142287, 0.0004363350516802666, 0.0004463405563128268, 0.0004569589434825395, 0.00046735332368532355, 0.0004768626914682801, 0.0004833236471063001, 0.0004846195193571857, 0.00048026268753972157, 0.00046676138491920664, 0.00044493798426539007, 0.0004118832458720318, 0.00038235858523890027]
4 [0.236397690505332, 0.1967948139361194, 0.13998109541433806, 0.10747852364374723, 0.07419694981250538, 0.05716138732754165, 0.04425362321735164, 0.030613427489464082, 0.026840955468719944, 0.017272800709837194, 0.013253565048318856, 0.01231959897774473, 0.006730756302068879, 0.005255810284176222, 0.0040891216867656194, 0.0016906869815089634, 3.343234104084806e-05, 0.00011170574726703023, 0.00017466119053988349, 0.0002338467679447401, 0.00029133128371374415, 0.00034299417593602975, 0.0003880919298091643, 0.00042520438445005983, 0.0004545419788350213, 0.0004780304351651353, 0.0004946329598124301, 0.0005065212883982053, 0.0005130612120770328, 0.000515996165630685, 0.0005161057548041215, 0.0005139213902469822, 0.0005096333338323071, 0.0005041710895596426, 0.0004983498659902421, 0.0004919362867519233, 0.000485436964024293, 0.0004796731706947634, 0.0004738685174520361, 0.00046875994273539833, 0.0004641111912883977, 0.00046038931161003277, 0.0004573912924374117, 0.00045565071041886245, 0.00045465083827252455, 0.00045412519299480524, 0.00045567224134447236, 0.00045796592873946306, 0.00046133606980773746, 0.0004665064932786701, 0.00047139740489645683, 0.00047866234454303183, 0.00048610159292361273, 0.0004945587711304707, 0.0005042568373165934, 0.0005117088458432867, 0.0005209856924403475, 0.0005276589495050419, 0.0005369039005635299, 0.0005371730601637433, 0.0005418589134407504, 0.0005425311660417283, 0.0005373248346589224, 0.0005282951889773355, 0.0005208684294437311, 0.0005041344246737242, 0.00048404576400113786, 0.00046373695348834434, 0.0004298910959223142, 0.00039501064292282685, 0.00039319265973214933, 0.0004613719880110396]
5 [0.23649628961092845, 0.19494356358558904, 0.14163272015563966, 0.1031895833618542, 0.07821266314093916, 0.059094617660206426, 0.04345204181705453, 0.03486812471034008, 0.021991769433969903, 0.01752103990758872, 0.013333785398903219, 0.0073700125573446, 0.008590161111187194, 0.006277862885840955, 0.006680166709021315, 0.0009189484337867916, 4.447715327633286e-05, 0.00011647313451795981, 0.0001758603246455162, 0.00023284847973816056, 0.0002893625109108021, 0.0003387670835763851, 0.0003822089239869056, 0.0004181110688839202, 0.0004457569787985378, 0.00046784909915770754, 0.0004848188264669653, 0.0004965647413672727, 0.0005031688403100009, 0.0005067591702462617, 0.0005074255635824504, 0.0005060277307903589, 0.0005025657477671791, 0.0004979620223768776, 0.0004927894978818541, 0.0004869110878451772, 0.0004811907774746523, 0.0004755898832720814, 0.00047014000418669257, 0.00046535961873964593, 0.0004607059833392245, 0.00045709659275381824, 0.00045395375522071864, 0.00045226922132859124, 0.00045133581563980816, 0.00045067967943313985, 0.0004521721653181007, 0.00045443583607809813, 0.0004578127191628199, 0.00046293866371554924, 0.0004677839240880655, 0.000475027845808552, 0.0004824298409766994, 0.0004908579900586556, 0.0005005036926244047, 0.0005078989987731711, 0.0005171153270197451, 0.0005237237141963622, 0.0005328837165832938, 0.0005330442532958515, 0.0005376637718267766, 0.0005382604021988425, 0.0005329914482725894, 0.0005239201370057667, 0.0005164817984742818, 0.0004997686607067331, 0.0004797417934581745, 0.00045952254733401554, 0.0004258100337347708, 0.00039113458393510525, 0.00038961407890533565, 0.00045789267616385017]

===========================================================================================
python3 delay_tomography.py 3 3 uniform 0.5 1000000  succeeded with stdout:
i_max is 18
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.13673239000822837, 0.13329177334514591, 0.13881659211962807, 0.14929565380051493, 0.1367804083161699, 0.13621878124554404, 0.1370566216302441, 0.008647409890831447, 1.8394293804389838e-23, 0.01668604310086314, 1.4924853755254564e-23, 1.5665192770767773e-23, 0.005613075883477298, 1.2471597695065733e-23, 0.0008612506593528507, 1.640553061136742e-23, 1.5792214908362985e-23, 1.4416765472674274e-23, 1.3698225944571717e-23]
3 [0.13824398084241998, 0.149309068865334, 0.1475869892219144, 0.14071715560991052, 0.1331166496854332, 0.1564969014045828, 0.13452925437040508, 3.314403598151777e-23, 3.111238472632033e-23, 1.4873673828000754e-23, 2.84419817524498e-23, 4.149048517112631e-24, 3.1035068035857974e-23, 2.441182688459911e-23, -2.7987147389769235e-24, 1.5530360713284536e-23, 1.0428560728667513e-23, 1.5797234332850852e-24, 1.7628859388363114e-23]
1 [0.1343144594604443, 0.1441889142965173, 0.14267309248477522, 0.14672315323702873, 0.16970871335155474, 0.16281418671233305, 0.051485167278294414, 0.03281379278365758, 0.013391743592043362, 0.000249681532543708, -0.000266661903546398, 7.421043084321588e-06, 0.00014866880802361326, 0.00022575398334578022, 0.00023460735926357878, 0.00023475073077613897, 0.0002451885440232453, 0.0002513015142369458, 0.00026203524559776715]
2 [0.1311450993312716, 0.148442987732061, 0.14362979407850535, 0.14622937009411402, 0.16387641681733298, 0.1631680419784048, 0.05720476644052991, 0.034545690595193815, 0.009769490555266467, 2.98766253261807e-05, -8.601420303256149e-05, 0.00010915166906068739, 0.00019545900490813497, 0.00024158306055907384, 0.0002268238555651745, 0.00021109224602385942, 0.00022278180304486348, 0.000245921661038557, 0.00027477867404623765]
6 [0.141413897613351, 0.1491611882641011, 0.15178516139964726, 0.12597547512404816, 0.14920193146883964, 0.1333635715420465, 0.14909877458796625, -5.040371251728664e-23, -5.1577730380302305e-23, -3.597459823766875e-23, -6.502053476103951e-23, -3.2792251922215076e-23, -6.308452248480063e-23, -6.426955117261265e-23, -2.7409305347606677e-23, -4.899583089106876e-23, -4.458991721966604e-23, -3.21603270392788e-23, -5.170706641294769e-23]
4 [0.13173303886816856, 0.1479039275089123, 0.14465600746958113, 0.14096984326655393, 0.16794339933506947, 0.16129889663553226, 0.06091745070853228, 0.0346533023219055, 0.007933741587518698, -7.44658947225881e-05, -1.4399991060440883e-05, 0.00013996797915211674, 0.00019746356252597474, 0.00023910744208392574, 0.00021431159849317376, 0.00019449665269404725, 0.0002123707021028481, 0.0002516868270897594, 0.0002914219639043118]
5 [0.13424392053988776, 0.14406150993872618, 0.14156717496115984, 0.14536372771297573, 0.1710374800474159, 0.16195135031778424, 0.05736036008527736, 0.03041078789627289, 0.01207923423631686, -0.00023240483629673344, 3.830659480963549e-05, 0.00015546139533926054, 0.00018859444833392203, 0.00022367834237686866, 0.0001968481512284146, 0.00018529363095250753, 0.00021258231664505502, 0.00026593338434269134, 0.00031820691035979733]

===========================================================================================
python3 delay_tomography.py 4 3 geometric 0.5 1000000  succeeded with stdout:
i_max is 88
inferred probabilities for tree Root = (15), left=(Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))), right=(Root = (14), left=(Root = (10), left=(Root = (8), left=(None), right=(None)), right=(Root = (9), left=(None), right=(None))), right=(Root = (13), left=(Root = (11), left=(None), right=(None)), right=(Root = (12), left=(None), right=(None))))
15 [0.23349192537987676, 0.20315920819335995, 0.13219807973369682, 0.11152500153209599, 0.07089130508042119, 0.058443865742546876, 0.05620966272922458, 0.019184041346833804, 0.029540945834410075, 0.018592075075222175, 0.013909349743727439, 0.008121750698830369, 0.006008763382688171, 0.007037032226522097, 0.0035209370056700725, 0.00029675387382865155, 0.005331125817004321, 0.00033677809881593117, 0.0004885769452254799, 0.0007706921884916621, 0.0003157081997663866, 0.0004120222631534795, 0.0003928495415130731, 0.0003518925083444397, 0.00026623657111581956, 0.00035410550014552283, 0.0003063183068153178, 0.0003312448560502853, 0.0002997580060899185, 0.00030857418906140216, 0.0002783461511880811, 0.000305952938768816, 0.00031980824902449903, 0.0002598580007035584, 0.00031125151901876657, 0.0003047600773332829, 0.0002868514185398177, 0.0002980931575151471, 0.00029557155399666566, 0.00028624774587633476, 0.0003021311458397105, 0.0002919287353322029, 0.00029317255985154356, 0.0003001679899745989, 0.00028792576654300406, 0.0002988950144543722, 0.0002925420892577068, 0.0002935669548782164, 0.0002971815865450807, 0.0002916612105303012, 0.00029427130003404955, 0.0002965789479798496, 0.00029303259635361486, 0.0002933014918367659, 0.0002952863303490877, 0.0002954845837418665, 0.0002919732428765008, 0.0002953636253980047, 0.00029441775250331936, 0.00029392176183306456, 0.000294402000101008, 0.00029428003535530994, 0.0002942633370353625, 0.000294251580065298, 0.0002942824633818864, 0.0002942983069152489, 0.0002942282711646854, 0.00029430038308983443, 0.00029427183826412085, 0.00029425926938372074, 0.00029428083077787104, 0.00029427054049992337, 0.00029427323389413004, 0.00029426956252874537, 0.0002942736717626717, 0.0002942733073686691, 0.00029427041620146876, 0.0002942728457221124, 0.00029427255727531437, 0.0002942718216050914, 0.0002942722953292731, 0.00029427220542443944, 0.0002942722733581635, 0.00029427212625761227, 0.00029427222192232794, 0.0002942722568593097, 0.00029427214787081926, 0.00029427223189426425, 0.0002942722140469383]
7 [0.27413530085667903, 0.1575937743674461, 0.16111849161256453, 0.08607080968410499, 0.06888503803958594, 0.07013865685065182, 0.04503608823871327, 0.028881720760967202, 0.022114528179618405, 0.01991687197364477, 0.0025368935261324242, 0.02330126094497506, 0.003308673854808946, 1.6060513357226783e-07, 0.009297372903029524, 0.0015648831441016937, 0.00010014677084700701, 0.00019632923311435459, 0.00026551764787381596, 0.0003194364352014092, 0.0003536824374107603, 0.00038332875068674795, 0.0004005080239119097, 0.00040341031443703505, 0.00040704307053203453, 0.0004054207040848015, 0.00040087025489250316, 0.0003921595366662315, 0.0003856901158298155, 0.0003806608492800019, 0.0003733130180669869, 0.0003660894910870807, 0.0003634928714859046, 0.00035873363519913696, 0.0003546121991751997, 0.0003529117569041542, 0.0003503586093656073, 0.00034850413205364544, 0.00034758440703783796, 0.0003464922327950174, 0.0003456075642536699, 0.00034490806462269955, 0.0003446255603120964, 0.00034422836765455255, 0.0003439878149719453, 0.0003438910804499717, 0.0003434998459307174, 0.0003435109991567299, 0.000343477858479695, 0.0003432252906545828, 0.0003432757274604588, 0.00034324003015481774, 0.00034312731982266736, 0.00034320119510297827, 0.00034310960188783755, 0.0003430761733493056, 0.00034307472129892474, 0.0003431056479807071, 0.0003430109534855152, 0.0003430525803977904, 0.0003430577362184674, 0.00034290443949014295, 0.0003430120735266617, 0.00034270270306053813, 0.0003429087258738563, 0.0003424868559265995, 0.00034259764161839474, 0.00034228578706520794, 0.00034215185763718524, 0.00034221534093321535, 0.00034232748886306225, 0.0003431261299266088, 0.00034412897602959853, 0.0003461328040473198, 0.0003498703750938239, 0.00035444956744150823, 0.00036040285252811896, 0.00036953520506450145, 0.0003780515851069399, 0.0003899854295650285, 0.00039847425743020184, 0.0004102890818487269, 0.0004162251571505019, 0.0004185387649473893, 0.0004162027186660378, 0.00040525199759896055, 0.0003890491474693189, 0.00036000623989109967, 0.00033567591606375324]
3 [0.22120426034193696, 0.19746696844617329, 0.15047396103892863, 0.09889371096191721, 0.08881845688128986, 0.05298818592740012, 0.035976312308851316, 0.05003642054723308, 0.014946925061670089, 0.014881694489338055, 0.00969426487036252, 0.020003505274331285, 0.00904213931900065, 0.00022252251960669958, 0.004485310255584424, 0.001868414567119042, 2.044624259677231e-05, 9.749900647172037e-05, 0.00015452702283759123, 0.00020314966740160782, 0.0002539734364528469, 0.0002997458950007142, 0.0003392651273334831, 0.0003719489602963203, 0.00039988661739212274, 0.00041893707154119265, 0.00043368533847879074, 0.00044439940158691433, 0.00044805558727243337, 0.0004498103278705225, 0.00045193073351915234, 0.00044731790146494677, 0.0004426322243909444, 0.0004384309488243649, 0.0004321886445648516, 0.00042709365745677134, 0.00042091934956755786, 0.0004156172665563778, 0.0004111880302555346, 0.00040646764461666976, 0.000403008517944003, 0.0003996072053037637, 0.00039742741714303116, 0.00039529053983997716, 0.00039352992501995543, 0.0003924376552271628, 0.00039168708952460056, 0.0003909579387800017, 0.0003903429057593153, 0.0003899568108366856, 0.0003895433926562285, 0.0003890509130074191, 0.0003886749523805217, 0.00038774749154367325, 0.00038715994886803643, 0.0003871538077418797, 0.0003855590968865238, 0.0003848582997335619, 0.00038499540788436307, 0.00038443320105183555, 0.00038422581391514034, 0.00038435327095794536, 0.00038635575247213355, 0.00038787855451370484, 0.0003904811478096304, 0.0003937407154049349, 0.0003982604856740186, 0.0004046758727712144, 0.00041105053255814563, 0.0004163775183678243, 0.0004262641738708218, 0.00043503588544837305, 0.0004420315760786139, 0.0004503677819979159, 0.00045737850407486847, 0.0004686401604808566, 0.0004670391119295763, 0.0004732523807163228, 0.0004749021313676976, 0.0004707683821375551, 0.00046521315616701136, 0.0004618541800283724, 0.00044100939681295117, 0.00042842344896950484, 0.0004170473137482437, 0.00038703332295175036, 0.0003610765709853599, 0.0003514369042740622, 0.0003687363720041965]
1 [0.219176864504718, 0.1960047085984874, 0.15630386566531862, 0.11465762172507957, 0.07828846984767987, 0.049979570982548044, 0.028178415472073056, 0.028314477580588495, 0.03268959093474105, 0.024845099101116097, 0.016900674434286306, 0.013939354525771957, 0.004290188215531211, 0.0028463107645975566, 0.0014322628997586525, 1.0789095401340644e-06, 8.223382941210551e-05, 0.0001347802598434207, 0.000175067846434055, 0.00021244802363857673, 0.00025179952480474424, 0.0002928712664336373, 0.0003330507160543808, 0.0003707814131518176, 0.0004036957519130309, 0.00043111094059979197, 0.00045292905762556683, 0.0004697179264326751, 0.00048246979903864056, 0.0004919899564437593, 0.0004981624423945007, 0.0005009923279118054, 0.0005014046724989611, 0.0005000767784329936, 0.0004971340276669297, 0.0004930029081887818, 0.0004877700515476292, 0.00048198638252073514, 0.0004759831588691452, 0.0004697651394827448, 0.00046367191087906827, 0.00045778295337692206, 0.00045208962085549644, 0.0004465702538599801, 0.00044151221428392136, 0.000437009151205817, 0.00043304814012220356, 0.0004295074802885428, 0.0004265018772138191, 0.0004241151058718689, 0.0004223768880041573, 0.0004210960444488807, 0.00042078398665575567, 0.00042101508770455955, 0.0004218874817471103, 0.00042377766656438834, 0.0004262139088413337, 0.0004297763314455815, 0.0004336699791550743, 0.00043810008350569175, 0.000444202388629155, 0.0004505717553828757, 0.0004571775224943656, 0.000464342082416684, 0.000472187866505734, 0.0004799772536654175, 0.0004875360346954634, 0.000495243947781205, 0.0005023966382573014, 0.0005090557994787875, 0.0005148508018976772, 0.0005184592193514365, 0.0005214470434358548, 0.0005236521910530984, 0.000522496545579841, 0.0005192000879065152, 0.0005133158679750036, 0.0005072407562770162, 0.000498348587659449, 0.0004860179222062139, 0.00047219012708583485, 0.00045541397047856014, 0.00043785718463715896, 0.00041671560230494665, 0.0003965397713743747, 0.00038051432286416106, 0.000372580668693452, 0.0003769335457022506, 0.0003889323853657719]
2 [0.21962444052452595, 0.19567534013040688, 0.15515250106891842, 0.11333023210124636, 0.08063979595136725, 0.053713580351187167, 0.029432884192372267, 0.02583024820243216, 0.030294105226881644, 0.023151072134263297, 0.017956589792088813, 0.01620532905419854, 0.003837760399585306, 0.002004047479792537, 0.0007657367746246662, 2.1166921168228027e-05, 9.596636874385158e-05, 0.00014586502640549412, 0.0001864058637657054, 0.0002250051738786248, 0.0002647823744783356, 0.0003060683584973429, 0.0003464519411165636, 0.00038338654717543635, 0.00041529564463169713, 0.00044111579264128297, 0.00046103731533458117, 0.00047652113131502725, 0.00048801696354741414, 0.0004961781415052751, 0.0005010530345189545, 0.0005030540970849084, 0.0005027765452889256, 0.000500905010066993, 0.0004976279993704016, 0.0004931664530150047, 0.0004878277942256367, 0.00048199477406435647, 0.0004759418859389623, 0.00046982633563246936, 0.0004638986912714675, 0.00045818217443369233, 0.0004525107389586525, 0.0004471034876446119, 0.0004422070297751291, 0.0004378192206217673, 0.0004339194020661226, 0.0004303769164604662, 0.0004274419460679309, 0.0004251139042244174, 0.000423380417425409, 0.0004220800702853952, 0.00042178697631522767, 0.0004220279146398055, 0.0004229116814821968, 0.00042481077004921506, 0.0004272536046428813, 0.0004308176136398891, 0.00043471406181665943, 0.00043913330474147665, 0.0004452433022437947, 0.00045162421798281905, 0.0004582338782216219, 0.0004653966525359574, 0.00047324787604953043, 0.000481033990440682, 0.0004885892452902356, 0.000496301240551417, 0.0005034597857950663, 0.0005101290835366747, 0.0005159385605877238, 0.0005195554080686289, 0.0005225691896719304, 0.0005248179109001092, 0.0005236913533766249, 0.0005204360772222543, 0.000514600336157423, 0.0005086094380548003, 0.0004997854354200774, 0.00048749798902181403, 0.00047371757539072526, 0.0004569646729182564, 0.0004394398093837937, 0.0004183014143259674, 0.0003981735187376318, 0.0003822698280423191, 0.0003745562108449857, 0.0003792401187983916, 0.0003915716201174892]
6 [0.2234146242274455, 0.19222200687385307, 0.15066998599779596, 0.11089599928312922, 0.07539582488906696, 0.04787583074241948, 0.06269326600701838, 0.021039437011309666, 0.02616945912115607, 0.0183782100502315, 0.017834684720232474, 0.006301918227662208, 0.004046412832167631, 0.006537674522442984, 0.007705444929481264, -2.3821646942543252e-05, 8.239126826685497e-05, 0.00013932149227544768, 0.00018142218320346565, 0.0002244309503968519, 0.00026782056658653517, 0.000312295435862219, 0.00033863026985641036, 0.0003700502176509434, 0.00039309714013926843, 0.00041054751570555415, 0.00042293256883090355, 0.00043109412121469147, 0.0004362354889561653, 0.00044052955453649734, 0.00043889406115583187, 0.0004380199133438447, 0.0004344849359893876, 0.00043078469503844425, 0.00042630670464284976, 0.000420462666384238, 0.00041579198229451915, 0.0004114036652861317, 0.00040656980192187067, 0.00040287816237032965, 0.00039870891379130316, 0.0003959961085262192, 0.00039386376646749293, 0.0003915729080406343, 0.00038971632702497407, 0.0003886382937216634, 0.00038802653387695976, 0.00038683995242666796, 0.0003863360778956493, 0.0003861536879228496, 0.00038540129726208794, 0.00038502362568185487, 0.00038460376196782934, 0.00038372544815872797, 0.00038304839494866685, 0.00038296771378080053, 0.000381455355347435, 0.0003807570283493098, 0.00038086735609642563, 0.0003802784081646289, 0.00038007786385846625, 0.00038023360156902436, 0.0003822461323334395, 0.0003836703994628312, 0.00038635754514675997, 0.00038962671817122845, 0.000394092572349434, 0.0004005145313590008, 0.0004068564005339203, 0.0004121806757087068, 0.0004220226088187161, 0.00043075053595844053, 0.0004376951983323462, 0.00044596872867622557, 0.0004529104814721554, 0.00046408354594189505, 0.0004624041574834216, 0.00046856295936533045, 0.00047016970621488295, 0.0004660179672375347, 0.0004604757622915649, 0.00045717697077646394, 0.00043646896515334854, 0.00042411966245962257, 0.0004130107204794763, 0.00038333959434973323, 0.00035789547634212406, 0.0003488879503051464, 0.00036673681933978167]
4 [0.21893407350765837, 0.19414412395209196, 0.15637018599095212, 0.11482710152045557, 0.08013265249257513, 0.052506113901519734, 0.03002586872150655, 0.02732641338289785, 0.031819761689627066, 0.021530186587007623, 0.015371488769741481, 0.013663549100723975, 0.005175275912658922, 0.003598275250199269, 0.0024733346921431186, 0.00011246412950786507, 4.698626766769932e-05, 0.00010684890308988539, 0.00015225817898268545, 0.00019325320274576102, 0.00023432487243284182, 0.0002764408227427592, 0.00031812375425591664, 0.00035722829267983123, 0.0003921136249342383, 0.00042155545897272506, 0.00044547284552602716, 0.00046433240014944133, 0.0004787865723499022, 0.0004888065237634047, 0.0004955467791331095, 0.0004996270125670813, 0.0005011940983333664, 0.000500668625960848, 0.0004982779325894395, 0.0004944725903059358, 0.0004897057878887538, 0.00048422362448470417, 0.0004782155783346093, 0.0004721756480929632, 0.0004660306059217282, 0.00045994126716417593, 0.0004540580982864012, 0.0004484545883774896, 0.0004432923175907625, 0.0004385302869082364, 0.0004343329672134772, 0.0004307112248821999, 0.0004276781673233385, 0.00042522192079147913, 0.0004232456420532407, 0.00042216816397499087, 0.00042159677631116514, 0.0004218327488688726, 0.0004229193303245319, 0.00042476029691005876, 0.000427131156830571, 0.00043048053774063843, 0.00043463126618107603, 0.0004396865611764971, 0.00044509827380439035, 0.0004512853469667554, 0.0004584781873690713, 0.00046590495732758234, 0.0004731321960089091, 0.00048096131924119524, 0.0004891393674424337, 0.0004967601833772512, 0.0005030590769680115, 0.0005105345897583292, 0.0005158635469265522, 0.0005201720860699712, 0.0005229221575715187, 0.0005241712970951646, 0.0005228748967880654, 0.0005211323859004376, 0.0005150085148455542, 0.0005075287146464205, 0.0004984117658861942, 0.0004869914791096626, 0.0004725392209357891, 0.0004560426213086672, 0.00043648483599692306, 0.00041766893595550326, 0.00039574778523255433, 0.0003787838649721362, 0.0003716616831289033, 0.00037537042505313004, 0.0003866372298784633]
5 [0.21880087412126234, 0.19504226324045043, 0.15501665288273342, 0.11604917181086724, 0.08025387925477054, 0.05386607168138859, 0.029655549811266998, 0.026862193766195475, 0.028524886792560145, 0.020423897651998472, 0.014663645943095317, 0.0165251043428256, 0.007545576180396745, 0.0038550084049380475, 0.0006178622805708138, 2.4298213971050706e-06, 8.725212552132235e-05, 0.00013902537943338432, 0.00017749896256685923, 0.0002140278965530247, 0.0002528816020664345, 0.0002931507960272335, 0.0003329028070162929, 0.00036990731714424874, 0.00040285733041700155, 0.0004301414492178251, 0.00045191827071544105, 0.00046918745377960523, 0.00048231995934357305, 0.0004912950959497542, 0.000497460241572891, 0.0005010008311713476, 0.0005021665284669289, 0.0005012711812391215, 0.0004988271924766009, 0.0004949822912608322, 0.0004903858821680956, 0.00048492753317705385, 0.00047903070610835595, 0.00047307793363046837, 0.0004671257208363807, 0.0004612142288120602, 0.00045549317706268603, 0.00045005972984262334, 0.00044507166910371743, 0.00044030080805583234, 0.0004361048375531142, 0.0004324161074562771, 0.00042937907207658696, 0.0004268808488176307, 0.00042484759588023064, 0.00042370905394597175, 0.00042306731850404823, 0.0004231901187402158, 0.00042422527608179314, 0.00042601725019168334, 0.0004283480911007543, 0.000431685510786746, 0.00043581729703075174, 0.000440850313881397, 0.000446246740792201, 0.00045242376212106756, 0.0004596118187328431, 0.00046703691204719975, 0.00047426245082731654, 0.0004820859840953289, 0.0004902728538017088, 0.0004979006925597278, 0.0005042005369514453, 0.0005116897837636565, 0.000517021890806473, 0.0005213400028356948, 0.0005241103938095223, 0.0005253905889749939, 0.0005241292499215299, 0.000522438606561605, 0.0005163595422596441, 0.0005089410839711516, 0.0004998929439065652, 0.0004885470053946086, 0.0004741765859034734, 0.000457781945020602, 0.0004383495050681916, 0.00041971309381577313, 0.00039799700972232644, 0.00038130417390425944, 0.00037449693843415275, 0.0003785105070305664, 0.00039001364343856093]
14 [0.25219571512902894, 0.173525175247616, 0.14866429750418453, 0.09837398015229845, 0.09226896293126692, 0.050115020125812, 0.04555185057378229, 0.026529952950672335, 0.021056368363434778, 0.029965189355516928, 0.004610218213068744, 0.010675769764156441, 0.0055024499008297, 0.010941292751806806, 1.0712340874003634e-05, 1.549504537256331e-05, 0.0044205517257062225, 9.932167516859975e-05, 0.00018866168408773998, 0.00025422552679620574, 0.00031016521411447013, 0.00034421971647731134, 0.0003709466907286938, 0.0003906346668245222, 0.00039465341495151246, 0.00039786508542278746, 0.000397093790107204, 0.0003919287373559719, 0.00038683292835577467, 0.00037867869564679036, 0.0003746919184077415, 0.00036854875080137, 0.00036203081763377655, 0.0003600411855195167, 0.0003549557735099145, 0.0003531096214130755, 0.0003504644850996912, 0.0003486780762709772, 0.0003472316625613563, 0.0003462949900567583, 0.00034554559979313394, 0.000344446892430749, 0.00034433167191384663, 0.00034367953194073945, 0.00034353431517899135, 0.00034332852612598593, 0.00034317393511746377, 0.0003430237439888316, 0.000342831537578956, 0.000342961213466752, 0.00034276222495309346, 0.0003427895347436279, 0.0003427215633134312, 0.00034276441482827846, 0.00034271360550444793, 0.00034271455609144203, 0.00034267635984581253, 0.00034271999559754197, 0.0003426620405151486, 0.0003426553480972047, 0.0003427194302470613, 0.00034252838059305895, 0.0003426650167435762, 0.0003423353766811461, 0.0003425487043214154, 0.0003421443294104961, 0.00034224333625382534, 0.0003419234829017977, 0.0003418042170797425, 0.00034187410757256353, 0.00034197047930780355, 0.00034277934804122863, 0.0003438024726413685, 0.00034578852227676803, 0.00034954969942971976, 0.00035414650874822113, 0.00036009957752454653, 0.000369245765994998, 0.00037777295702566305, 0.00038968225713114366, 0.0003981256170746079, 0.0004098106252710507, 0.0004156406366232517, 0.0004176275205873297, 0.00041490924338326675, 0.0004034775589193014, 0.00038657958808116635, 0.0003567821826532554, 0.0003314120282118698]
10 [0.25010779242834397, 0.18354757224040286, 0.147567786299229, 0.09712844759257644, 0.06758354974153641, 0.06601686481705864, 0.04703956051359395, 0.03155244919336748, 0.02262526412426099, 0.007590943009119183, 0.024740805290626115, 0.014714717207466987, -1.9423755756353898e-05, 0.006899237539313286, 0.0021410254528048166, 0.0017071068378067722, 3.838649614305588e-05, 0.00010811962178019714, 0.0001577715660678946, 0.00021376478182980047, 0.0002637778221981855, 0.00031041189456338704, 0.0003494238773322413, 0.0003791732361228294, 0.0004064453161483778, 0.00042570283280014566, 0.00043846679910153753, 0.0004469251790580853, 0.0004503694401290154, 0.00045343075093098005, 0.00045092726147066906, 0.0004484984027648892, 0.00044357953255001455, 0.0004385776809457622, 0.0004326077813941396, 0.0004270943040506916, 0.0004217576856507449, 0.00041577043956380835, 0.0004113768487450965, 0.0004070519579635038, 0.00040343799208758307, 0.00040057418328071916, 0.00039754434061126624, 0.00039587981045425527, 0.00039410463542004736, 0.0003932572113335863, 0.00039229201723967164, 0.00039132312042427353, 0.0003908536611547744, 0.00039038059728385515, 0.0003899731836582626, 0.0003890814185396016, 0.00038890649521364164, 0.0003882775878521448, 0.00038682968588620373, 0.0003864774584401237, 0.0003855513256706512, 0.0003848113975311531, 0.00038365171175056505, 0.0003839689811458286, 0.0003837571136644617, 0.0003831368125059375, 0.0003849271436036065, 0.000387016967191543, 0.0003890055875383344, 0.0003915723169021782, 0.00039788895116716597, 0.0004033681731448855, 0.00040723491021563607, 0.0004159759800032104, 0.0004246820747342877, 0.00043304442297620744, 0.00043810016172915223, 0.00045130784070793867, 0.00045718854007114945, 0.00046035994747122553, 0.0004690036816728771, 0.0004723639286795139, 0.00047221800883770146, 0.00046639931304566436, 0.0004652585541150912, 0.00045757768011067673, 0.0004393511919159823, 0.00042973021616397026, 0.0004086572622119858, 0.00038591626221878915, 0.00035996845649400753, 0.0003474539914274904, 0.00036456379132047994]
8 [0.21240385901923814, 0.1934689693929843, 0.1575335942167929, 0.1175486751430034, 0.08285181825972303, 0.0554163100294191, 0.030327543572876245, 0.025645044797306712, 0.028900341414174354, 0.02304261525747609, 0.016592969380470616, 0.013868991917527756, 0.005398529206814856, 0.003039018787311014, 0.0015830289320372805, 0.00018013282828829714, 5.3085137537783026e-05, 0.0001103987659474304, 0.0001549188712998839, 0.0001977901190467819, 0.00024121292524463856, 0.00028561893502286823, 0.0003282393631733622, 0.00036732094335178566, 0.00040150258272116915, 0.00043023015676364236, 0.00045289046784907427, 0.0004707518701798428, 0.00048380931926705174, 0.0004931912147583415, 0.0004993296255042214, 0.0005025084019141934, 0.0005031236837896467, 0.0005016543945054034, 0.0004987598042425951, 0.0004948132314402184, 0.0004900833103125481, 0.0004845022867030359, 0.0004784067977976298, 0.00047218092873256893, 0.0004659374480663648, 0.0004599885809071991, 0.00045421340910907444, 0.0004487416108902454, 0.0004436844404923682, 0.0004391316318637182, 0.0004350361667669669, 0.00043154329409398517, 0.00042850307767545716, 0.0004262023006077126, 0.0004245447819921545, 0.0004235316944467417, 0.00042320993241436086, 0.00042336768902610637, 0.0004244738192103874, 0.00042629224236000966, 0.00042879684080292544, 0.0004323951450638522, 0.00043647908338343214, 0.00044154001984474, 0.00044695014264347613, 0.0004537572873582153, 0.0004603299075845394, 0.0004675114402296489, 0.00047529931843616713, 0.00048334813194419974, 0.0004917326236968992, 0.00049885567454788, 0.0005058888386537153, 0.0005123209084954036, 0.0005176450605788075, 0.0005233080653274722, 0.0005256404495745893, 0.0005272331593323683, 0.0005262620928225725, 0.0005231441175443639, 0.000518574512869278, 0.0005098438806698522, 0.0005018837673152154, 0.0004905026366355996, 0.00047594583827039274, 0.000459791903682954, 0.0004397803053996289, 0.00041976744714611715, 0.0003989673389865655, 0.0003822379283883021, 0.00037524691103610005, 0.0003798557778147975, 0.00039248032382387555]
9 [0.21310017447000743, 0.1954429256713317, 0.1572362698449027, 0.11700445686618785, 0.08286360820831933, 0.05307952980699425, 0.030237597566284774, 0.025304537426078987, 0.027869783786001738, 0.023890411698107593, 0.016254450540922814, 0.014521867105434724, 0.004943254396997471, 0.0031697163726459743, 0.003007587052440663, 0.0001458525058332968, 3.406624025486753e-05, 9.881747286344427e-05, 0.00014650186021687424, 0.00018830308878965295, 0.00022996474747674693, 0.00027171330111308556, 0.00031286472800398613, 0.00035206347821124025, 0.00038752816274483757, 0.0004179423293018261, 0.0004423002686920203, 0.0004611348430335148, 0.0004753859843267099, 0.000485861952301768, 0.0004930306308527789, 0.0004972303886052437, 0.0004990173252796765, 0.0004986598628096659, 0.0004962257742696636, 0.0004926923075874952, 0.000488315315874332, 0.0004832314681042241, 0.0004776111732549878, 0.00047154969117923335, 0.00046543724235121296, 0.00045942344533234563, 0.0004535953669890827, 0.0004481367984103226, 0.0004430122612479103, 0.00043842661777302865, 0.000434286880372259, 0.0004307362008067029, 0.0004275594238659352, 0.00042517691076765263, 0.00042344622778410805, 0.00042239331064810085, 0.00042208104609948804, 0.00042222660340328843, 0.00042329088197024114, 0.0004250648515098596, 0.0004275448075241982, 0.0004311354147741312, 0.0004352075223705163, 0.00044024622987713186, 0.00044565197869710245, 0.0004524429553909219, 0.000459021173639319, 0.00046619691862452887, 0.00047396196047967877, 0.00048198672454076284, 0.0004903367530111164, 0.0004974510891425387, 0.000504464246362538, 0.0005108721254131687, 0.0005161694452627352, 0.000521763435966685, 0.0005240679927554367, 0.0005255965529255803, 0.000524572555816599, 0.0005213978284380478, 0.0005167466202676205, 0.0005079710057438104, 0.0004998794073908645, 0.0004884097553583822, 0.0004738054003618557, 0.00045761516577203653, 0.00043763201532007136, 0.0004175980878365134, 0.0003967423989834326, 0.0003798154505533744, 0.0003724102943659695, 0.0003764386627215654, 0.0003884727678704093]
13 [0.24906470437741873, 0.1890867927143262, 0.13287276022585287, 0.1059431956242172, 0.07288293545232558, 0.06090016379926129, 0.05456554422035736, 0.034200962201064604, 0.00808476616721487, 0.02608649606720484, 0.009966244046315562, 0.009336395881382065, 0.009213675474231794, 0.008790709046658761, -5.042198392989582e-05, 0.0036011312423971584, 3.081398004305414e-05, 8.502969153787541e-05, 0.00013381533161722426, 0.00018205013254959324, 0.0002339837137508266, 0.0002790503498921777, 0.0003202269901117232, 0.00035526958500786275, 0.0003816001531045069, 0.00040323952021215634, 0.0004194736256757434, 0.00043131502104688585, 0.0004375569594360786, 0.00044090487047915885, 0.00044136224574759815, 0.0004393008246507169, 0.00043442898856879876, 0.00042978437274596035, 0.00042444163438381567, 0.000418126088651977, 0.00041177213149980375, 0.00040570740458806834, 0.0003999250458238962, 0.00039435894790965044, 0.00038969559901270214, 0.00038533473994191854, 0.00038122233824699396, 0.00037755942813072463, 0.000374344714077491, 0.0003714905383605631, 0.00036860447892834113, 0.0003655544837746138, 0.0003631809591981974, 0.0003602974731846646, 0.0003574430844407141, 0.00035378057444628074, 0.000350857762159446, 0.0003474280036898651, 0.00034264832138750475, 0.0003391107103143338, 0.00033458717931406415, 0.0003301087160984355, 0.00032485630973430536, 0.00032138452898015067, 0.00031705738212997977, 0.00031189911725311903, 0.00030999154559172254, 0.0003078940107528459, 0.00030530288413423926, 0.0003034874134771979, 0.00030699051840725076, 0.00030926048246253445, 0.0003088353620291814, 0.0003157048723044927, 0.0003224529829680275, 0.0003290929634234275, 0.000331480524097243, 0.0003470973627830457, 0.0003524071330265677, 0.00035491680478957395, 0.0003672025547417963, 0.0003729774732117471, 0.00037525942594635953, 0.00037166608884783007, 0.00037764736409070447, 0.00037583817096186075, 0.00035972096093712534, 0.0003588935479887866, 0.00034227123907845213, 0.0003248561140486107, 0.000303798270523663, 0.00030166477674085863, 0.0003574823443421832]
11 [0.21443683194050925, 0.19453260520622667, 0.15746746700277076, 0.11795912464234068, 0.08193060886824677, 0.05098957590031844, 0.02747827538803419, 0.025375178694835708, 0.03005596746642952, 0.023298609436344972, 0.017797357866729233, 0.014047440813514459, 0.004856316749180604, 0.0029578716383267846, 0.0011549880084125998, 6.969496269978149e-06, 8.992550591205893e-05, 0.00014422409240858622, 0.00018561271314905986, 0.00022430509023772682, 0.0002644356932624782, 0.00030573122937936343, 0.00034690063092117644, 0.00038545434996384845, 0.000418494328993029, 0.0004458399475294565, 0.0004677227246999375, 0.0004845837624116015, 0.0004973628392134861, 0.0005065337893188843, 0.0005122425229162435, 0.0005152543581198543, 0.0005158829411888291, 0.0005149858443018302, 0.0005127672646544437, 0.0005091506540341616, 0.0005046488902365092, 0.0004998576295102806, 0.0004949589527224693, 0.000490005182032577, 0.00048532764758593434, 0.0004810420273622604, 0.00047712981945058347, 0.0004737861573096338, 0.00047092813542181153, 0.00046867835969788784, 0.0004670353949465969, 0.000465960113702519, 0.0004655933444094202, 0.0004659217992764752, 0.0004671449682668747, 0.00046905185862511876, 0.0004717459583755589, 0.0004750329719150856, 0.00047901389949635726, 0.0004839498813616639, 0.0004898304605518662, 0.0004965251619776267, 0.0005034277689447474, 0.0005117477048402841, 0.0005200968332067368, 0.0005291859706156533, 0.0005387023581068329, 0.0005486770198243303, 0.0005584155400423734, 0.0005684882980283134, 0.0005776659405401075, 0.0005867755730984505, 0.000595341330369468, 0.0006025904446548068, 0.0006087164046721977, 0.0006120356520640062, 0.0006148971354380235, 0.000614899826500405, 0.0006132391045333724, 0.0006064632960709867, 0.0006006836501612619, 0.0005903249142063843, 0.000577533454494435, 0.0005625278042471361, 0.0005457127061765242, 0.0005212796389908632, 0.0004969969801947279, 0.0004717203583099957, 0.0004463628958883502, 0.0004284498434148469, 0.00042464505742634555, 0.0004351931172596514, 0.00045750507240352207]
12 [0.2147352498753265, 0.193742540660935, 0.15623458579093807, 0.11538909577107959, 0.08018580094751276, 0.053618029311362767, 0.031296812940496216, 0.029084017762824727, 0.031495289850972816, 0.022227992228431737, 0.01421698429993741, 0.011863004437835091, 0.005270640598902588, 0.003417782512441598, 0.0016433028920666672, -3.1476481770029247e-06, 8.044999681128422e-05, 0.0001357512534990352, 0.0001785514041577041, 0.00021787680700466368, 0.0002581914356298832, 0.0002999257085191968, 0.00034135581381055107, 0.00038026956240417865, 0.000414294059164825, 0.0004428527761670214, 0.00046591390110007854, 0.0004836263819270875, 0.0004968841192261842, 0.0005064244360895363, 0.0005125962745954469, 0.000516001667919089, 0.0005169897158614713, 0.0005163185126696249, 0.0005140328764436862, 0.000510247985846813, 0.000505658432804798, 0.0005006311194816642, 0.0004955008013911165, 0.0004904558887518475, 0.00048562732485414004, 0.00048112103882201693, 0.0004770635301935384, 0.00047358578190064655, 0.00047055353599238385, 0.00046817556343660215, 0.0004665431463975998, 0.00046545725757486423, 0.00046512056198043356, 0.0004654572845188519, 0.0004666837751111982, 0.0004686478534926448, 0.0004713816985882778, 0.0004747173379407424, 0.0004787257775016534, 0.0004836932569531895, 0.0004896112790088107, 0.0004963360701378285, 0.0005032662234817297, 0.000511611182222607, 0.0005199766107298, 0.0005290869454343059, 0.000538627510576469, 0.0005486200165953276, 0.0005583680916956347, 0.0005684570313657161, 0.0005776491982436624, 0.0005867747637909773, 0.0005953542260930759, 0.0006026113083799226, 0.0006087414638400103, 0.0006120521075892415, 0.0006149047566814485, 0.0006148855950114358, 0.0006131965947403313, 0.0006063675287923214, 0.0006005434680074382, 0.0005901189793652958, 0.0005772530865208623, 0.0005621666887246602, 0.0005452657326854642, 0.0005207082371250702, 0.0004963035348961587, 0.0004709001506606682, 0.00044541605264012443, 0.0004274172554676364, 0.00042360284474385963, 0.0004342170116112139, 0.0004566560236458141]

===========================================================================================
python3 delay_tomography.py 4 3 uniform 0.5 1000000  failed with stdout:
b'i_max is 24\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 4 geometric 0.5 10000  succeeded with stdout:
i_max is 51
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.2060455351583269, 0.1513006015662921, 0.11787663196288209, 0.10893583460614714, 0.09276542534786983, 0.054201364044004406, 0.05270458944997319, 0.04414535496748367, 0.020756824108662225, 0.03780350003172632, 0.012016719533015589, 0.029197349074040122, 0.006811543575318683, 0.008586537186028859, 0.01339987500586674, 0.0035359613963237735, 0.006634721010242446, 0.004910118066077695, 0.002565890164709847, 0.005085281476130349, 0.0027711972148912667, 7.132561359330644e-05, 0.003020888374723721, 0.0016147635515801218, 0.00029621293963986084, 0.0005560107612111703, 0.0011460120671422497, 0.00037727343325207123, 0.000508962714485658, 0.0004502775697016139, 0.0003964600041383422, 0.0004446896029674472, 0.0005679122921784807, 0.00038783500618350814, 0.0005866564139766423, 0.00034406932077199394, 0.0004138480490833215, 0.00046725756367275214, 0.0004152221755053419, 0.00046131267443204625, 0.0004111459342361551, 0.00043828838423393954, 0.0004261128966435164, 0.00043659500080196593, 0.0004320319853668743, 0.0004314953933232659, 0.00043421343622151407, 0.00043213974851551346, 0.00043254017002789755, 0.0004336891427357306, 0.0004319650741433522, 0.00043321474218070715]
1 [0.19597056090303444, 0.16668732749915038, 0.13892824118415653, 0.0891611771258808, 0.07247608557725141, 0.08861953384742105, 0.045651322603572644, 0.02825474158579924, 0.035280377614285194, 0.02821226255210693, 0.0064695477285459475, 0.03017677887960801, 0.016212445675404093, 0.008964771534638274, 0.008235179552205634, -9.595634477901183e-06, 0.01049989747042017, 1.8308163351669642e-05, 0.00900188600472162, 1.3940115429464995e-06, 0.003860219275106879, 2.1402565465397995e-06, 0.0016541811767109187, 0.00012055979955945132, 0.00024308284125589246, 0.0003255253660983691, 0.00041837504930570336, 0.0004797312814894852, 0.0005203997018120894, 0.0005463476997929397, 0.0005690088775635758, 0.0005726357233984523, 0.0005880218504176938, 0.0005867320154629888, 0.0006032009878193363, 0.000597057904983196, 0.0006014324005786768, 0.0006068787703149341, 0.0006090206080669663, 0.0006163557229471232, 0.0006187247991931569, 0.0006225018846115244, 0.000622851160809695, 0.0006249479286627286, 0.0006164206248091117, 0.0006062904571929434, 0.0005939541382796159, 0.0005662398892108953, 0.0005312667416263019, 0.0004903809132562724, 0.00043928643620432537, 0.00039827754355522415]
2 [0.18684705621154735, 0.17669992371986304, 0.13101532660311466, 0.10351939979971064, 0.05083949795733428, 0.0806592785473006, 0.052980199681605666, 0.03320425280058925, 0.05019133538979824, 0.031085473344444257, 0.01301573255399336, 0.020859930574508058, -2.7180039572765736e-05, 0.020344728046032892, 0.019551953170275266, 0.0031814976102300255, 1.6175816725740708e-05, 0.0005606032387926608, 0.00016533662464701356, 0.0031832812897319178, 0.002148835221143396, 1.319523242975272e-05, 5.425295831185344e-07, 0.004196968898211851, 0.0006742303702415677, 0.00016226524126546912, 0.0002775824544728994, 0.0003699604147309422, 0.0004603403651770019, 0.0005231771928444454, 0.0005537939615178624, 0.0005871543456232557, 0.0005908403808827498, 0.0006016998872071077, 0.000612260844185518, 0.0006133703024602066, 0.0006248369154550934, 0.0006218730254823481, 0.0006262183164301325, 0.0006331182461101841, 0.0006325836483333741, 0.0006402945362866111, 0.0006368529234309515, 0.0006395945151439933, 0.0006349324038837122, 0.000623354197623788, 0.0006073425725760549, 0.0005788679603340771, 0.0005431259777396328, 0.0004956064010924993, 0.00044171813546995086, 0.0003969528090915599]

===========================================================================================
python3 delay_tomography.py 2 4 uniform 0.5 10000  succeeded with stdout:
i_max is 16
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08981483022551505, 0.08335893793365622, 0.1368161524006845, 0.0713260996350653, 0.1016846746172007, 0.12700153048553217, 0.08538777607552121, 0.10570553820305381, 0.0883037858804327, -4.480218714307928e-23, 0.0601683691456033, -5.365542519974762e-23, 0.03981616567367396, -4.3842386061346395e-23, 0.005769934128925355, -4.4684183773627695e-23, 0.004846205595135628]
1 [0.1252974169961431, 0.13678134796461083, 0.06887873051678513, 0.11537199879946755, 0.10034604735455269, 0.11740643905024609, 0.13376358515338047, 0.10538977262791914, 0.08981965038287078, 2.5823255609336543e-24, 1.0873903171463148e-22, 1.9592762167821578e-23, 0.006945011154024192, 1.5673185772117798e-22, 1.170488562126428e-22, 1.6310641157196451e-22, 1.3215923444632094e-22]
2 [0.12066714156982508, 0.12227241628727353, 0.06420993787458741, 0.14269654192167366, 0.12526000620568048, 0.10012075805132162, 0.14236797857686515, 0.09873088254838228, 0.040476115589081985, 0.03271404811246617, 0.01048417326284257, -5.666168979626083e-22, -1.482458275906832e-22, 1.818528852174384e-23, -3.6343073234154194e-22, 1.8392576518525232e-23, -3.486734575472379e-22]

===========================================================================================
python3 delay_tomography.py 3 4 geometric 0.5 10000  failed with stdout:
b'i_max is 63\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 4 uniform 0.5 10000  failed with stdout:
b'i_max is 24\n0\n0.0025\n0.0021\n0.0046\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 geometric 0.5 10000  failed with stdout:
b'i_max is 76\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 uniform 0.5 10000  failed with stdout:
b'i_max is 32\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 4 geometric 0.5 50000  succeeded with stdout:
i_max is 63
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.20047443124648007, 0.15881069236960477, 0.12327018759769842, 0.09613635412498342, 0.09094898034510154, 0.06928098636267577, 0.0434200412798063, 0.04602578412218314, 0.027677686747587492, 0.030759591453063166, 0.01903776885913403, 0.017426757634571313, 0.012831676322223977, 0.011583011396713631, 0.007946823381130681, 0.006745637152489179, 0.0026483857648578898, 0.004958200117483711, 0.004178893490391095, 0.00228598050317413, 0.0017791961071265017, 0.001085143833507394, 0.000986321129977559, 0.0005931653831175815, 0.0005207654417543215, 0.0010762454264895858, 0.0005994554578978727, 0.0005389839998479258, 0.0003756266371392774, 0.0004582873404542826, 0.00047986477605813603, 0.0005286094541302696, 0.0004903631797878429, 0.0004209326839467739, 0.0004703583125249241, 0.000465507617744202, 0.00040562563179575217, 0.0004755671367430263, 0.0004276105460300361, 0.000461389139414391, 0.00043562179083899983, 0.00046128174630372023, 0.00043667359747101185, 0.00044510559097728935, 0.0004465329041424765, 0.000438120976966239, 0.0004427905647670426, 0.0004433861684058564, 0.0004506319122666167, 0.00043856947398020343, 0.0004425900945867486, 0.000443377205610792, 0.0004586712810823807, 0.00043348447916326043, 0.0004425388789281396, 0.0004433320211160206, 0.00045108827977082976, 0.000438141206634446, 0.000442766068324028, 0.00044332255382083257, 0.0004431953700566828, 0.00044298387060276163, 0.0004431142729779986, 0.00044311308098819545]
1 [0.19661181783193982, 0.1574131370548758, 0.13258236952324784, 0.10564647565757823, 0.07878079482084577, 0.06541327151795305, 0.04938358266269429, 0.04666745491117778, 0.02577749368809152, 0.028711922047114643, 0.018330875397827406, 0.023550768320470927, 0.008484533546938691, 0.011536204520828597, 0.004369572234489606, 0.004135741234790684, 0.013049372204827245, 0.0032384224829881377, -2.9776198187328413e-05, 0.003831096165524865, -7.00600942293956e-05, 0.000835982014236291, 0.00011184063326255146, 0.00029122945077712017, 0.0003908051648832085, 0.000439231672549391, 0.000493145622894572, 0.0005332252759433279, 0.0005256434048786146, 0.0005557880224510828, 0.0005444588481512702, 0.0005580540885126567, 0.000551919771126636, 0.0005510475115153993, 0.0005441285989771381, 0.0005423318517934791, 0.00053442269606742, 0.0005326045138403202, 0.0005224068503408828, 0.0005210553865311908, 0.0005191113726519222, 0.0005156924986674113, 0.0005143858623903323, 0.0005132269012801047, 0.000513706931450197, 0.0005159575210176067, 0.0005166720601330744, 0.0005237508990405774, 0.0005283427317984044, 0.0005365384970239427, 0.0005421287898021145, 0.0005500446057468704, 0.0005582219783335574, 0.0005660699177469734, 0.0005709548607999459, 0.0005751069088888588, 0.0005723109676939432, 0.0005704617921095518, 0.0005585696568430824, 0.0005400717477730536, 0.0005156604373617348, 0.0004843821755278703, 0.00044464414447688706, 0.00041395468023530137]
2 [0.20384895517958773, 0.1538954350235302, 0.12872950901593946, 0.10344835282867304, 0.07760119943217725, 0.059349527256169855, 0.06152638186205631, 0.03279387285508292, 0.03651978810447255, 0.028594518199628806, 0.01611755329135677, 0.02242769164504711, 0.00990976011196313, 0.008435099749071914, 0.01468545044113863, 0.0007669309209922686, 0.0074433542683304986, 0.00514395411924615, 0.004980705864205749, 0.0007855278267377738, 0.0010207290534276828, 0.00011473322529246509, 0.00023741439387216928, 0.00032530369072441927, 0.00039203722992069037, 0.00045232105349739325, 0.0004958270727133962, 0.0005123160389189702, 0.0005372565421244983, 0.0005403074063549985, 0.0005503547432575454, 0.0005498472925088641, 0.0005496220870711867, 0.0005461579578219596, 0.0005438475613085665, 0.0005385123794316836, 0.0005353614521775637, 0.0005275657982091138, 0.0005240885286818186, 0.0005211327080475758, 0.00051753416370874, 0.0005155998882687401, 0.0005134433960883926, 0.0005129289071004043, 0.0005134506477746741, 0.0005144022368897925, 0.0005174639177103898, 0.0005227872993105512, 0.000527745547516699, 0.000534527724337414, 0.0005411555335214062, 0.0005490826300272245, 0.0005571866978522253, 0.0005647237516624463, 0.0005688651678092801, 0.0005736472112898314, 0.0005708872082873663, 0.0005682664970864506, 0.0005572877855822076, 0.0005378555391631018, 0.0005142231773643327, 0.0004825323017892406, 0.0004434751343859758, 0.0004139137090894234]

===========================================================================================
python3 delay_tomography.py 2 4 uniform 0.5 50000  succeeded with stdout:
i_max is 16
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.11407753249482787, 0.09961577244218936, 0.12863097907841958, 0.08700784698919166, 0.11314561111590817, 0.10771927655262471, 0.11959702634952238, 0.09217848858499816, 0.11675845687222786, -0.0003121879159044873, 0.01624387287349957, -0.0006899998484520616, 0.0037020439248731224, 0.0009883686841757422, 2.604346261195793e-05, 0.0006142550701069207, 0.0005698003969123889]
1 [0.1060725485035827, 0.12701623532385267, 0.09114769763735299, 0.11230167544513103, 0.11800173743439371, 0.1162035636250372, 0.10550016296099987, 0.11127146226540438, 0.10914334390722334, -8.538593348120029e-24, 9.062562637814629e-23, 0.0033415728970220375, 1.4229499121521467e-22, 1.8985940708331857e-22, 1.3923057520944532e-22, 1.2717642547701623e-22, 1.5808170231114577e-22]
2 [0.11160102078388705, 0.0945723112432803, 0.10406370256987638, 0.1331581429185373, 0.10771283125813383, 0.11821477974940302, 0.11150408629512593, 0.11034243601258602, 0.08230659818275395, 0.023654884924999633, 0.0028692060614167736, 2.7741194436568797e-23, 6.247671137731119e-23, 5.076063979484661e-23, 5.0744642764579845e-23, 3.4679738379560177e-23, 5.970263107558042e-23]

===========================================================================================
python3 delay_tomography.py 3 4 geometric 0.5 50000  failed with stdout:
b'i_max is 85\n1.5675276755179088\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 3 4 uniform 0.5 50000  failed with stdout:
b'i_max is 24\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 108, in infer_delay\n    k.alpha = DelayTomographyMle.least_squares(k, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 136, in least_squares\n    result = prob.solve()\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 246, in solve\n    return solve_func(self, *args, **kwargs)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 361, in _solve\n    self.unpack_results(solution, self._solving_chain, inverse_data)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 471, in unpack_results\n    "to reduce the dynamic range."\ncvxpy.error.SolverError: Solver \'OSQP\' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.\n'
===========================================================================================
python3 delay_tomography.py 4 4 geometric 0.5 50000  failed with stdout:
b'i_max is 83\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 uniform 0.5 50000  failed with stdout:
b'i_max is 32\n0\n0.00056\n0.00058\n0.00114\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 4 geometric 0.5 100000  succeeded with stdout:
i_max is 63
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.19877199106673993, 0.1612055417659469, 0.12813374798302019, 0.09862752323627398, 0.08239382269729426, 0.06796212803808255, 0.04439813488318635, 0.04425752942433943, 0.03208025340580963, 0.02904116397453171, 0.018897387934294425, 0.017226637724779274, 0.011819732400457129, 0.011612666801259542, 0.008550813843853006, 0.007177163874916637, 0.0041554482070492345, 0.004587346344180725, 0.0038546601405324483, 0.002007690716520558, 0.0018175073048568012, 0.0006811874129072604, 0.0012681799902852717, 0.0005002475684623247, 0.0007706383165910597, 0.0005996950848307996, 0.0005133652739244746, 0.0005775052630291146, 0.00044744475041607603, 0.0004914913849225172, 0.00045757117645043476, 0.0005069334229547998, 0.0004892779829498904, 0.00043732521738127625, 0.00046453793040677745, 0.0004506599734135745, 0.00044202921130361803, 0.000455191607467716, 0.00043615578277955876, 0.0004495895902046033, 0.000459649096160421, 0.0004653113685009921, 0.0004345960647807444, 0.0004439822527709411, 0.000447540682881704, 0.00043967554085273434, 0.0004445481466000535, 0.00044434094429575047, 0.0004487595440249679, 0.0004460341285331229, 0.0004420464321873129, 0.000444572160187448, 0.0004521985319872803, 0.00043998925791713216, 0.0004482029886381701, 0.00044212707271914923, 0.00044850545520519285, 0.0004421734613104427, 0.0004444138605505301, 0.00044471236797708754, 0.00044446313844716186, 0.0004447117161884066, 0.00044446362196805803, 0.000444650381286935]
1 [0.1998602512544711, 0.15557565639625545, 0.12313437073767572, 0.11205945253322067, 0.07947568825229617, 0.06323349932489118, 0.059186333076370785, 0.035301200926715834, 0.03417420899321242, 0.026223234362782427, 0.016766534995746277, 0.02356739487766841, 0.007714661494141786, 0.011667012698525148, 0.00796066504497828, 0.001856488227913454, 0.012120470494182974, 0.0023731414495711325, 1.17972106685654e-06, 0.003933956382145536, 0.001371154552047044, 0.0010057634027590178, 0.00011589231021852338, 0.00024053080035539096, 0.0003319235330407472, 0.0004028582429019674, 0.00045782937939122437, 0.0004981535277566234, 0.0005175483417385407, 0.0005369983778613993, 0.0005445506159571793, 0.000550868965319968, 0.0005497873408391179, 0.0005480982889275194, 0.0005424102359587804, 0.0005394831462719452, 0.0005341882648972328, 0.0005297863395981445, 0.0005243135749402072, 0.0005205817986329107, 0.0005176965946214162, 0.0005146635215444002, 0.0005133612976833775, 0.0005121979323691982, 0.0005129236350455538, 0.0005139203142189636, 0.0005167331574787806, 0.0005217424615630351, 0.0005266289640010672, 0.0005340397967947808, 0.0005405371203707841, 0.0005489285592384045, 0.0005562856873678282, 0.0005643654241973518, 0.000569329532036327, 0.0005725305482143289, 0.0005703885462641149, 0.0005672527412470395, 0.0005554037357991689, 0.0005380501696258115, 0.0005134506093839754, 0.00048058686682201897, 0.000439306268261312, 0.0004083549925170502]
2 [0.20323542325724964, 0.15551453725772174, 0.12513987233547882, 0.09686099014428212, 0.08737060324762758, 0.05861974025321204, 0.06194672644510545, 0.03911607993682893, 0.03170865663834517, 0.026787395954066248, 0.019744227231814772, 0.01573259794345371, 0.01164943308277537, 0.010739648269274968, 0.013603751971553417, 0.003908866525294257, 0.0024381994914830355, 0.006088573092142606, 0.00610173260700743, 0.0010353812888857935, -6.81830464835007e-05, 0.0009798778647763487, 0.00010669932424971844, 0.00028753294530794234, 0.0003948356155706025, 0.0004500225656581963, 0.000492213176471075, 0.0005264350433488974, 0.0005282669933039327, 0.0005469162278461456, 0.0005483717985369748, 0.0005558698203981479, 0.0005497362826337444, 0.0005491453985635173, 0.0005425569981006935, 0.0005404349483502445, 0.0005353062714328363, 0.0005323324674823117, 0.0005252746893526639, 0.0005220229201909632, 0.0005201563367763905, 0.000516435299871111, 0.0005154392416683427, 0.0005135611504811287, 0.0005153729093978237, 0.0005156303961679835, 0.0005189158207203112, 0.0005239962790073675, 0.0005283222007869729, 0.0005360813415747935, 0.0005418903277203176, 0.0005506087712812355, 0.0005575736631484705, 0.0005658074766025445, 0.0005709880743354521, 0.0005739265595365641, 0.0005720578240327112, 0.0005691734684513093, 0.0005577715255793659, 0.0005412415699647495, 0.0005174247814679423, 0.0004855631680455886, 0.0004448915408713434, 0.0004136227586445353]

===========================================================================================
python3 delay_tomography.py 2 4 uniform 0.5 100000  succeeded with stdout:
i_max is 16
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.11919669334949996, 0.1004131664220233, 0.11816697069680726, 0.09846630292212913, 0.11261319649894623, 0.10763060111376435, 0.11865085104686225, 0.10310045214061443, 0.11034273162761075, 2.2457540431905153e-23, 0.00623417683525062, 2.347371909892938e-23, 0.005184857346491818, 2.3653353612211656e-23, 2.304003869797183e-23, 2.365335362169686e-23, 2.4214056196408956e-23]
1 [0.10014306706089145, 0.12366571198382748, 0.10001620313527454, 0.11402405907336725, 0.10798726371778979, 0.1213324927253026, 0.11065803225281186, 0.10547872664953332, 0.10610498855186039, 0.009691015353509342, 1.4275494592525293e-22, 0.0008984394958319202, -8.283867604603273e-23, -4.579491965875338e-23, -1.4534730668942508e-23, -9.489147623399413e-23, -9.6560835234482e-23]
2 [0.10165336750559899, 0.11032193554575687, 0.10566358337482462, 0.12377649379955809, 0.11230229777974773, 0.11479414233830477, 0.10076822388681829, 0.11923410157969021, 0.10050923349834773, 0.005329251109204469, 0.005647369582148234, -1.3100282540132764e-22, -2.5097763156660846e-22, -8.598131214977902e-23, -1.6918613798314044e-22, -2.212377980518797e-22, -2.1139727027957979e-22]

===========================================================================================
python3 delay_tomography.py 3 4 geometric 0.5 100000  succeeded with stdout:
i_max is 85
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.21256195774122877, 0.1376756214857937, 0.15938235097457293, 0.06652714272499771, 0.11435490953909463, 0.030033747970431658, 0.06919438049052481, 0.0427248968450958, 0.024805132347851876, 0.02578029059313308, 0.019394668180903147, 0.01833774312468441, 0.00979172959810741, 0.015102987512793797, 7.417630023706537e-05, 0.01737009112829426, 2.0700403232719955e-05, 0.0077751838421418066, 0.00031759754285866137, 0.004126215035030354, 0.00043816635581190954, 0.0021654198468212442, 0.00026159581794421094, 0.00023739486780585648, 0.0036733416575555223, 6.415230178839736e-05, 0.00032203148621311905, 0.00044994915102872284, 0.0003349210536349481, 0.00041527181860333783, 0.00028434113819527035, 0.0001835705934420213, 0.0006431144027620617, 0.00010959985610070716, 0.0004504851467754112, 0.00017741980101203188, 0.00040118919921829153, 0.00016024602690644995, 0.00046074273808480604, 0.00015141107549034868, 0.00035777943455025214, 0.00023574977419301479, 0.0003097695192767401, 0.00029252612128996005, 0.00027429211877805833, 0.00029947100625114705, 0.000261902403583017, 0.0003050324514068278, 0.0002484912064862168, 0.0003088816582863238, 0.0002689988805375396, 0.0003125715645990995, 0.00024841865376241674, 0.00029845243222702126, 0.00027753842597998536, 0.00029766735011634005, 0.0002636320198683301, 0.0002937472667655198, 0.00027743028275660335, 0.0002859380472923131, 0.0002811797062665706, 0.0002945953014421795, 0.00026634561400307725, 0.0002910463702516707, 0.00028006025324516805, 0.0002844182413093834, 0.00028085007781581447, 0.00028532627961849527, 0.0002801901958634446, 0.0002843129554152981, 0.00028258585276932306, 0.00028200204340678256, 0.00028358684375653394, 0.0002824076858825908, 0.0002826991947798165, 0.00028291669213477194, 0.0002826937200784763, 0.00028269252636509634, 0.00028288525846842524, 0.00028268416563528284, 0.00028271979561243104, 0.00028287365522328795, 0.00028264232085903785, 0.00028282654955479275, 0.00028275095404778653, 0.0002827250347026489]
3 [0.19018356583429635, 0.16611451093554097, 0.11953638198511994, 0.10374847779552626, 0.0829218014761823, 0.07080887890592356, 0.052121669899244806, 0.036956852747309046, 0.03664670467813343, 0.010603142849852785, 0.03651123842163892, 0.016351322927783442, 0.007012629556898162, 0.023241798207654915, -4.806789442256545e-06, 1.1460804118186153e-05, 0.0017967966198235536, 0.011229838337622314, 2.6906463792536024e-07, 2.0875887331957662e-05, 0.008712351553458099, 0.0001034784133449017, 0.00014844572249821038, 0.00023308912478576288, 0.00025922604203587444, 0.0003237588434116961, 0.00033748313605730276, 0.0003673313386335122, 0.0003915917839925942, 0.0004013110868801211, 0.000409843878553605, 0.0004168920693147289, 0.000418286150471763, 0.00041896397707751135, 0.00042255706951318834, 0.0004104451933311933, 0.00041795257692210414, 0.0004076558534991523, 0.0004082436528596295, 0.000403959253035686, 0.00039867608210996454, 0.0003990978111251572, 0.00039602657190205247, 0.00039204086235504736, 0.0003911114844906004, 0.0003898629949153418, 0.00038813601175946425, 0.00038805812883553484, 0.00038487647161151013, 0.0003866925103537995, 0.0003853271773184391, 0.00038415146355196824, 0.00038510203032203103, 0.00038456061845974635, 0.0003828226947160705, 0.00038518465308589505, 0.0003826540643633168, 0.00038380130065587977, 0.0003833639662462572, 0.0003826723931136701, 0.00038371189300595294, 0.00038390755489972356, 0.0003820834069264452, 0.0003858651959710833, 0.00038561604451608654, 0.0003853442288261819, 0.000391529130614717, 0.00039042948805370376, 0.00039655137857764306, 0.00040190449860875554, 0.00040499617278509685, 0.00041431058027698503, 0.0004227902601211315, 0.0004262080690994047, 0.00044171958693854657, 0.00044380546512119684, 0.0004508955300326637, 0.0004618602729969147, 0.0004552306273292517, 0.0004592009399867087, 0.0004501157264232918, 0.00043715085004996485, 0.0004244402744049729, 0.00039673507452267894, 0.0003659808379363993, 0.0003490325156004202]
1 [0.17790824714639142, 0.17071299406101897, 0.13451970793319118, 0.10800032096439657, 0.05990201252512968, 0.06821780785276574, 0.0557614733608776, 0.05740094462175211, 0.022392322245633346, 0.02306951673627969, 0.021759064251234722, 0.01681872978949774, 0.016707101883200636, 0.013576108434035821, -5.577752406683621e-05, 0.0042776816508408155, 0.01007632060720178, 0.008518130567673459, 0.00017328538507220437, 4.1574780845513566e-05, 0.00010281248880362032, 0.00015109046185805895, 0.00018919147762901087, 0.0002312013913061992, 0.00027271363056048875, 0.0003129682948712836, 0.00034925504671079704, 0.0003819415822213674, 0.0004110914369011938, 0.00043216440712416773, 0.00045196816406288304, 0.0004686821808990699, 0.00047866138912989656, 0.000488950477490664, 0.0004963712424038585, 0.0005021589869776566, 0.0005030063857089904, 0.0005026814533280848, 0.0005038177079520454, 0.0005004900774817156, 0.0004988769376377132, 0.0004953996543036734, 0.0004913918134644968, 0.0004875675734051238, 0.0004827798908263511, 0.00047694894559520835, 0.00047312644275719607, 0.00046880803450010186, 0.00046633621299311764, 0.00046262707305850295, 0.00045989892246745456, 0.0004582773165432124, 0.00045820661324809186, 0.0004568911340253495, 0.00045855040329454273, 0.0004584915373016657, 0.0004618871526266222, 0.0004660901967537085, 0.0004685798994995123, 0.000474246170130876, 0.0004803557777199321, 0.0004846975733267143, 0.0004942139114847547, 0.0004995015688812057, 0.0005058844066043095, 0.0005114033265029019, 0.0005215486351831054, 0.0005258110276980751, 0.0005267006848459674, 0.0005362454264497138, 0.0005368768672329118, 0.0005424241151382239, 0.000534218079212887, 0.0005344562284178901, 0.0005312900381425486, 0.0005185983069568461, 0.0005163106995500731, 0.0004994821192440463, 0.0004828743219470521, 0.00046993736876716277, 0.00045020570731248296, 0.0004235305187831511, 0.00040680606329482945, 0.0003770312388016021, 0.0003775474264029282, 0.00039644805992050376]
2 [0.18416552069995243, 0.15957811441466888, 0.13003034041334893, 0.10334982033479113, 0.09455867406682802, 0.06566271261219403, 0.04101905186498617, 0.030480778944616316, 0.036776891784297855, 0.03185676787912284, 0.025646883734423233, 0.01781775373957545, 0.016403254078899226, 0.007346594768588542, 0.003180583537864344, 0.009687582360541815, 0.0016190665283223298, 0.0018122732069077048, 0.00043837483997275845, 0.007192596737308655, 0.0013399750261390143, 0.0003494292962360969, 5.698808772765601e-05, 0.00010839700631482536, 0.00016096817323963834, 0.0002125130889143128, 0.00026528447106355195, 0.00031196996347062397, 0.00035423549481596023, 0.0003897007065799023, 0.0004212980688411578, 0.0004493910524876246, 0.00047163983732096776, 0.0004907678720163929, 0.0005010415323268079, 0.0005097483092741859, 0.0005160841855619026, 0.0005182703305375235, 0.0005184709224721864, 0.0005170442404250347, 0.0005159204697233381, 0.0005123129430380541, 0.0005075200542071015, 0.0005033438344142913, 0.0004979200081728077, 0.00049230634455698, 0.0004873584251046937, 0.00048205258316022834, 0.0004781095857855731, 0.0004742156558873386, 0.00047087072497948435, 0.00046910337407090957, 0.000468762305028643, 0.00046692478195012115, 0.00046866252301737714, 0.00046880290265302225, 0.00047192322075854086, 0.0004758093144944662, 0.000478333115490006, 0.00048427643137911224, 0.0004905375149901494, 0.0004948868284376913, 0.0005045308595138961, 0.0005100296549063009, 0.0005165953639959654, 0.0005221084463763175, 0.0005323410362224511, 0.000536708780533472, 0.0005376071949682335, 0.000546760754505963, 0.0005477710292694248, 0.0005530307780649399, 0.0005446703027564531, 0.000544312587243867, 0.0005407379604892343, 0.0005274934186618185, 0.0005239256081385232, 0.000506463736699035, 0.0004888637866393028, 0.0004742629027644794, 0.00045305709380397916, 0.00042518184655781057, 0.0004063474386075156, 0.00037465739651649767, 0.0003725827279783505, 0.0003889769105957498]
6 [0.18498616787957778, 0.17470200715086381, 0.1150770588781203, 0.11684887085692545, 0.07391562355019948, 0.06465157560812779, 0.04848815078453818, 0.032614104604100747, 0.06269749292131052, -3.8312268746639284e-05, 0.021859735563497337, 0.03216809538227637, -2.484817425652716e-05, 0.008916933056981234, 0.008455021659822693, 0.018653562151617887, 2.7026346345683787e-05, -7.65043120820655e-06, 0.0071414800088293595, -2.7201351362306534e-06, 2.438481084455353e-05, 0.002695568179766001, 0.0001144296567604676, 0.00017735675993670372, 0.0002707376935253119, 0.0002940259041216065, 0.0003721592203371267, 0.0003811352337976957, 0.00041106875892679164, 0.00043739416748386106, 0.00043406112438429064, 0.00044433658448946376, 0.00044327769199912196, 0.0004436800168714204, 0.0004360133391577587, 0.0004410908213471165, 0.0004272074222179779, 0.0004299925317656539, 0.00042118821366699314, 0.00042112458157346207, 0.00041518845273989536, 0.00041387530361029475, 0.0004088689859418227, 0.0004085267542845972, 0.00040616917253114763, 0.00040165903543583706, 0.0004037707906892195, 0.0004007656608737013, 0.0003991612121462286, 0.00039992560405148123, 0.0003977424379725263, 0.00039742614392844163, 0.00039811585562866736, 0.0003953020039784229, 0.0003968537481067204, 0.0003955455093073907, 0.0003949901330431198, 0.0003947799991027036, 0.00039497585754157594, 0.0003932208606836783, 0.00039506622218869714, 0.00039433222131380534, 0.00039331515950742575, 0.0003961874489976812, 0.00039592238915713083, 0.000396485633813288, 0.00040176714735767926, 0.00040090693095442436, 0.00040708995509593465, 0.00041282762223154856, 0.00041526847999030363, 0.0004250840053779102, 0.0004335539888770126, 0.0004374046377933414, 0.00045262170032618214, 0.00045500715122933364, 0.000462737600619297, 0.0004740139246864265, 0.0004665289525929215, 0.00047181335853898167, 0.00046277660852203097, 0.00044880835180952084, 0.0004363198364105919, 0.0004081794178735099, 0.000376714841289321, 0.00035915529208627324]
4 [0.1758434154909469, 0.16240759446420797, 0.13379908054231718, 0.10821398537206783, 0.07810802712325655, 0.08212696303775029, 0.03951025347858954, 0.03817988621826128, 0.033800443238977046, 0.023406236319904492, 0.03144965873308817, 0.013894533198219483, 0.006647333230262663, 0.007825303314029988, 0.008237312490123381, 0.006434021795382633, 0.015095371857784864, 0.0033057167210071986, 0.0008918894908178927, 2.8803052115218372e-05, 9.497385680965609e-05, 0.00014447542287133585, 0.00019166571512675525, 0.00023397746068211427, 0.0002768477484869486, 0.00031906936168950593, 0.0003552858685774876, 0.0003885851788947939, 0.000419126573858443, 0.00044127874120007357, 0.00046074146087828223, 0.00047631353730342215, 0.0004924734703986796, 0.0005020334207105283, 0.0005068630171213369, 0.0005122515092874122, 0.0005160225028461305, 0.0005161227911095118, 0.0005154186179512357, 0.0005143025274256454, 0.0005097587100466653, 0.0005057673670724852, 0.0005018431838606326, 0.0004970964083057575, 0.0004923721301410706, 0.0004874672781785653, 0.0004830737351707624, 0.00047800187202913215, 0.00047451153755925107, 0.00047239980461270776, 0.00046971303664213, 0.000466190771787012, 0.0004669490927893605, 0.0004666796083466187, 0.0004660296376713579, 0.0004685078548382124, 0.00047287130955610447, 0.0004739385167147131, 0.00047840453845061703, 0.0004846858771412443, 0.00048775819429966704, 0.0004954719254206389, 0.0005051867944243037, 0.0005081771367970091, 0.0005147731930510539, 0.0005248243717681492, 0.0005280900613748867, 0.0005353627238254305, 0.000542650188895525, 0.0005449250073360258, 0.0005425476741778496, 0.0005499901209840435, 0.0005478804007138927, 0.0005438241643594135, 0.00053708442012802, 0.0005313987340315057, 0.0005259885032883234, 0.0005034452506852919, 0.0004936764902795879, 0.00047863520248706047, 0.0004580283060610231, 0.00043347951132104954, 0.00040987205173548946, 0.00038535682894112706, 0.00038427658557537163, 0.0004022020272525064]
5 [0.17992819179057096, 0.16521763952218332, 0.13750842528036053, 0.09893520514070904, 0.07502405230226711, 0.06827612340451611, 0.049066940361983793, 0.054139696886982475, 0.03584562594215479, 0.02373398957764384, 0.01769938716644294, -8.550844567461445e-05, 0.010825115437248756, 0.010308547366690325, 0.015896644207341496, 0.021816388712896623, 0.00046683179569450645, 0.0030070967199033005, 0.001686696197415325, 1.9775524996037e-05, 8.919912566019972e-05, 0.00013966551430274495, 0.00018626402103246963, 0.00023340106321384412, 0.00027760397474803984, 0.00031860810179733636, 0.00035610349982891575, 0.00038906857487492057, 0.00041850321105158406, 0.00044390243871507195, 0.0004634690677334589, 0.0004793972349621211, 0.0004912098979203659, 0.0005020177024422376, 0.0005086053212418762, 0.0005133776713907481, 0.0005154314827131483, 0.0005157060543034963, 0.0005138411990142478, 0.0005115969793873969, 0.0005087208125027361, 0.0005035667876247206, 0.0004990085910604655, 0.0004954051780001949, 0.0004895463177859182, 0.00048420337381545884, 0.00048062093515529024, 0.00047580552104040634, 0.00047139579412191254, 0.00046974068962075206, 0.00046735067616518515, 0.000463629717134385, 0.0004642594611146157, 0.0004647391622279036, 0.0004634103673016133, 0.0004661493155810058, 0.00047056193857999203, 0.0004715582423782194, 0.00047597129061712943, 0.0004824061784188887, 0.00048543155261881164, 0.0004930606066161078, 0.0005027558278467084, 0.0005057935026914504, 0.0005122932424063689, 0.0005223544670001765, 0.0005256279503297358, 0.0005328820973545547, 0.0005401478358288744, 0.000542457685521826, 0.0005401804884232291, 0.0005476149105025533, 0.0005455710388143036, 0.0005415867044872953, 0.0005349575623690925, 0.0005293451757637721, 0.0005240262049548551, 0.0005016804614659578, 0.000492001372996473, 0.0004770571707225651, 0.0004566209556951585, 0.0004322613937925432, 0.00040881107691341913, 0.0003843481761713136, 0.0003831002016082684, 0.0004008613345130986]

===========================================================================================
python3 delay_tomography.py 3 4 uniform 0.5 100000  failed with stdout:
b'i_max is 24\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 geometric 0.5 100000  failed with stdout:
b'i_max is 84\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 uniform 0.5 100000  failed with stdout:
b'i_max is 32\n0\n0.00056\n0.00058\n0.00114\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 4 geometric 0.5 500000  succeeded with stdout:
i_max is 71
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.20554805817434046, 0.15547563505994672, 0.1268808263804784, 0.0984262475825341, 0.08473944531962832, 0.06649811707540453, 0.0456970397249486, 0.04351488638497095, 0.03390182678077823, 0.025564570202954287, 0.020674216270984206, 0.016247128612160364, 0.012292462705848712, 0.010444430880085157, 0.009051846411416188, 0.005870196693748215, 0.004714398199831839, 0.003716060546787759, 0.003384198086346461, 0.0020103649050748915, 0.0020333607983123105, 0.001114248780472721, 0.0007563361719020694, 0.0005940437776630563, 0.000534575011495292, 0.0005328542369211799, 0.0004888686508403244, 0.0004963514984628508, 0.00046583906582346225, 0.0004563816261807332, 0.00043004843582397276, 0.00047392323439535643, 0.0004231418664267143, 0.00042803339535991015, 0.00041848223316269013, 0.0004426786207559306, 0.0004170679884472878, 0.0004175033101217715, 0.00042134313732185763, 0.0004234204917357516, 0.0004173951143868447, 0.0004217003073144101, 0.0004135500574623789, 0.00041583384706732015, 0.0004184355271432323, 0.00041383280638127034, 0.00041586524245393097, 0.0004129603779858042, 0.00041846598368883874, 0.0004152706064793155, 0.00041358615111819567, 0.00041436538666228453, 0.0004164326605058955, 0.00041452982621399605, 0.00041673511121516273, 0.00041400038105701215, 0.00041599297442352143, 0.00041371617395081887, 0.00041487529348547674, 0.000414801698565451, 0.0004148154105077356, 0.00041482475792855135, 0.00041481076152985485, 0.0004148267778854927, 0.00041481498040249443, 0.00041481620191731407, 0.0004148186560428194, 0.0004148177474193872, 0.0004148182508954368, 0.0004148186919560866, 0.0004148172252634432, 0.00041481880692448384]
1 [0.19205825858028375, 0.1623601243016709, 0.1284169878570987, 0.10245079105265581, 0.08095760987863718, 0.06437690861317784, 0.052570083875642985, 0.04303303343440972, 0.03048205291458608, 0.026859597107917205, 0.020081187545558675, 0.017202727353943792, 0.011988248887471931, 0.0122810565476387, 0.008974326229016534, 0.005119885477826512, 0.006231603921156676, 0.003325302712931029, 0.0014163116854835445, 0.0039064586985958615, 0.0009011318329589504, 0.001159428614054044, 0.00011564944542570271, 0.00022254693974246804, 0.0003092953383367229, 0.0003755282100293933, 0.00042986868423208324, 0.0004669658344217375, 0.0004884542170786048, 0.0005053627278005342, 0.0005146820380538676, 0.0005176890555898955, 0.0005178957530567207, 0.0005152105452648676, 0.0005107121521943493, 0.0005060606487815587, 0.0005016183320954682, 0.0004962498802311525, 0.0004912584223440335, 0.00048665436141246245, 0.000482793313275264, 0.00047925610942798204, 0.0004762606749155068, 0.0004735734430852376, 0.0004712961352302313, 0.00046944656594078457, 0.0004678810418725185, 0.00046690160214507066, 0.00046618719649879576, 0.00046620034007543624, 0.00046671144021054344, 0.00046776547267789897, 0.0004697128545954953, 0.0004727296938172364, 0.00047657961395508206, 0.0004816180606047369, 0.00048795979356136424, 0.0004950504593774856, 0.000502835147059814, 0.0005114488600961981, 0.00051982655028379, 0.0005274650754506795, 0.0005339850410258723, 0.0005375403625227875, 0.0005372724160704463, 0.0005345410789550783, 0.0005252894796112966, 0.0005095945010260629, 0.00048807046968850717, 0.00045866449990794036, 0.0004235940425779543, 0.00039552564547085605]
2 [0.19022345481974606, 0.16624434964722962, 0.12617141797454715, 0.10164274426752493, 0.07998753603565077, 0.06505867194547554, 0.05683928078359545, 0.039720239193238055, 0.03291685149487342, 0.02447597203211109, 0.020829405993871043, 0.016389833376238103, 0.014431803260732665, 0.008930892193824879, 0.009904345960501373, 0.005418857807250722, 0.004426956344783919, 0.003899571952997409, 0.004493059190207086, 0.0022906498088504025, 0.0001816230776505698, 0.0016920080227101832, 0.00013035932998174026, 0.0002176235714969414, 0.00030383564563944004, 0.0003715201804502708, 0.0004250197423784097, 0.00046474375673519295, 0.0004882834529002097, 0.0005038137873922145, 0.0005140403409715454, 0.0005174682105774639, 0.0005172622748537549, 0.0005145146754321143, 0.0005104549404732523, 0.0005052441812272486, 0.0005007751376902654, 0.0004957971767270014, 0.0004907923891425542, 0.0004861739315940265, 0.000482463267223852, 0.0004788626130207755, 0.00047594282340006366, 0.0004734701812146569, 0.0004711213754323647, 0.00046928791509616587, 0.0004678188040092815, 0.00046680660214256487, 0.00046616650129786445, 0.0004660968732182618, 0.00046661418783617295, 0.0004677027441628999, 0.0004696031586782329, 0.00047254299303921233, 0.0004764544337362969, 0.00048146378390117385, 0.00048775163846798695, 0.0004948188587441939, 0.0005026042752980606, 0.0005111911407417039, 0.0005195654504005979, 0.000527190791283568, 0.0005337102168158716, 0.0005372647050955908, 0.0005370061572407554, 0.0005343068485210466, 0.0005250216766874192, 0.0005093199727056882, 0.00048779291016844053, 0.0004583057465035776, 0.00042318743031858876, 0.0003953494309392615]

===========================================================================================
python3 delay_tomography.py 2 4 uniform 0.5 500000  succeeded with stdout:
i_max is 16
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.11210245093054784, 0.11006864189033698, 0.10919038814287028, 0.10942128194669719, 0.11068224868509041, 0.11083510801411454, 0.11339718502036046, 0.10768349344769045, 0.10670375184373589, 0.0006130526017621115, 0.001064430739728651, 0.0026640999234906785, 0.0007755799858963155, 0.0011292006051484935, 0.0012108375404836086, 0.0008681522844817962, 0.0011248155343456905]
1 [0.10863754756103944, 0.11127653271041975, 0.10930340900320833, 0.113302732873801, 0.11316073849244818, 0.10728670173878382, 0.10917997145766781, 0.11451828829925914, 0.10796817055577167, 0.0007352975510535337, 0.0044205765303910035, -7.130600677432578e-05, 4.4733175809868474e-06, 3.67582308737654e-05, 4.445404124462904e-05, 6.107317964528526e-05, 5.1406188417264235e-05]
2 [0.1059097726785822, 0.10831706627500992, 0.11443363001433775, 0.11347111431131691, 0.10821689092900098, 0.1135162312185864, 0.1104928472600308, 0.11381182998761173, 0.1069457620286766, 0.004106789293688065, 2.934030368945211e-22, 1.8948327657976506e-22, 1.4639032803615298e-22, 7.281018345890174e-23, 1.5379157459042724e-23, 0.000778066003158714, -9.611245132295292e-23]

===========================================================================================
python3 delay_tomography.py 3 4 geometric 0.5 500000  succeeded with stdout:
i_max is 92
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.19805952709246, 0.15679527903668505, 0.1310870530210019, 0.10009992514570365, 0.07837126294064314, 0.07054861133128973, 0.04688132325332922, 0.04530426345313221, 0.030408744416612038, 0.02401257323179491, 0.02410094682791465, 0.013593058881926096, 0.017633873841103008, 0.006533913699692767, 0.005295372418859822, 0.009851532540069482, 0.00324447217249489, 0.004546142537083953, 0.002218665101395467, 0.002194949855498429, 0.0009392685420324189, 0.0032120155912775446, 0.00019128571487856625, 0.0005657022679846097, 0.0008040682935098369, 0.00038465711182326826, 0.0004537995060394221, 0.0003410067440893302, 0.00039503393996795637, 0.00044838268193878256, 0.00033518897059531174, 0.0003324968444319312, 0.0004593858794802121, 0.00022773256477906647, 0.0004460724457617668, 0.00028450284901170903, 0.00036722622333553064, 0.0003520450960139001, 0.0003309029485535905, 0.00032045114376622226, 0.0003754604265368897, 0.0003107154505379722, 0.0003656853353468008, 0.00031152028927452195, 0.0003320208738222505, 0.0003471790122538778, 0.0003323708627866838, 0.00034194086913654084, 0.00033125136052080393, 0.0003329233906950032, 0.00033378811125067085, 0.00033675562696703254, 0.00033067004912976816, 0.00033961678623354067, 0.0003387258370713667, 0.0003299841477664407, 0.00033493364844199393, 0.00033319882989630526, 0.00033602354566374094, 0.00033460630446538247, 0.0003362731334049429, 0.0003343066901937062, 0.0003330170620529127, 0.00033527280644961223, 0.00033476892217709634, 0.00033464355431968686, 0.000334599010653954, 0.0003346391888240202, 0.00033468151693804443, 0.00033461999792611943, 0.00033461907372975036, 0.0003346745102350638, 0.0003346455013926328, 0.00033462828107696553, 0.0003346511148277105, 0.0003346386254986614, 0.0003346431457979469, 0.00033465185387448256, 0.0003346329829022097, 0.0003346501724831782, 0.0003346400495332925, 0.00033464385338266057, 0.0003346447039263722, 0.00033464207830621385, 0.00033464331159181564, 0.0003346440343408143, 0.0003346429241262909, 0.00033464357044583887, 0.00033464320277185603, 0.0003346432295091128, 0.00033464364890490624, 0.000334643163017443, 0.000334643309229413]
3 [0.20372270288188116, 0.16131422016255859, 0.11954832290880554, 0.10361388431089472, 0.07719261575803871, 0.07099428949447045, 0.036343915216151795, 0.06540431737067456, 0.010104807961766538, 0.03327422803629382, 0.019955885387150412, 0.019669339983177075, 0.014511022834365237, 0.008022250245369688, 0.0023451532578621977, 0.012820566772015644, 0.0007431742903866603, 0.00657335936029737, 0.0002918902780285038, -4.21259551738019e-07, 0.005072556728713989, 8.634067725926015e-05, 0.0001646739970412142, 0.0002330761098149246, 0.00028415235370085883, 0.00032894619520147986, 0.0003665165735050956, 0.00039223435069172255, 0.0004113987864069417, 0.0004243014591787061, 0.00043113132731293274, 0.00043605963886524714, 0.0004351926568874909, 0.00043638628394012936, 0.0004311752996747114, 0.00042495748294541305, 0.0004230485427716382, 0.0004167822687813604, 0.00041312378844837744, 0.00040812012966559905, 0.00040483741713550134, 0.0004009759636574121, 0.00039924965322161413, 0.00039557300735115503, 0.00039344970892945006, 0.0003919512970705332, 0.00039054866169442614, 0.00038922898025201523, 0.00038813691708682616, 0.0003874088816814315, 0.00038701327503419384, 0.00038633782078732564, 0.0003858190057094047, 0.0003860148554883715, 0.00038517392900109897, 0.0003854478163947368, 0.0003850188457133078, 0.0003850698644383686, 0.00038472676837301956, 0.00038495663975942636, 0.00038439142056115777, 0.0003845802893643955, 0.00038438728486233286, 0.0003841269889794704, 0.00038401407132132104, 0.0003838480481070455, 0.00038373422892157624, 0.0003838172991676754, 0.00038378714836287674, 0.0003838015247862695, 0.00038518666597126764, 0.00038532485837371373, 0.00038726348324171617, 0.00038934112950997693, 0.0003920686426701778, 0.00039634679523977144, 0.0004014246900650343, 0.0004067108120413868, 0.0004144675283101738, 0.0004227866654060926, 0.00043083251743747234, 0.0004400767006261276, 0.0004473412475526441, 0.0004546328423428881, 0.00045987836071145923, 0.0004611490430425992, 0.00046052031836686896, 0.0004530115058375733, 0.00044205276265237394, 0.0004254453312128117, 0.00040184461394011234, 0.00037375734018174243, 0.0003536269705843709]
1 [0.1799733198578049, 0.16341492713726607, 0.13627839824031523, 0.10595534017652722, 0.07383925099686878, 0.05881306084534902, 0.0538416051380734, 0.04740266329876092, 0.03401319288320041, 0.02980289653381677, 0.019682895017011863, 0.013923052259065089, 0.013755360418116713, 0.009513406465506503, 0.005217525074176561, 0.009102402421512414, 0.004553510431073852, 0.005980473940111643, 0.002860808642004523, -6.552412478373066e-06, 6.975576429075792e-05, 0.00012351141248435934, 0.0001670033050471582, 0.00020859137532066877, 0.0002478168744038568, 0.00028785904701947025, 0.00032429111855636496, 0.000356971209510968, 0.00038568136508219583, 0.00041076490975943937, 0.00043239979658197885, 0.00044916711933263095, 0.0004623003446348979, 0.00047267125292666787, 0.00048085788968815963, 0.0004862061074464852, 0.0004895130322025782, 0.0004897038502186882, 0.0004896824084220559, 0.0004884868592538822, 0.0004856174354102482, 0.00048212673164804037, 0.000478305465375579, 0.000474427118966736, 0.00046978088244823335, 0.00046479561632516413, 0.0004604202106069678, 0.00045588917891714164, 0.00045185682507636036, 0.00044771033866975634, 0.0004441878319986477, 0.0004408639175576738, 0.00043768027322895755, 0.0004350669843939834, 0.0004333553289912917, 0.0004316544787958549, 0.0004307596436190189, 0.0004299350624097663, 0.00043021947970140736, 0.00043120260328932984, 0.00043246085048582116, 0.00043420394637098877, 0.0004375094476780955, 0.0004402915753458185, 0.00044480836459981886, 0.00045094099887380186, 0.0004544744941104179, 0.00046102332650739303, 0.00046683883160925527, 0.00047579890712135014, 0.00048145837251628316, 0.0004876081088716319, 0.00049426885722945, 0.0005037998907575393, 0.0005071154219796407, 0.0005120002007263597, 0.0005171967776241734, 0.0005179633711786451, 0.0005232207166877985, 0.0005204792819086272, 0.0005154663952039927, 0.0005129267696039343, 0.0005052407921110814, 0.0004969981610189273, 0.00048722015269555207, 0.0004654036333810261, 0.0004592296115575493, 0.0004335466689406094, 0.0004160395951208758, 0.00039063864889167, 0.0003719301536023898, 0.00037170472803238296, 0.00040506554467333196]
2 [0.1773672623454803, 0.16670842258521973, 0.13012802713232824, 0.10526335559146711, 0.084348367619022, 0.06896560641667528, 0.04670137994141929, 0.03618459375936138, 0.034241999755484115, 0.024649241533914526, 0.025655009070224742, 0.013672378785756856, 0.014881349911610404, 0.010883021309985676, 0.006779318416842115, 0.009271993412645636, 0.006129912950417777, 0.0018982536913037323, 0.002546954782977055, 0.001741345380997751, 2.116155747543273e-05, 8.071976039753889e-05, 0.00013228149592943244, 0.00017954859928923035, 0.00022445920846613735, 0.00026822367443680463, 0.0003096793386756624, 0.0003469047167056825, 0.00037805228477835414, 0.00040585286515110777, 0.0004303968378224956, 0.00045018012909966846, 0.0004655837456564208, 0.00047716093096894583, 0.0004853050764480033, 0.0004912788799655058, 0.0004938587419987042, 0.0004953852656185249, 0.0004943772059841087, 0.0004924650052101894, 0.0004898984968325362, 0.0004858770681445503, 0.00048188596751222885, 0.0004767716369605993, 0.0004721624480269912, 0.0004672746281468974, 0.00046272538381317795, 0.0004578000968388857, 0.0004535522990851486, 0.00044948997999349615, 0.00044587790686800047, 0.00044268476758369316, 0.00043947210656328125, 0.0004368448880471307, 0.0004350607375736245, 0.00043343392756854156, 0.0004325998027899087, 0.0004317675230273687, 0.00043208399857809184, 0.0004330809340867925, 0.00043446288180093255, 0.00043616447129742145, 0.00043948669837299615, 0.000442249258121043, 0.0004468011229123789, 0.00045296458567647876, 0.00045647820947308245, 0.0004630966008433699, 0.0004689268296155664, 0.0004778924398886861, 0.00048355855357595936, 0.0004897678119907994, 0.0004964473165443356, 0.0005059651529467233, 0.0005093552192622389, 0.0005142596191180676, 0.0005194855110323634, 0.0005202549926735156, 0.0005255286770098936, 0.0005227997901550494, 0.000517761358457001, 0.0005151509472530342, 0.0005073821056326981, 0.0004990183698038145, 0.0004890897490985606, 0.0004670984909804797, 0.00046063156674071347, 0.00043469577484262113, 0.00041683236051674147, 0.0003910304319898006, 0.00037183871362644904, 0.0003710790163856755, 0.0004038940419902931]
6 [0.20254644104909997, 0.1593137964188479, 0.11494624486166245, 0.11464759557633619, 0.08574240637741752, 0.04113857171520251, 0.07254769939153, 0.03522273916261523, 0.021902380932826326, 0.03365936765548816, 0.026181869774151593, 0.005954081617005981, 0.018508235167091994, 0.011361827773239, -1.6272503668227228e-05, 0.015068398800285362, 0.004552113095963891, 1.0732719554155266e-05, 0.006101140452883205, 1.9217714706785744e-05, 0.0014707477003276063, 0.00010718897941881755, 0.0001885298827099196, 0.0002633148918315824, 0.00032371116785565826, 0.00036905273627766446, 0.00040530686729424806, 0.00042444469760332, 0.00044123141369761446, 0.00044876713261966875, 0.00044856233959376175, 0.0004512821995538732, 0.0004467720771782177, 0.00044529180451038437, 0.00043772785696771484, 0.00043353813103274734, 0.0004263469526644207, 0.0004227656751439349, 0.0004180530014811654, 0.0004129223164886293, 0.00040920001049094316, 0.00040638686494767653, 0.00040349023250144193, 0.0004008221650270942, 0.00039810470221725606, 0.00039681182872135896, 0.00039549436969610796, 0.00039377886258570275, 0.0003934773660096288, 0.00039206675633302404, 0.0003917746771600009, 0.00039143291677269903, 0.00039046230003746444, 0.00039060469094191026, 0.0003901301919991403, 0.0003897330991044342, 0.00038970029369908094, 0.0003895422491586856, 0.0003889897345412286, 0.00038939542043093926, 0.0003887320512308754, 0.00038880886563735426, 0.0003887666863944661, 0.0003883391898670632, 0.0003882594763565715, 0.0003881543098665951, 0.0003879024090732738, 0.0003881259287216429, 0.0003880906560744166, 0.0003879725947926963, 0.00038956133604292083, 0.0003895538407484163, 0.0003915391119608215, 0.0003936811843348901, 0.0003963624947680432, 0.0004006328022220992, 0.00040578677721261343, 0.00041097976649095253, 0.00041884715397255185, 0.0004271574749242866, 0.0004352119994958696, 0.00044460753265592324, 0.0004518992239777584, 0.00045938146532214743, 0.00046483951220819327, 0.0004663018960789183, 0.00046606433676683477, 0.0004588281029198135, 0.00044824537544775053, 0.0004319643122592487, 0.00040853680999215086, 0.00038061384823340606, 0.00036102119209357255]
4 [0.17676419591087575, 0.1685456980029098, 0.13606859028551044, 0.10055129416737006, 0.08128865756147849, 0.06642326792642878, 0.04563108322230952, 0.04408759429412294, 0.03575664808253354, 0.02294273148230912, 0.02338341881785789, 0.013691921669167134, 0.014647853205155437, 0.008085055465692128, 0.007325955904667117, 0.01029525787839601, 0.007190746184432878, 0.0023158756453667633, 0.0025441203485201637, 0.0002386410754212111, 4.757027526281266e-05, 0.00010407641411265467, 0.0001549113924158981, 0.000202548958066071, 0.00024806126815729, 0.00029095777356056196, 0.00033049954055386116, 0.00036458227584175364, 0.00039462131516696555, 0.00041887368347031853, 0.00043959135905620873, 0.0004559715724314482, 0.0004695568056390242, 0.0004796516207677806, 0.00048625865270747264, 0.0004911812128862558, 0.0004936119581018493, 0.0004940065610758288, 0.0004936880570732976, 0.0004916204732938214, 0.0004884702711021071, 0.0004851943675792809, 0.00048091555496924336, 0.0004763741600356645, 0.0004717350045302138, 0.00046689347663506385, 0.0004621434422920028, 0.0004576993086314277, 0.00045349401603933894, 0.00044944288463795223, 0.0004458406574754301, 0.00044246256176166244, 0.0004395552063580689, 0.00043717948579675503, 0.00043507157267968507, 0.00043343350433959634, 0.00043259438444465505, 0.0004323820970264274, 0.0004316873979036962, 0.0004335188305085199, 0.00043373950451201906, 0.00043706485451480774, 0.0004389052902051089, 0.0004425867335239837, 0.0004473958231405399, 0.00045151652315515814, 0.0004575573906007946, 0.00046337293012782213, 0.000469240569514003, 0.00047707407364004693, 0.00048388798408647703, 0.0004897431375440182, 0.0004975141767155243, 0.0005046653937841322, 0.0005090950922609185, 0.0005159452155421484, 0.0005175590376172166, 0.0005202035213088395, 0.0005256731477039282, 0.0005209991471256449, 0.0005190070500458218, 0.0005163203883235543, 0.0005055512779781914, 0.0004993588963910144, 0.0004887781666537121, 0.00047170232026462976, 0.0004556957741735489, 0.0004421584495555505, 0.00041462377791741926, 0.0003913539045691679, 0.00037518468925670843, 0.0003732643962977756, 0.0004058141182130761]
5 [0.1778917838240992, 0.16604023159046272, 0.13578694389728413, 0.10222444721463667, 0.07932213389655984, 0.06757665036479643, 0.05181040489753034, 0.04156771718718902, 0.03163130906868009, 0.024522512854804748, 0.021247699166693737, 0.01492684922184382, 0.014846659400136845, 0.008140870807961924, 0.007535802903511511, 0.007366237758160597, 0.004835843091181114, 0.008570387171754477, 0.0021522617647778425, -5.74025298163857e-06, 6.937322356136646e-05, 0.0001227703624862601, 0.00016773460353557287, 0.000206689680285877, 0.000247185556819579, 0.0002868979141428911, 0.00032126595390169054, 0.00035440393493211815, 0.0003840010777982223, 0.0004077221004901774, 0.0004285043200412435, 0.0004456828281028612, 0.00045822640135903704, 0.00046940267079982655, 0.00047790162105806563, 0.00048310961181689745, 0.00048589457305897067, 0.00048769548714840035, 0.000487398472318502, 0.00048632299882384706, 0.00048417020886052113, 0.0004807295399669713, 0.00047725814606360207, 0.00047313500140020056, 0.00046866102005119453, 0.00046427186422943784, 0.0004597967121452644, 0.0004554997626894862, 0.00045119633465892677, 0.00044743299240328563, 0.00044400723598350087, 0.0004404857287419664, 0.00043741949175834664, 0.00043522280754412134, 0.00043295973141723105, 0.00043147571000212595, 0.0004305844874187356, 0.00043033156104543277, 0.00042954133822907097, 0.0004314313138938528, 0.00043157981431425017, 0.00043489326565983246, 0.0004367721719808459, 0.0004404396888104329, 0.00044523016579162047, 0.00044935022132107074, 0.0004553478464531954, 0.0004611910698229325, 0.0004670164452821186, 0.0004748307077138529, 0.00048162602302283415, 0.00048745054827793613, 0.0004951880180045144, 0.0005023111060561717, 0.0005066804891155074, 0.0005134752845870634, 0.0005150024475030528, 0.0005175883046996382, 0.0005230013139783405, 0.0005181966131490615, 0.0005161241238324519, 0.0005133590005766204, 0.0005024775343773965, 0.0004962230298275355, 0.00048558161985045586, 0.0004684314958349623, 0.00045241560402998647, 0.0004389332570920249, 0.00041142633544612644, 0.00038830900248667264, 0.00037241858002379864, 0.0003708872182643538, 0.00040387127052467583]

===========================================================================================
python3 delay_tomography.py 3 4 uniform 0.5 500000  failed with stdout:
b'i_max is 24\n1.666634902298797\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 4 4 geometric 0.5 500000  failed with stdout:
b'i_max is 101\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 uniform 0.5 500000  failed with stdout:
b'i_max is 32\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 4 geometric 0.5 1000000  succeeded with stdout:
i_max is 71
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.20231315996976962, 0.15624273758523827, 0.12754555638298404, 0.10044295622861027, 0.08166055068744332, 0.06689518917603376, 0.04910079419954147, 0.04137929205139633, 0.03447657201545505, 0.026155051114694582, 0.020306783915922673, 0.016310536044966413, 0.012664248255191739, 0.010612379028140242, 0.00874319450078814, 0.006101446637924855, 0.005177763376640046, 0.0032578614325749727, 0.0034438370717070066, 0.0018134502375035228, 0.0020778218461191215, 0.0010399348199224912, 0.0008920979420093666, 0.0005668793130436489, 0.0005519928780938141, 0.0005227212349031036, 0.0005024173322612364, 0.0004776963546645625, 0.00046564308189304683, 0.0004571385273617999, 0.00043424040309007907, 0.0004490389686173565, 0.00043375385625643863, 0.0004320206048731563, 0.00041932509915642386, 0.0004361711496915634, 0.0004186169991069226, 0.00042219249780255466, 0.00041736442165377324, 0.0004176925689555583, 0.00041998122699191375, 0.00041878237914242425, 0.00041385882385006794, 0.00041361942088408724, 0.00041597508590271725, 0.00041536725750945764, 0.00041515148363543454, 0.00041203915538688354, 0.000417215957996914, 0.00041287824070086537, 0.00041378890393207443, 0.00041339331292243234, 0.00041552993185816153, 0.0004140937705644641, 0.00041436234648559953, 0.00041395478542321276, 0.0004138293195741551, 0.000414088746466896, 0.0004132615061284882, 0.000414210259563512, 0.0004135203150808245, 0.00041380725806484714, 0.00041418279522622496, 0.00041392542192385153, 0.00041354420044305995, 0.0004137949796117604, 0.00041378735193668936, 0.00041379535993238235, 0.00041379076787014115, 0.00041379009928634865, 0.0004141921448970672, 0.00041352796339023327]
1 [0.1947030247809317, 0.16274094211085882, 0.12562941853615525, 0.10166804812067001, 0.08229471097014807, 0.06325018257530277, 0.05231962833473345, 0.04317705246909524, 0.031756269290209346, 0.02473920550893132, 0.022555637040442018, 0.01726980432057443, 0.01101284855984417, 0.012009079401718914, 0.009004683723407066, 0.005195331887570263, 0.005505259828531039, 0.0037875728367513808, 0.002330604452566971, 0.002260424231191552, 0.0026963868496456336, 0.00010244096952299763, 0.00019663254471580715, 0.00027571254034589423, 0.00034027219998999014, 0.0003932318697863829, 0.00043564805835850717, 0.0004651274462413044, 0.00048758522308194096, 0.0005027413301216652, 0.0005117012562802391, 0.0005151122527936604, 0.0005155162244883645, 0.0005132283052660578, 0.000509732443395926, 0.0005054688875703727, 0.0005004307972054718, 0.0004954632792389283, 0.0004903833651390508, 0.0004861022779049631, 0.00048174660427701717, 0.0004784950490806348, 0.00047515903409145666, 0.00047254576596653287, 0.00047023605686711764, 0.0004683468055320611, 0.00046686713649503954, 0.00046582713621150517, 0.00046520159164517767, 0.0004651045407614018, 0.00046565884129537975, 0.0004667003385165684, 0.0004688585960610058, 0.000471699907112251, 0.0004758469763243621, 0.00048087379007431894, 0.0004872743250598994, 0.0004943380865495156, 0.0005022810794432682, 0.0005107600180141353, 0.0005190947234406492, 0.0005268995170313491, 0.0005331361186426157, 0.0005364675275811562, 0.0005366431368899536, 0.0005332155204607627, 0.0005236626276912889, 0.0005085225522794723, 0.00048689884987885976, 0.0004579373097305572, 0.00042309448734361804, 0.0003967571491173074]
2 [0.19397097990266096, 0.1633724764311955, 0.12622426480125465, 0.10229928240318167, 0.0821095066632741, 0.062259740247487365, 0.05471307407154718, 0.04163259785176528, 0.03199607781851596, 0.025000988703201596, 0.021398876974749965, 0.016546283489163816, 0.013851025875339427, 0.008759047053264994, 0.010235780691346022, 0.005554719390439932, 0.004017648632074513, 0.003977965950319743, 0.003807751125954257, 0.0019230490079928642, 0.0015365681055888479, 0.0009675907143236171, 0.00010484662687513644, 0.00022277937884582083, 0.0003112586598779481, 0.00037800114088681354, 0.00042929609211915927, 0.0004673542203817551, 0.000489329134130664, 0.0005050712490413146, 0.0005149442604205127, 0.0005181894977190225, 0.0005177706275983839, 0.0005150486081698927, 0.0005109114245322681, 0.0005062984458479101, 0.0005017324756728332, 0.0004964242688727013, 0.00049186731213362, 0.0004868133623206833, 0.00048326149518118893, 0.0004792865838441166, 0.00047658762522042474, 0.0004737487094362743, 0.0004716182999617313, 0.00046960150431852064, 0.0004681873405716065, 0.00046708223900566764, 0.0004665296531351286, 0.00046633896014503873, 0.0004668756286335626, 0.0004679435396409142, 0.00046993421642884975, 0.0004727966225164105, 0.00047688201129896375, 0.0004819358992512673, 0.00048817216392231153, 0.0004953100008100934, 0.0005031819505005205, 0.0005116510606039139, 0.000519979542672063, 0.0005277725538311514, 0.0005340366616951512, 0.0005374226173184584, 0.0005376113992287547, 0.0005341902112457389, 0.0005246636077141743, 0.0005094283104797887, 0.0004876145632963262, 0.0004582478523348755, 0.00042277526607395363, 0.000395298640607714]

===========================================================================================
python3 delay_tomography.py 2 4 uniform 0.5 1000000  succeeded with stdout:
i_max is 16
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.11096746955697692, 0.11049801653602913, 0.10811516436572469, 0.10988520476002865, 0.1112473971834361, 0.1092506586065754, 0.11229603957223952, 0.10925876141078465, 0.10912420763952889, 0.0006738806871928924, 0.0012827606301331822, 0.0012381526604105637, 0.00122239474698727, 0.0011085818276984224, 0.0011016685416570505, 0.0010698290935729255, 0.0010732125804598504]
1 [0.11143590492102887, 0.10843985707001773, 0.11226924932926913, 0.11226754433619535, 0.11420456740829929, 0.10831014519599219, 0.10811161688330076, 0.1116931269926017, 0.11073064526094091, 0.00030576067568366367, 0.0022315819266704707, -4.567531943079179e-22, -3.7640689939346053e-22, -4.3387031650027225e-22, -4.287833148693571e-22, -3.914620780924368e-22, -4.995999636476149e-22]
2 [0.10858960047968058, 0.11003217906946236, 0.1122608046114677, 0.1127472947850958, 0.11099144123339472, 0.11086590147198325, 0.11227989644707619, 0.11033083755745492, 0.10791010931759912, 0.00369670329086292, 3.1829435790163124e-22, 2.156372574144279e-22, 1.624338145342471e-22, 6.808973297932029e-23, 6.531795616472169e-25, 0.00029523173592245396, -1.2255789654663898e-22]

===========================================================================================
python3 delay_tomography.py 3 4 geometric 0.5 1000000  succeeded with stdout:
i_max is 92
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.1975045702493467, 0.16347920798571441, 0.12451299810750373, 0.1021301651809951, 0.08025557025366313, 0.06800029400115713, 0.04703478141360436, 0.042288888786051006, 0.03499684966683325, 0.022738320212571477, 0.02103616504017304, 0.016676711682796275, 0.014600966098545247, 0.008935176534685951, 0.0055177991575659545, 0.009482480373326423, 0.0030076710979202457, 0.0036405625242184533, 0.0029145950724634665, 0.002449637210347783, 0.0005139059192485908, 0.0029135312181369777, 0.0002838364014190139, 0.0009434946377838565, 0.00042565459690698627, 0.0005301728295208795, 0.00036718321952463207, 0.00039945194929713064, 0.0003810075420065172, 0.0004175951413425817, 0.0003663468746812384, 0.000333199704247787, 0.0004394232638311316, 0.0002632406456918234, 0.00039481292249810864, 0.0003340947670339143, 0.0003632205390645684, 0.00033785347507127414, 0.0003424060877906018, 0.000328230771922728, 0.00036447594562567917, 0.00032052509797636313, 0.00035490844972439653, 0.00031877906012282576, 0.00034955261480412324, 0.0003273268410131072, 0.0003451795706584386, 0.0003401035995941853, 0.0003319604298738539, 0.00033886790534615787, 0.00033423491107098925, 0.0003373706374856988, 0.0003384877521420587, 0.0003368665569790288, 0.00033896177683335246, 0.0003336978344225726, 0.0003380559870792645, 0.00033517347264332533, 0.0003384583804113801, 0.0003344155614409764, 0.00033842139664514576, 0.00033724584036226715, 0.00033441071868958966, 0.00033945521054986217, 0.0003338911626780043, 0.00033754178579670875, 0.000336467745071181, 0.00033658090123023015, 0.0003365713532005904, 0.00033654627590400094, 0.00033653070494609415, 0.00033663066373037067, 0.00033649554608871973, 0.0003365869324323031, 0.0003365711827725171, 0.0003365385259631924, 0.0003365790807927972, 0.0003365494802416286, 0.0003365678500168041, 0.00033655444706113624, 0.00033656972268935974, 0.00033655090046754506, 0.00033656896917704497, 0.0003365551140757604, 0.00033656482546717804, 0.0003365588061588421, 0.000336561466083007, 0.0003365607560264451, 0.0003365610660077742, 0.00033656067909040247, 0.0003365608595447033, 0.0003365610928650762, 0.0003365605490109029]
3 [0.19780460814814776, 0.15783934851122586, 0.12782765829241927, 0.10029637936123119, 0.0816188872214042, 0.06636827849316812, 0.044374768379146876, 0.050098180642696125, 0.029522253485898323, 0.021226839410938496, 0.027302535078596642, 0.011851653764087134, 0.020836246347951285, 0.005940382685522886, 0.007867375809178715, 0.001301643127133185, 0.012321995369786246, 0.002101083936465066, -9.537918621375416e-07, 0.00014482324757402284, 0.004469514771059311, 8.929431579245476e-05, 0.0001731399193424579, 0.00024008125013330888, 0.00029662558783025714, 0.00034302343946204946, 0.00037963617779961643, 0.00040437692296515186, 0.00042386840876216874, 0.0004360618214921225, 0.00044267634362953355, 0.0004443169364289427, 0.00044437744399566616, 0.00044283726915303457, 0.00043756656751680505, 0.00043155689692525855, 0.00042855481178214285, 0.0004221361837167762, 0.0004174323955031337, 0.00041330391706969363, 0.0004091754519458958, 0.0004057082265430453, 0.0004034845044574304, 0.00040026716622813905, 0.0003980351966082948, 0.00039630053693208217, 0.00039521643558836593, 0.0003937900399261181, 0.00039265119424213805, 0.00039197626499255474, 0.0003915649142337711, 0.00039072058850285094, 0.0003904994766937063, 0.00039029397303424416, 0.00038972144272312334, 0.00038974259969069586, 0.00038943338346196315, 0.0003894189763305637, 0.0003891056893486601, 0.0003891543456707605, 0.00038882081891297824, 0.00038884106615997064, 0.0003886328368850311, 0.00038842821115631576, 0.0003883146264501996, 0.0003880577782688514, 0.00038814069511131744, 0.0003878976059840165, 0.0003881706216915503, 0.0003880902361489194, 0.000389329910202985, 0.0003895193400150213, 0.00039161854745050826, 0.00039337137507972954, 0.0003965451087915324, 0.0004001933269529948, 0.00040576966132994946, 0.00041105224387184825, 0.0004186140361842124, 0.0004266881377780089, 0.00043510213044982215, 0.0004437776151352489, 0.00045162693419753975, 0.00045930635910118226, 0.00046410182266694284, 0.00046584062855694377, 0.0004652531333454401, 0.00045829987333316383, 0.00044761439504565704, 0.0004300424302627527, 0.00040810549195390206, 0.000378429916975955, 0.0003585631289630257]
1 [0.1809124857921689, 0.1646644268962164, 0.13549279661936317, 0.10457476583389863, 0.07570602997250264, 0.06198650921735391, 0.051326753476386586, 0.04501218902956561, 0.03214623262224166, 0.02907071290682273, 0.022224902590679392, 0.011774501025004363, 0.015003266508433139, 0.009523380739683073, 0.006823763180131687, 0.008514774168268284, 0.004802496481119027, 0.00604138757810419, 0.002217057166304905, -2.4784395745168676e-07, 7.265940906706295e-05, 0.0001254643211426768, 0.00017006496518809486, 0.0002122101295712665, 0.00025188690588041484, 0.000291213977378532, 0.0003277812296109821, 0.0003604729288460152, 0.00038908223688341123, 0.0004137740854291568, 0.0004352635573119133, 0.0004521387006480173, 0.00046500958202875793, 0.0004750239466117114, 0.00048272625763186566, 0.0004881769734081652, 0.0004907319281848368, 0.0004911554864016321, 0.000490733209959475, 0.0004892426729574046, 0.00048649393488171263, 0.00048321081867819357, 0.0004790523357975599, 0.00047478021164696217, 0.0004701896392245553, 0.0004655849702587748, 0.00046115150173530774, 0.0004566168861659195, 0.00045239361862295174, 0.00044855391574390527, 0.0004448912370041428, 0.00044146234035777045, 0.00043855657692122986, 0.00043597904396048236, 0.0004339900199840641, 0.00043248555448358093, 0.0004316674909206891, 0.00043073145469060196, 0.0004312516420195068, 0.000431897542264266, 0.0004335577071330809, 0.00043549947327036284, 0.0004383540073869511, 0.00044126443574967134, 0.00044629540350810663, 0.0004510466635670294, 0.00045594599069936356, 0.000462376398636611, 0.0004688745229916749, 0.00047549227890356154, 0.0004826162159387201, 0.00048916949751123, 0.0004958363325898371, 0.0005037162927547847, 0.0005096241258235631, 0.0005128886847332103, 0.0005170213169695552, 0.0005214940609399194, 0.000522700599640635, 0.0005211332328941545, 0.0005166934646570777, 0.0005144950877607301, 0.0005058639081626284, 0.0004988157123758678, 0.00048406757578017416, 0.00047048032975105937, 0.00045787820900749794, 0.00043540104501698794, 0.0004154591967941416, 0.00039171684347374513, 0.00037229539702853497, 0.000372591779971363, 0.00040559026135499553]
2 [0.1801932410865167, 0.1656436922265201, 0.13196416339650274, 0.10515487807209237, 0.0832388471447701, 0.06527025589537441, 0.04790930906692324, 0.03839852994633966, 0.03168582532280691, 0.024772899801536703, 0.026385074519132665, 0.016638817703477814, 0.011385285138206901, 0.009662415916428895, 0.009500598749064611, 0.008704832836595865, 0.006267990753496449, 0.0025732977332597797, 0.0016689522849189454, 0.0007547082048949675, 4.1343622797591196e-05, 9.704895009927002e-05, 0.00014756259140280898, 0.00019560638948899512, 0.00024290338723642483, 0.00028718365519140915, 0.0003272347876573216, 0.0003631726469138604, 0.0003937308107934239, 0.0004197183738461294, 0.0004420450372212678, 0.00045972229629148394, 0.0004733467614664807, 0.0004834034755665042, 0.0004902280473646005, 0.0004941914037920997, 0.0004962719139785026, 0.0004966098138336688, 0.0004950376057676403, 0.0004925989590460799, 0.0004894699246250109, 0.00048549898987122736, 0.0004813201805224516, 0.000476535097656728, 0.0004716878639969463, 0.00046703165119366005, 0.00046245450179025404, 0.0004579044518230389, 0.00045351672625013983, 0.00044982404936416774, 0.0004461684180785561, 0.00044274014130211373, 0.0004398825463362718, 0.0004372774401289744, 0.00043529851311987426, 0.00043383049528808107, 0.0004330293679799243, 0.00043209310398318397, 0.0004326038385097824, 0.0004332490750828567, 0.0004349641246704146, 0.00043692011246481696, 0.000439743275457298, 0.00044262260620388444, 0.0004476531323187458, 0.00045241434868612115, 0.00045729548577756496, 0.00046374414684063604, 0.00047024203011515776, 0.0004768765930312862, 0.0004839926264666728, 0.0004905705511738868, 0.0004972624065557636, 0.0005051531317612496, 0.0005111260423941949, 0.0005144490742964754, 0.00051863016277659, 0.0005231429320556417, 0.0005244217744372617, 0.0005229271049887489, 0.0005185561959550368, 0.0005163817518839711, 0.0005077900230804912, 0.0005007480520913745, 0.00048601398150317613, 0.0004723766093354968, 0.00045967500741485003, 0.00043710245368842735, 0.0004169792865076331, 0.0003930005256514999, 0.0003732554097793917, 0.0003731108698259281, 0.00040565657702175325]
6 [0.19860185873195613, 0.15762366681773698, 0.12332767626173552, 0.10531860858476787, 0.08592830981355236, 0.05254069263162459, 0.06245739118933597, 0.03747461433340821, 0.02717053314031961, 0.03151351589160521, 0.019494265555697218, 0.0159075648678444, 0.014275649742957697, 0.008041726900313857, 0.006252780433256255, 0.012172010922565285, 0.005314255395744851, -4.764380468527459e-06, 0.006247267925017182, -1.3473065138506601e-05, 0.001251057179361354, 8.297866257530962e-05, 0.0001956253208404913, 0.0002691158981092595, 0.00033289384619530926, 0.0003759917371937569, 0.0004123812896376882, 0.00042618972766928496, 0.0004420059001263241, 0.00044973090374704353, 0.0004490308421891731, 0.00045002393500310844, 0.0004462950689140551, 0.00044467551686467666, 0.0004379815287990099, 0.00043148811913062886, 0.000428674094952206, 0.000421853812954937, 0.0004176927109616629, 0.00041263175622888545, 0.00041014517879319677, 0.0004047961692144368, 0.0004047412534882512, 0.00039953770928699865, 0.00039876003159888243, 0.0003962590719653344, 0.00039545367146035735, 0.00039368534086677985, 0.00039307926590213447, 0.0003917952424282485, 0.00039148404550935485, 0.0003909827971492033, 0.0003900568547572361, 0.00039050890469941057, 0.00038929471319827007, 0.00038955982430990944, 0.00038911861601926905, 0.00038909273366101655, 0.00038869041387898286, 0.0003888547205854355, 0.0003883410102166236, 0.00038846537596163373, 0.00038820023457248525, 0.00038799908606612334, 0.0003878737595355713, 0.0003876330460565524, 0.00038768007935213657, 0.0003874948335993041, 0.0003877662488257714, 0.0003876519753487394, 0.00038893227223398767, 0.00038909888773990784, 0.00039118591083907826, 0.00039298619616010455, 0.0003960868046968587, 0.00039979187358469583, 0.0004053069633223125, 0.0004106129389413359, 0.00041812778949910554, 0.0004262271653631519, 0.000434611313267349, 0.00044332902811896593, 0.000451198997349242, 0.00045896361045583964, 0.0004638905217521125, 0.00046581892402612976, 0.0004655215810876245, 0.0004589129855085108, 0.00044863944142237497, 0.00043147547555784436, 0.00040988239019160665, 0.00038042181405960974, 0.0003607334430441941]
4 [0.17996283921541828, 0.16815953094158456, 0.1341546840653502, 0.10227538114165946, 0.0805496366804259, 0.0625361441218068, 0.05048711834064509, 0.0410584593533167, 0.0340656381772038, 0.024007994280736942, 0.02159119124061327, 0.016743484392448143, 0.01419822997792423, 0.00957914027384233, 0.0068743408748978855, 0.008994486195685786, 0.007129119866666034, 0.0029210674618769658, 0.0020444376515738475, 0.0003648752630316059, 5.699489138156822e-05, 0.00010685773958559594, 0.00015445740211314442, 0.00020074573054821074, 0.0002458612152176166, 0.0002895832098527932, 0.0003300020301490631, 0.00036522408212919617, 0.0003958274289420176, 0.00042103471264492835, 0.00044199340556385345, 0.00045853563562051004, 0.0004722182565043082, 0.0004821887018276914, 0.0004887062484556415, 0.0004931026853417923, 0.000495791741812991, 0.0004962750424023497, 0.0004954868985240495, 0.0004932557189285596, 0.0004899593199216794, 0.0004865038702509742, 0.00048207144642925797, 0.0004773701149095988, 0.0004727202767518091, 0.0004678892711692423, 0.00046309410643832993, 0.0004586446393458593, 0.00045438385578857335, 0.0004503842070144986, 0.0004467492672265692, 0.00044326796534580374, 0.00044051489096618644, 0.0004377356376183933, 0.00043595739952955874, 0.00043425359562442766, 0.0004333147941491938, 0.00043299330406929693, 0.0004327302385407959, 0.00043420695926398836, 0.00043475656542503135, 0.00043775388780014995, 0.00044002000719236216, 0.0004437733482602372, 0.00044801587967458823, 0.0004523114326273692, 0.0004590071528673697, 0.00046373153067857833, 0.00047063485674570335, 0.0004777936180957992, 0.0004853331296525059, 0.0004907498120185087, 0.0004987217108148503, 0.000505029487719594, 0.0005102951112489431, 0.0005181129831136416, 0.0005179797066558903, 0.0005215659422022599, 0.000525121767233042, 0.0005233755689974845, 0.000519689343455334, 0.0005157547923992992, 0.0005087076416710751, 0.000499187566350724, 0.0004883259636958277, 0.00047344774923053747, 0.00045739934457549546, 0.0004405985393514062, 0.00041564964474801374, 0.00039316900906317145, 0.0003749074201562832, 0.0003735610113453771, 0.0004069644933874442]
5 [0.17945612662620153, 0.16574618334214203, 0.13550419088759366, 0.10404005520337006, 0.07725362658178497, 0.06566344328530346, 0.05263618762898609, 0.04090921305607283, 0.031177089370739684, 0.02662667761187238, 0.02317884248658364, 0.014118572776054085, 0.011890070357766083, 0.009212660266282247, 0.008308823060224877, 0.007922513990665191, 0.004774569776306269, 0.007061011264351059, 0.0021558372789878535, 0.00037782854203100057, 4.9083442043637145e-05, 0.00010168258802084178, 0.0001487431662539588, 0.00019223444113869974, 0.00023640834416718652, 0.0002789173300074138, 0.00031821462503922593, 0.0003535663144426112, 0.00038412972487829685, 0.0004094948015212819, 0.000431296696117107, 0.00044846209328939683, 0.0004618846329238738, 0.00047296101507420863, 0.00048062401864462303, 0.0004859895943720299, 0.0004886560292026835, 0.0004903110301000723, 0.0004898620031986738, 0.0004884268220520469, 0.0004858709416854467, 0.0004823940592546891, 0.0004786575064926065, 0.00047434801650596986, 0.00046986919236443453, 0.0004651800807710915, 0.00046078948910457295, 0.0004564386294132415, 0.0004520881550456853, 0.0004483088750478694, 0.00044473680350528194, 0.0004411444168435598, 0.0004383606312993738, 0.000435689396211231, 0.00043381396328564994, 0.00043214821556016264, 0.00043115107606521457, 0.00043082882598611654, 0.0004305192595739658, 0.00043201519009125784, 0.0004325358372941848, 0.00043551839249688447, 0.0004377929222623325, 0.0004415303145406766, 0.00044576101036858834, 0.0004500685161187822, 0.00045674632726206126, 0.0004614785498720674, 0.0004683570296663623, 0.00047551528754598526, 0.0004830298920955364, 0.0004884276281761576, 0.0004963709117211004, 0.0005026487931938927, 0.000507887053827562, 0.000515651065978193, 0.0005154620148373574, 0.0005189765381388507, 0.0005224710945776723, 0.0005206558385478756, 0.0005168986962796984, 0.0005128841666402976, 0.0005057588946492723, 0.0004961605211443532, 0.0004852261917933302, 0.0004702867042050068, 0.0004541905197413346, 0.00043735605891379373, 0.0004123981207695776, 0.000389923507202387, 0.0003716829212296312, 0.00037036434807249214, 0.00040360483383198795]

===========================================================================================
python3 delay_tomography.py 3 4 uniform 0.5 1000000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.09457875777853102, 0.10929531518983594, 0.10805688768152201, 0.09841034067174256, 0.10784947503160276, 0.10977589293422577, 0.09946223978526227, 0.10612567481864486, 0.11356633539924524, 1.1040096279794689e-23, 5.8359411594872986e-24, 0.019216374663218128, 9.612033685720983e-24, 7.75029156766193e-24, 5.835941205517024e-24, 0.012813334559650842, 1.2774814232158002e-23, 0.013672236276454124, 9.305377931749068e-24, 7.570657875981367e-24, 6.703297146096051e-24, 9.305376299330848e-24, 1.121973158251565e-23, 5.835937818384031e-24, 0.007177135210064453]
3 [0.11217701023077123, 0.10687492958652771, 0.11526899185268151, 0.10838483350689537, 0.1027945785715075, 0.1274839714497472, 0.10573802202757658, 0.11246392385418391, 0.09327410803753841, 5.416043324858413e-05, 0.0003458471963895759, 0.0005255970547930989, 0.0007258794374306575, 0.0008944859060256825, 0.001068959663461288, 0.0012025841653857511, 0.0014112416756273866, 0.0013721970625272986, 0.0011924318457702217, 0.0011733613542406728, 0.0011801864779904037, 0.0010612063947882647, 0.0009760666754719165, 0.0008606049318542484, 0.0007895897160400093]
1 [0.09650023045308928, 0.11271960326107208, 0.11589764564192098, 0.11616870873657201, 0.11367942810410543, 0.12626389936181526, 0.13069762454249048, 0.10001196011102899, 0.041255949504208404, 0.023548322450429968, 0.01566928139518059, 0.004519234812564631, -8.855344662968878e-05, 4.482287894744831e-05, 0.00014697833259362132, 0.00020311445129881107, 0.0002288057686407498, 0.00024955117903865617, 0.0002452971047465413, 0.00024144947358183686, 0.00025150215487310844, 0.00026979609718973477, 0.00029392010977311576, 0.0003184870721982929, 0.00033705079688885626]
2 [0.09358844049482126, 0.115345688013706, 0.11155649156989457, 0.11975072513250398, 0.11740769230217202, 0.12721571249343763, 0.12783339491967216, 0.09682976057650597, 0.04197062475380395, 0.023882929414117345, 0.0152528010291024, 0.006426512409555315, 8.63256858137263e-05, -6.522580836696194e-05, 7.484307805227076e-05, 0.00016012081415881112, 0.00020600826498084492, 0.00023932762584882432, 0.00024391664232013423, 0.00024625355155834076, 0.0002583533435648708, 0.0002741449738067881, 0.0002893499135026817, 0.0003044403021888976, 0.0003176244353547442]
6 [0.13191376627939788, 0.10591636860846432, 0.10346119111939245, 0.1262573511633838, 0.092540695657643, 0.12539679112005558, 0.09599420713456772, 0.11153161891366993, 0.10698801000342531, -2.9457756252434436e-23, -2.2658725584923305e-23, -1.426512348253926e-23, -2.6195260209251705e-23, -2.198106531339698e-23, -1.5977667234806377e-23, -2.455200658229948e-23, -2.8471567937029655e-23, -3.4320428593577245e-24, -2.0385793527388706e-23, -3.071540998717153e-24, -3.00346882081018e-23, 5.828049782633017e-24, -2.4226771199287014e-23, -6.853237961059333e-24, -1.3519415377727127e-23]
4 [0.08978903960861818, 0.11310558264912969, 0.11379245837443334, 0.12031552536672437, 0.11103381355238821, 0.12115134657853252, 0.12967579841915894, 0.10779456371277199, 0.04375888399305856, 0.026376514543338753, 0.01624220292324641, 0.004051493447737198, -4.492702378996686e-05, 6.484172407258386e-06, 0.00011686331229344056, 0.0001828965885208628, 0.00021312331639329558, 0.00024102651078010737, 0.00023666331573631025, 0.00023235856141850256, 0.00024115779349718897, 0.00025999390053862894, 0.0002834823831827587, 0.000305661032577476, 0.00032343439385669644]
5 [0.10627994572637571, 0.09683864665780556, 0.1274027832604974, 0.11023945517544262, 0.11348652907935274, 0.10265658068416265, 0.11766049881582767, 0.10946698646585486, 0.10869121065131447, 0.0020066628250071774, 0.0015332799993508495, 0.003737420659008328, 1.0207880748572605e-18, 3.043332381645892e-19, 1.1470902882537785e-18, 6.906689613719962e-19, 6.754889111029316e-19, 7.883223293109424e-19, 5.3724645944152405e-19, 4.2956343966944765e-19, 5.716541445855721e-19, 1.3636246875282753e-20, 2.8824581163957444e-19, -5.812145595567006e-20, 9.525094490931072e-20]

===========================================================================================
python3 delay_tomography.py 4 4 geometric 0.5 1000000  failed with stdout:
b'i_max is 114\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 4 uniform 0.5 1000000  failed with stdout:
b'i_max is 32\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 5 geometric 0.5 10000  succeeded with stdout:
i_max is 63
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.16674392616793732, 0.1294678853540072, 0.1107418363432233, 0.10387835647963292, 0.07500051605806354, 0.07873055402305693, 0.04865285528629011, 0.04359545092713873, 0.05301371286746181, 0.003910503321196866, 0.04786046214189081, 0.014944334221206022, 0.01353602517345347, 0.020012917411112968, 0.012798587356794245, 0.017550098638596773, 0.0004245171465371297, 0.008883576578245823, 0.007098695941769331, 0.00561838337998526, 0.005222733136809033, 0.0005932589975006972, 0.003035642510466368, 0.007451080206471275, 0.0005530987069787511, 0.0005643107751180582, 0.0005645497480502863, 0.0005062482064059523, 0.0013674862034256, 0.0005608015319671096, 0.0002213782844187109, 0.0022138420832199376, 0.0005210939572162296, 0.0004190377133319711, 0.0005905764205218723, 0.0002987400010227545, 0.0004997494439045566, 0.0005279328853821908, 0.00033460354975573946, 0.0005401472667887286, 0.00044214368354351285, 0.0004815916685485012, 0.0005659846438993987, 0.0003333450894227305, 0.00044098303744234365, 0.00043359120544129027, 0.00047902755986238793, 0.0004184136219015634, 0.0004261107846340872, 0.0004978211269227268, 0.00041005794401125325, 0.00043750606048106595, 0.00044283015701322123, 0.00043587817104025987, 0.0004510311863157063, 0.00043149503541672343, 0.0004434277498261285, 0.0004436950386265351, 0.00043803782023712156, 0.0004441451546612487, 0.0004369532578208822, 0.0004438793155124191, 0.00044037353959501166, 0.000440138396231261]
1 [0.16636386828543315, 0.1525227335918654, 0.12524993679666996, 0.07499947765992429, 0.07945497274645713, 0.049687017075050285, 0.07946381069935443, 0.0648083481730935, 0.013730117492545279, 0.026177147209921675, 0.019367345732804984, 0.03759539302752334, -4.832685121319053e-05, 0.02164424914703314, 0.017627418547769735, 0.0182316558674432, -1.3686789912898518e-05, 1.8613470564853183e-05, 0.01388168598856201, 5.297271138300077e-06, 0.00715893387672751, -5.742261035393375e-06, 0.008465988772722397, -6.640019811687166e-06, 0.002131806296076417, 1.2295874005330989e-05, 0.0018848221827796547, 0.00011596741575091866, 0.00018656155750074174, 0.00028534329510409846, 0.000359806971887437, 0.0004164002951782575, 0.00047247982213950875, 0.0004976449330235171, 0.000533418022625136, 0.000554098405935622, 0.000553009116734088, 0.0005677461007540089, 0.0005748931985698567, 0.0005728570386317823, 0.0005796171079752018, 0.0005795795316080783, 0.0005847158827850647, 0.0005883236887032327, 0.0005763275959171041, 0.0005948995559225216, 0.0005845237511466692, 0.000599975752388868, 0.0005995183337721961, 0.0005992708435574545, 0.000610731503782945, 0.0006085986112151953, 0.0006162492432995265, 0.0006012157921151341, 0.0006167510466807209, 0.000593682730886345, 0.0005952576205736156, 0.0005734877315063643, 0.0005561482240273879, 0.0005296116032461451, 0.0004948926447800047, 0.0004609327739957949, 0.00041068720580843493, 0.0004007202917636291]
2 [0.15914715807937896, 0.15594115129903224, 0.10753919480170797, 0.10733885056115848, 0.07746365087472673, 0.038955526326663645, 0.055517509942901354, 0.06321780062179236, 0.0300555195166928, 0.036709575349675935, 0.025857916621926415, 0.02726589857951126, 0.027901928902161817, -2.6292219172777812e-05, 0.0166463830005021, 0.0005331074907328476, 0.027027436577100706, -1.821008161349497e-06, 0.012900996122094069, -7.706360299913973e-05, 0.0005874050030519551, -2.4773668652828064e-05, 0.0018495543127522614, 0.005961777965006866, 2.945701661817904e-05, 0.0001640790617493403, 0.00012638147685502927, 0.00012664345581956743, 2.6191301841839345e-05, 0.002066670165621717, 0.00012786900881406283, 0.0003032594762520352, 0.0004220723098169729, 0.0005250877753433382, 0.0005209599443267768, 0.0006127744576744345, 0.000576853826543571, 0.0005693088698984346, 0.0006633472306326804, 0.0005305141692472045, 0.0006303686278071566, 0.0006025000091292967, 0.0005822807495174986, 0.0006027008822475559, 0.00059425700615305, 0.0006367127761999225, 0.0005873656309460407, 0.0006142801657913915, 0.0006107709474480523, 0.0006227002653001537, 0.0006274092164866795, 0.0006165530996576458, 0.0006200063419562476, 0.0006263980499096453, 0.0006370918278957955, 0.0006073003799478276, 0.0006128256435301107, 0.0005882692964256973, 0.000574627976071892, 0.0005526327816956578, 0.0005049224300804605, 0.00048187159878547225, 0.0004307439137935432, 0.0004121887010255505]

===========================================================================================
python3 delay_tomography.py 2 5 uniform 0.5 10000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.05959540186281015, 0.048811385522511345, 0.08689500928556544, 0.0454112333783299, 0.08781000759638452, 0.057580140584614185, 0.10283521743929928, 0.01719397086139948, 0.10682196466182813, 0.0038025744048972715, 0.14550141932296232, 4.8835994584399234e-23, 0.05389727293646275, 4.883599464641418e-23, 0.04308951067655703, 2.920991725939136e-23, 0.035825038792408566, 2.9209917215865343e-23, 0.058612926182218354, 3.2577136452042367e-23, 0.046316926491751564]
1 [0.08879217361364176, 0.11203690860412538, 0.08781614243793971, 0.09269303402261525, 0.07165356395468324, 0.09129436443672478, 0.07454991003286203, 0.11485817497323221, 0.12342610204796212, 0.07838061823544319, 0.04430024627657217, 0.011724314941535226, 2.6181973704631577e-22, 1.787100005857217e-22, 0.008474446422662738, -2.1534446832177403e-22, -2.232095520511207e-22, -1.8526484596422804e-22, -2.487518419859211e-22, -2.3262315591809845e-22, -3.9567850902013665e-23]
2 [0.10177616791182562, 0.10730895846620485, 0.07356791351968855, 0.10014909346113303, 0.07597492004126702, 0.07918238159361289, 0.09501958350428208, 0.1165573114857715, 0.09097155379082147, 0.08820485462779738, 0.06269493447832922, 0.0009053850145290781, 0.007547280108750132, -8.877400152244848e-05, -2.4781291933442703e-05, 4.131065517922103e-05, 1.0097351847960582e-05, 5.058558091685797e-05, 6.741837187367349e-06, 3.553897170753758e-05, 2.5563048488904812e-05]

===========================================================================================
python3 delay_tomography.py 3 5 geometric 0.5 10000  failed with stdout:
b'i_max is 77\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 5 uniform 0.5 10000  failed with stdout:
b'i_max is 30\n0\n0.0008\n0.0005\n0.0013\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 geometric 0.5 10000  failed with stdout:
b'i_max is 94\n0\n0.0013\n0.0008\n0.0021\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 uniform 0.5 10000  failed with stdout:
b'i_max is 40\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 5 geometric 0.5 50000  succeeded with stdout:
i_max is 78
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1723667483666767, 0.13098426752829212, 0.12217328876404214, 0.07893880696000183, 0.08785477585098266, 0.06829209738675114, 0.061356745655705675, 0.037762438902371784, 0.045510123503276184, 0.02245344584028707, 0.03284133291707025, 0.016687515024166037, 0.019944891588552595, 0.014381420908262894, 0.014619806707392753, 0.008804981308547795, 0.009265016477843193, 0.005795600472510014, 0.007190358703999382, 0.0029466437175775058, 0.002883467939192637, 0.002911094799830401, 0.00418055117379622, 0.001367981502029494, 0.0030916516366178244, 0.00046163410028154207, 0.0014123272864916968, 0.0005519712038294154, 0.000449553042510682, 0.0009349637338348027, 0.0004098963341468423, 0.0012392238583748137, 0.0005162630428236924, 0.0004719403994158643, 0.0004512297582087185, 0.0003143827859311951, 0.00044428665728034, 0.00046126829467897125, 0.00045463007096246206, 0.0004910209987021739, 0.00035327942881340234, 0.00046693854139362104, 0.00041557666980045915, 0.0004296242148291409, 0.00036822715070978054, 0.00043485665031359037, 0.0004076944058835441, 0.00043095916941849824, 0.00040547690678368904, 0.0004099498175605282, 0.0004126033932205374, 0.00042341515024863386, 0.00040709643319243637, 0.0004147097928048708, 0.0004121070402505154, 0.0004061815852130582, 0.00041043298543635466, 0.0004105895295493231, 0.0004115975422214523, 0.0004199252798442118, 0.00040393958975074766, 0.00041222437091367097, 0.0004095783469710344, 0.0004120125843390197, 0.0004295276905220476, 0.00039651816763978216, 0.00041362626089492394, 0.0004080434304762826, 0.0004131773004502997, 0.00041967231311726145, 0.00040354103176959145, 0.0004125191906649808, 0.000409435619614673, 0.00041206258756410006, 0.0004107222222828449, 0.00041060984045810625, 0.00041129436190756184, 0.00041079548629507543, 0.00041103822688855283]
1 [0.15690947837944286, 0.14939650906730273, 0.10859230794900146, 0.0982039347488593, 0.08470880813750231, 0.058810289925765126, 0.06484568241616542, 0.04071280470564448, 0.033280952673056405, 0.043375425378526004, 0.01516244391995183, 0.02970524841763681, 0.007156889569305796, 0.024647662434716423, 0.013644451426230426, 0.011010242205700415, -2.7197701239435145e-05, 0.005888520164429818, 0.010013241992824742, 1.2394570880958409e-05, 0.014313030896018023, 2.692341157221887e-05, 0.0012809351439654606, 0.00013531675697717676, 0.001520438699801159, 9.961711464654023e-05, 0.00019846759129324722, 0.00029635237835805555, 0.0003452513976749316, 0.00041335794089449333, 0.0004509117116500151, 0.0004913471317845178, 0.000500167132418236, 0.0005256590757924709, 0.0005228946975413145, 0.0005356612509480661, 0.0005314826198871835, 0.0005333611605980594, 0.0005307713496118544, 0.0005304359738983208, 0.0005269772385967447, 0.0005222789061976728, 0.0005181776072559318, 0.000515390220393431, 0.000509788676803795, 0.0005055051950882467, 0.0005013159433671699, 0.0005000468618513209, 0.0004959321371687584, 0.000495444593642222, 0.0004920235849360975, 0.0004904695828281371, 0.0004903720189123053, 0.0004885824327337759, 0.0004899547934524534, 0.0004902246159535454, 0.0004926385153969881, 0.0004955657345770341, 0.0004991384983401487, 0.0005036762103069874, 0.0005084582378782, 0.0005139395794918614, 0.0005209451768212877, 0.0005272889127152203, 0.0005354511987747841, 0.0005398924542434851, 0.0005475842633762881, 0.0005511149559030482, 0.0005543284868233542, 0.0005559382473506031, 0.0005525064678515974, 0.0005482224258908646, 0.0005394213666261179, 0.000523191529188923, 0.0005034443283920694, 0.00048256928801785704, 0.0004517804269185705, 0.00042000923268781964, 0.0003981287305688653]
2 [0.1640599114477891, 0.14498354101905522, 0.09762221685778637, 0.11656628254495432, 0.07262408733711236, 0.05557087088455619, 0.058226937224532795, 0.05229152010767547, 0.03847171373210849, 0.02767845050265931, 0.02599396190888621, 0.01727052391228083, 0.030736232941042076, 0.005374242194555479, 0.016522978677357837, 0.009369034708163911, 0.011314870831277161, 0.004129959840242673, 0.005364095305303752, 0.005779567861051016, 0.0019798414195796015, 0.004128608390039597, 0.005367349416052405, 0.002220784413062429, 8.00791964763721e-05, 0.00016388351884498678, 0.0002364267447462238, 0.0002849695261826423, 0.0003418101178001298, 0.0003845115589206115, 0.0004235496984984862, 0.0004480098208872999, 0.00047541659371133995, 0.0004864408850588667, 0.0005046350710387361, 0.0005103554028004461, 0.0005161012715359923, 0.0005190135495696356, 0.0005211885875737525, 0.0005195037955932204, 0.0005178359526587515, 0.0005151543911274325, 0.0005122848831681579, 0.0005088909010748243, 0.0005045772903251246, 0.0005010327761555519, 0.0004989487204302835, 0.0004945076099794847, 0.0004933193596029332, 0.0004897015596555939, 0.0004886333608945599, 0.00048650031876563456, 0.00048542704428439264, 0.0004859382827091585, 0.000484988226818833, 0.00048765269982782534, 0.0004886599681717385, 0.0004912019846648167, 0.0004950513924814484, 0.0004987033843282568, 0.0005043839830671764, 0.0005096187986195948, 0.0005167853382199617, 0.0005230307692153887, 0.0005300856895913717, 0.0005352618154624349, 0.0005422583345924308, 0.000545639618008192, 0.0005482903313667968, 0.0005498453195743891, 0.000545879123617803, 0.000541188508645569, 0.0005317817910935477, 0.0005153414392755116, 0.0004954787868463218, 0.0004743848471956081, 0.00044408822393070203, 0.0004126310792241023, 0.0003906830757480406]

===========================================================================================
python3 delay_tomography.py 2 5 uniform 0.5 50000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.0848573136245172, 0.0876059622858402, 0.09577672351819848, 0.08178050439022097, 0.08501149605347438, 0.09001565139739014, 0.09935693136752062, 0.07994343243473429, 0.10251380955418796, 0.07470471722835205, 0.09710563109712639, 0.009804226765193259, 0.0028847671628285244, 0.00023306853231397777, -2.1913725808675787e-05, 0.0024426489550413875, 0.000970159258165522, -8.130016609485658e-05, 0.0038569986155098748, 0.00025059097643149406, 0.0008590619932331744]
1 [0.09328719308376873, 0.08866087182764694, 0.08953803629323366, 0.09433193457690425, 0.10228472415355412, 0.09496483897155013, 0.06696596231116626, 0.08886559829486622, 0.10292119396907981, 0.09904170762177145, 0.05707006680198424, 0.02206787209447402, 2.0989470854821886e-22, 1.9145507115294534e-22, 1.6598426231607943e-22, 1.9582279573531821e-22, 1.9232248486111898e-22, 1.9195861197914105e-22, 2.213800373178894e-22, 2.050876306322148e-22, 1.431134199152253e-22]
2 [0.09540233814729229, 0.09161085517598881, 0.08192820295035966, 0.09517262123910361, 0.10676873486365616, 0.07657510723539603, 0.0871424009963051, 0.10879186932787575, 0.08131875452499754, 0.0780514515724857, 0.09723766396653925, -5.060884687374186e-22, -6.803825413065611e-22, -6.373671486298364e-22, -6.245348127431703e-22, -4.242871774364715e-22, -7.714934204509969e-22, -6.738600453979669e-22, -3.9956517440403665e-22, -6.486415173292637e-22, -8.353168921732035e-22]

===========================================================================================
python3 delay_tomography.py 3 5 geometric 0.5 50000  failed with stdout:
b'i_max is 106\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 5 uniform 0.5 50000  failed with stdout:
b'i_max is 30\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 108, in infer_delay\n    k.alpha = DelayTomographyMle.least_squares(k, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 136, in least_squares\n    result = prob.solve()\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 246, in solve\n    return solve_func(self, *args, **kwargs)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 361, in _solve\n    self.unpack_results(solution, self._solving_chain, inverse_data)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 471, in unpack_results\n    "to reduce the dynamic range."\ncvxpy.error.SolverError: Solver \'OSQP\' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.\n'
===========================================================================================
python3 delay_tomography.py 4 5 geometric 0.5 50000  failed with stdout:
b'i_max is 103\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 uniform 0.5 50000  failed with stdout:
b'i_max is 40\n0\n0.00012\n8e-05\n0.0002\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 5 geometric 0.5 100000  succeeded with stdout:
i_max is 78
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.17164822793050494, 0.13496760846197955, 0.12067120321219255, 0.08644650977248827, 0.08411084259472595, 0.06529790239438776, 0.05720488128619112, 0.041100514573070436, 0.040206161664313164, 0.02742639473617526, 0.030463393896273713, 0.018902638256726, 0.019273631162253592, 0.013960853045440761, 0.013108266860173075, 0.010190165638827405, 0.008537391792716589, 0.006822032585365997, 0.007279544796064599, 0.0029578963767868858, 0.004075679671199677, 0.0029513655969210227, 0.00390922743026486, 0.0016427121997144613, 0.0017999170841981821, 0.0006031341510696325, 0.0005885501721503967, 0.0008341745093903797, 0.0005128070822530595, 0.0005473556849989393, 0.0005489892476721719, 0.0005842381457844324, 0.00047723808282834564, 0.000496881312112828, 0.0005200048119160821, 0.00038733155743539345, 0.0004725276136188827, 0.00044028236844474136, 0.0004963786180656415, 0.0004601783952301131, 0.00040279316242836506, 0.0004703016086553594, 0.0004400486095189029, 0.0004283445010746833, 0.00043317192191272015, 0.0004269502787522874, 0.0004241549421206414, 0.00043771139011746944, 0.0004291047772382261, 0.0004384428946018149, 0.000433226312881179, 0.00044955475162103214, 0.0004187093396877088, 0.00042979781229844925, 0.00043002125311472243, 0.00042297406483186487, 0.0004284326049690935, 0.0004287058963816356, 0.000428570699368534, 0.0004336012943327378, 0.00042982953236943056, 0.0004257515054140139, 0.0004284510209690753, 0.0004286951403454605, 0.0004381839585230583, 0.00042160150749786184, 0.00043428107613811834, 0.0004243162445104638, 0.0004297099843134685, 0.00043263820276988015, 0.00042566511012068057, 0.0004287127189959414, 0.0004285358420986062, 0.00042879263155733545, 0.0004286905371734567, 0.0004285630383388544, 0.000428759611396574, 0.00042861158621797967, 0.00042872315200981104]
1 [0.1603154717336811, 0.14291411353155245, 0.1069267873588091, 0.10063530821347094, 0.08287872436832916, 0.0629158422983883, 0.06011179703904733, 0.05009570343201411, 0.03222669411809128, 0.036942135971083825, 0.019967351392118048, 0.02640328110430315, 0.01081947211663568, 0.020490440169630357, 0.014905004928104312, 0.010908726656401965, -2.279650037365206e-05, 0.011489606856849455, 0.0052217542911172764, 0.0014036463477784297, 0.010968818516657269, -6.372394160918154e-06, 0.0012318373103763756, 0.0013124011662948322, 0.0023484086594631488, 0.000379027513023475, 0.00011029764847133017, 0.00021993762666707944, 0.00030896350662380073, 0.0003643530728150074, 0.0004169268713067047, 0.0004544964432545038, 0.00048334183627236763, 0.0004997475725860901, 0.0005167082601538855, 0.0005234912388625669, 0.0005318790082064262, 0.0005318644341780323, 0.0005321428051411485, 0.0005309712987802701, 0.0005283129506996132, 0.0005241189267821156, 0.0005206349739282872, 0.0005171363571730313, 0.000513181112405769, 0.0005078826339056918, 0.000504338026556075, 0.0005011944426031365, 0.0004991899453561069, 0.0004960578115453128, 0.0004940375227929592, 0.0004917982410508429, 0.0004910994900292405, 0.0004907951863369936, 0.0004908750131648109, 0.0004921242515633904, 0.0004938828323637078, 0.0004968623240740027, 0.0005001331580290536, 0.0005048032237492496, 0.0005100529904378235, 0.0005152604645766902, 0.0005219483815902459, 0.0005282545339275924, 0.0005357060453647776, 0.0005417386001159677, 0.0005475346452333144, 0.0005525095827507358, 0.0005546641942549487, 0.000555770860331516, 0.0005529005460137711, 0.0005478403394585747, 0.0005383106805975672, 0.0005238037256771297, 0.0005037642753596259, 0.00048157314513023764, 0.0004505049389857517, 0.0004170047757810169, 0.0003928202057713588]
2 [0.1599048195080573, 0.14581388512399174, 0.10608177610038803, 0.1016314023986945, 0.07170647468607357, 0.07242910651561937, 0.05070359590207141, 0.05076152034532858, 0.04526355849649339, 0.028924426530864803, 0.019114941973880327, 0.024059866071686767, 0.025704221336538984, 0.00907744153300195, 0.009879876939338735, 0.008819890491685687, 0.01167320275635297, 0.009787599475406524, 0.004846205543754185, 0.005155258741626945, 0.0003703379239856277, 0.005002342508814057, 0.004864342402079564, -7.644105891749833e-06, 0.0022891803686650885, 9.068957105456512e-05, 0.00017141037309009334, 0.00025276802507594734, 0.0003077223811464439, 0.000365071819480647, 0.0004077040318371108, 0.0004458253227712578, 0.00046894825827692416, 0.0004917802693854555, 0.0005030311113277485, 0.000516347993254363, 0.0005196578270070318, 0.0005239331444719809, 0.0005245113429199644, 0.0005232937908160833, 0.0005215235661552113, 0.0005190589079145983, 0.0005146715251540407, 0.0005132467832258944, 0.0005078056770005704, 0.0005044213695449434, 0.0005010839634076662, 0.0004981362958377154, 0.0004953113403238193, 0.0004928930113467173, 0.0004908295047754397, 0.0004885906941837775, 0.0004883523657887866, 0.00048754442972957416, 0.00048802218840913233, 0.0004892249793704781, 0.0004910884745865931, 0.0004934564796860338, 0.000496870672641873, 0.0005018898694399706, 0.0005062428600250751, 0.0005120763149726087, 0.000518502235667639, 0.0005247796311502412, 0.0005320237906773335, 0.0005376946332510089, 0.000543798726081015, 0.0005484462183644917, 0.0005504842160836327, 0.0005514555219474608, 0.0005485634063961558, 0.0005433193405364178, 0.0005337677845333043, 0.0005192581525236481, 0.0004993095506391157, 0.00047714774676633695, 0.0004464951496128905, 0.00041332115520388693, 0.00038957868378531387]

===========================================================================================
python3 delay_tomography.py 2 5 uniform 0.5 100000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08430321294491655, 0.09308040015062233, 0.08221914404814705, 0.08875888399826173, 0.08775904731555666, 0.08816142802088286, 0.10170976751814687, 0.08016690876137614, 0.09827861477679817, 0.08360193588855325, 0.09161957427996453, 0.005749609652238161, 0.005192547275712329, -0.0005124174705548033, 0.00040998682630295904, 0.0003630589181673284, 0.006627246327751866, 2.404837804560677e-05, 0.0010202488582291822, 0.00047587608845186554, 0.0008181514903265567]
1 [0.09153147604192541, 0.0899840551871631, 0.09348205483926955, 0.09777975288285878, 0.09104574099189552, 0.0969770572944392, 0.07371491134526137, 0.09144573283550218, 0.09692215080510391, 0.0953276052221992, 0.07097975205127319, 0.010809710503108466, 3.515684208751324e-22, 3.2788647057487584e-22, 4.605748102112215e-22, 2.2610112881282314e-22, 4.435448153982994e-22, 3.8376329519230905e-22, 3.9505936031300607e-22, 4.175500802848516e-22, 3.231479252597024e-22]
2 [0.09524493026408012, 0.08325133163409092, 0.10124188475312547, 0.09237317646435973, 0.09887170922760426, 0.07874441190252149, 0.08283925280151253, 0.11270612834625367, 0.07349346456996027, 0.08715880574365484, 0.09407490429283673, -4.7741782643654535e-23, -1.2064998322202499e-22, -2.5671649008838333e-23, -8.97518786345937e-23, -3.6133050980340355e-23, -9.537121161071967e-23, -1.1974378310111593e-22, 5.325581390978653e-23, -1.9675553110425985e-22, -3.9077179640833326e-23]

===========================================================================================
python3 delay_tomography.py 3 5 geometric 0.5 100000  failed with stdout:
b'i_max is 106\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 5 uniform 0.5 100000  failed with stdout:
b'i_max is 30\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 geometric 0.5 100000  failed with stdout:
b'i_max is 103\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 uniform 0.5 100000  failed with stdout:
b'i_max is 40\n0\n0.00025\n0.00028\n0.00053\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 5 geometric 0.5 500000  succeeded with stdout:
i_max is 86
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.17295272696093497, 0.13588163006412518, 0.1137286586573337, 0.09384876374040692, 0.077747988867782, 0.06956820845947179, 0.05567252768705502, 0.04289561408879468, 0.03796074768291781, 0.030841066751517023, 0.02911675835154222, 0.01904700956936925, 0.018455408193353347, 0.015527204235977787, 0.011029281207157675, 0.010743091725946046, 0.007500584617525496, 0.008201317913090598, 0.005296314524753339, 0.0035446533148613324, 0.0038505386391455274, 0.003152645328444395, 0.0024203710576245208, 0.0023427147057280603, 0.001078629594109444, 0.001419393519351781, 0.0005679979303328344, 0.0008686780500703742, 0.0004946058402622704, 0.0005268269304200719, 0.0005226384419232308, 0.00047394041904084966, 0.00046685403674754386, 0.0004668118066517902, 0.0004637355590710799, 0.00040244556165289956, 0.00045158050076428684, 0.00041105543483015367, 0.00043820591139344205, 0.00042489490867641486, 0.00041236760854597714, 0.00039890007697741635, 0.000408586112455646, 0.00042773842020501595, 0.00040100608918786047, 0.00039733857023507477, 0.0004127613182060678, 0.000393197553119449, 0.00042382127860422905, 0.0003928966430460849, 0.0004035096538710982, 0.00040962627961537346, 0.00039719058182176455, 0.00039939492050652915, 0.00040510606360256014, 0.0003998858732832519, 0.00040150292273360034, 0.0004009821635177413, 0.00039777533696062, 0.0004045126387993105, 0.0003995418778021485, 0.00040310541285904693, 0.00039766581421354436, 0.00040070892749210314, 0.00040240965218506767, 0.0003999892618455649, 0.0004018569066797007, 0.00040098450494639287, 0.00040011922411959896, 0.0004008736196034759, 0.0003997894807406928, 0.0004005534161591757, 0.0004004864535036212, 0.00040051474187058594, 0.00040050440198237283, 0.0004005080725857425, 0.00040051011630959116, 0.00040050540326540284, 0.0004005071315736164, 0.0004005083371956407, 0.000400504498358611, 0.00040050874922639945, 0.0004005067414439573, 0.00040050570040865913, 0.0004005090127902044, 0.00040050642862819665, 0.0004005074040598169]
1 [0.15670857080682174, 0.14306084682827452, 0.11500140520146396, 0.0953410904821016, 0.0826309546487699, 0.06368433397259685, 0.054412225655892675, 0.04804440322510947, 0.039324989152628345, 0.03283003321908434, 0.022668073470904625, 0.024098438261071747, 0.01547067714608137, 0.015731716081054753, 0.013641271566343066, 0.009750153176009805, 0.0068358477466327425, 0.009785362331554569, 0.005761163836041293, 0.003727396483053772, 0.00539252482222537, 0.0013356188799233015, 0.0017291365143762285, 0.0024753429835994026, 0.001761790197732678, 8.824241794380874e-05, 0.00017209199300788483, 0.0002432136654083646, 0.00030345955550143495, 0.0003544831898166825, 0.0003985872994108432, 0.0004330281672954035, 0.0004575389382356368, 0.00047717616589269796, 0.0004908711671730661, 0.0005016575101763753, 0.0005053970754215914, 0.0005081404353907402, 0.0005084530485836563, 0.0005062478309141654, 0.0005036816013285916, 0.0004997930745183159, 0.0004965198042153851, 0.0004919626746408151, 0.0004873741109612739, 0.00048338822039243777, 0.0004796128178257084, 0.00047612296430884956, 0.00047299776656685265, 0.0004698924237357767, 0.0004674470752906781, 0.0004649982479189678, 0.00046302698272440083, 0.0004610738723129031, 0.0004595280278915405, 0.0004583500268750095, 0.00045730440845423746, 0.00045649242144823175, 0.0004562380561004726, 0.000456123872907724, 0.00045641325785226625, 0.00045722728001972214, 0.0004584662070832721, 0.00046035056054497534, 0.00046300524966869685, 0.00046611217513109574, 0.0004700525443673162, 0.000475016978286979, 0.00048084232823397113, 0.00048672090630400667, 0.0004936512612839303, 0.0005005306265190411, 0.0005079934680181986, 0.0005147319988073483, 0.0005207104083250144, 0.0005264642205367513, 0.0005290502871946941, 0.0005304815523751029, 0.0005285102471632272, 0.0005244084504158393, 0.0005156629573549483, 0.0005022224195831773, 0.00048515895970976903, 0.0004631183514101772, 0.000436446125811287, 0.00040594684117517527, 0.00038540809679015034]
2 [0.15531122040646575, 0.14316355594100974, 0.11633242980200324, 0.09541039896372788, 0.07978885961920963, 0.06702334959524955, 0.05441397915980623, 0.04786395898007481, 0.041501215692972784, 0.02848379736985846, 0.02577100461709534, 0.021446663742780363, 0.019663998664463514, 0.014515362848741753, 0.01095726800487629, 0.009970073473139584, 0.009937613609933164, 0.006138582908477111, 0.0061607499014797, 0.005946964283734992, 0.0011042325009629132, 0.002684402380516257, 0.004461566832185732, 0.0020107665386262415, 0.0011704732325929276, 9.908828305196291e-05, 0.0001761474171468079, 0.00024743422104494823, 0.000307759107951211, 0.00035790759974593887, 0.00040082125573422166, 0.00043413375817659346, 0.0004579144091351896, 0.00047591008774243036, 0.0004893632760051558, 0.0004989975663893278, 0.0005032094150472018, 0.0005056488269844955, 0.0005058956106326265, 0.0005039940915425056, 0.0005013197981031225, 0.0004980565635269057, 0.0004944592055457064, 0.0004906008666215808, 0.00048587765614861066, 0.0004820119902396618, 0.0004783885108227134, 0.00047499671590544716, 0.00047198031288775595, 0.0004690598775757065, 0.0004664108139252929, 0.00046420327178674616, 0.00046219217566180964, 0.0004603061622353414, 0.0004588192428216621, 0.00045762349335498284, 0.00045658810708893165, 0.00045583421104055673, 0.0004555323931310905, 0.00045548361375692166, 0.0004557499943551066, 0.00045648161826855393, 0.00045782975329553666, 0.0004596209966223028, 0.00046225113665710545, 0.0004653574091144981, 0.00046928808765240036, 0.00047423092226418946, 0.00048002491288496365, 0.0004858517405041975, 0.0004927967184182021, 0.0004996191336047616, 0.0005070464353484937, 0.0005137602198751457, 0.0005197114173456847, 0.0005254407792982735, 0.0005279776443151857, 0.0005294061670162583, 0.0005274269512520382, 0.0005233297748320454, 0.0005146048632898408, 0.0005012132679172878, 0.0004842167013745559, 0.000462261496507504, 0.00043568000386487937, 0.00040528498065743357, 0.0003849928269797335]

===========================================================================================
python3 delay_tomography.py 2 5 uniform 0.5 500000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.09450817624045184, 0.09373833652394595, 0.0810740181903555, 0.09942376163414485, 0.08019789496221767, 0.09243723283435426, 0.09571288981734347, 0.08077353554215197, 0.09079460027368344, 0.09052491500727028, 0.09003225327828687, -0.0005121335945418161, 0.0004708066948445599, 0.0019226237449546952, -0.0004523615456565103, 0.006036357567404752, 0.0008734914963262255, 0.0002315646841897304, 0.0007185717140878291, 0.0007017362146312715, 0.0006317542016868568]
1 [0.08183244998192404, 0.08672225353585683, 0.09885827979347066, 0.08402211857987785, 0.09851710355065393, 0.09050828209623815, 0.08657850901744588, 0.09203334177088568, 0.09342337350122554, 0.08912539786532384, 0.08917644942751607, 0.007912656978569906, 0.0010402248414203461, -8.845755741472084e-05, 1.008204698791796e-05, 2.6350483659556887e-05, 4.38893001991688e-05, 3.157692844888058e-05, 4.768794749968893e-05, 4.8214220687570455e-05, 4.546151993282497e-05]
2 [0.08384191735235721, 0.08681528147961898, 0.09640680533166235, 0.0877321014867562, 0.0969428745062654, 0.08807943554992313, 0.08492657472514581, 0.09787319766471034, 0.09012483512350455, 0.09221165993809352, 0.08895885794829164, 0.002158127672208029, 0.0007235620417041516, -7.209310888868776e-05, 0.00282833258154086, 4.074293389689426e-06, 1.655758593665575e-05, 0.0002659494184205639, 2.845573411981993e-05, 3.156397747887333e-05, 3.0197617429121335e-05]

===========================================================================================
python3 delay_tomography.py 3 5 geometric 0.5 500000  succeeded with stdout:
i_max is 113
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.17120132260980503, 0.13206113796164293, 0.11936651582838147, 0.08897731819753399, 0.0871796510834228, 0.06464644814045462, 0.04876560992534046, 0.04246723828346441, 0.047575959535114676, 0.029325621603713797, 0.02214501294035008, 0.022158706111647695, 0.018709992623016102, 0.015205310482049539, 0.011511904857087711, 0.011543489880394726, 0.0085941524980029, 0.00025737252341698994, 0.010762632473759345, 0.005818277777916474, 0.00042130101015287036, 0.005739335057186391, 0.00033657661088011624, 0.004034371162516025, 0.00029680271299487666, 0.002067409928446017, 0.0012141464504071655, 0.00022286269801718764, 0.0004607097107445301, 0.0011248625677921253, 0.00030089350804955435, 0.00037228725567753227, 0.0004096793683084712, 0.0003088590015765944, 0.00031428776943110803, 0.00040508009403847627, 0.00031757198650451767, 0.00031519939972650716, 0.0003458974036327998, 0.0003317488512542858, 0.0002561156884974338, 0.00037878933547000706, 0.0003331616827270444, 0.00019183694199429856, 0.00041061645273194177, 0.0002447963499684855, 0.00032895234671897404, 0.0003051609737128297, 0.00030907814332556866, 0.00026591720072527376, 0.0003614276721679685, 0.0002457867672505565, 0.0003556946381075611, 0.00023280850222007153, 0.0003529963940498729, 0.00027199433079579257, 0.0003088532222602649, 0.00029988868443899295, 0.0003083234677134821, 0.0002820935620565058, 0.0003174820471463979, 0.0002791950140141172, 0.0003145884937407334, 0.00028324744416712325, 0.00031416806844326194, 0.00028653060814721597, 0.0003193403072999912, 0.00027753748049268363, 0.0003124348225067066, 0.0002931386162839851, 0.00030017892489898423, 0.000295829988811213, 0.0003022673209568283, 0.00029760317048326186, 0.0003022556498611052, 0.0002965474354017087, 0.0002981518427741086, 0.00029858156241726003, 0.00030027899787326065, 0.0002978266923615078, 0.0002995067007426261, 0.0002984457722419407, 0.0002994213091886103, 0.0002982788326155693, 0.00029933380231213984, 0.0002986395772120331, 0.0002989885328756357, 0.0002988169199637257, 0.00029891071425855887, 0.00029888913382906945, 0.0002989083007365405, 0.00029880725779145637, 0.000298951241408552, 0.00029882936842256765, 0.000298928895832224, 0.0002988403105337095, 0.00029891478712409583, 0.0002988583285900219, 0.00029889746947931383, 0.0002988680677284425, 0.00029889306263332686, 0.00029887521685137224, 0.0002988848650932257, 0.000298879338628055, 0.0002988827305660921, 0.00029888159971274894, 0.00029888325483176404, 0.0002988782802671048, 0.0002988850971480204, 0.00029887904287203806, 0.0002988840395788061, 0.00029887946479444154, 0.0002988834614388988, 0.0002988805493230009]
3 [0.17329092445840016, 0.13462087439187562, 0.10875882057405888, 0.10658883512735627, 0.0635457919884678, 0.06839546047359751, 0.06187585344511414, 0.04214996396521227, 0.03394111393948125, 0.046130430119179944, 0.006097420146682381, 0.03483128507887982, 0.0070824707191508894, 0.018713209327576856, 0.016514628829323655, 0.012182708144110817, -2.162310905614929e-05, 0.007925023370864507, 0.0071941824382297116, 4.1351748319361346e-06, 0.011020504819306463, -7.144958461997608e-06, 0.004046251257406653, -1.4818523930290872e-05, -2.256077142829778e-05, 0.0016537046388634675, 5.9910197254143555e-05, 0.00014676517329499097, 0.00022562942076962932, 0.00027579493231171334, 0.0003286776752941604, 0.0003651900433146581, 0.0003845117290520733, 0.0003948596001063295, 0.0004190685734153541, 0.0004211451910214527, 0.0004187070917354318, 0.00042639965010343923, 0.00041983655924494455, 0.00042089153139669987, 0.00041691690778764755, 0.0004135225386517045, 0.0004113996936203349, 0.00040028607321151077, 0.00040045909276614766, 0.00039916774114394957, 0.00039067041026847184, 0.00039123888278237934, 0.0003855168152293354, 0.00038476874739190494, 0.0003805789064057646, 0.00037982494253241004, 0.00037844441993733666, 0.0003743471916094501, 0.00037462383846625545, 0.00037330157121804263, 0.0003717638207949278, 0.0003715012365916796, 0.0003704009556509035, 0.00036948815378085996, 0.00036921901847888065, 0.00036916022312103456, 0.00036828426958105797, 0.00036792794378431957, 0.00036835353943707994, 0.0003677508142752897, 0.00036735392233915194, 0.00036763983509339527, 0.00036784802166973734, 0.0003664199937134611, 0.00036775219088516987, 0.00036704868076126455, 0.00036673004977619744, 0.0003669388005095345, 0.00036735062406024257, 0.0003659199322163663, 0.00036710158222715, 0.0003666489368063849, 0.00036595832554167814, 0.00036619809790266745, 0.0003664083907206156, 0.00036573676087790405, 0.0003659922635443932, 0.0003659884089122779, 0.00036621749464666386, 0.00036573925218331326, 0.0003671817615751393, 0.0003675062952559865, 0.0003683321524500161, 0.00036982104237375153, 0.00037183529967446585, 0.00037509204158578055, 0.0003766012126184381, 0.000382721464567396, 0.0003863556126025122, 0.0003900564452360279, 0.0003991680721964324, 0.0004045711658706631, 0.0004119383438251802, 0.0004194568623928559, 0.00042631700323123684, 0.00043329112926644996, 0.00043820198971740323, 0.0004440873112599383, 0.0004466866335545712, 0.00044462044811949123, 0.0004434028638967454, 0.0004384848761462034, 0.0004287544186260268, 0.00041421441507303724, 0.00039953236074217254, 0.0003749657232778608, 0.00035285484733397815, 0.0003420451626754554]
1 [0.13771889958072853, 0.14089506099323967, 0.1239422580414113, 0.104865603706048, 0.08033916733911833, 0.06337965047184636, 0.04720530424186438, 0.04589434189553343, 0.04249139972582845, 0.03479316460448556, 0.027247311182366646, 0.022676297333978815, 0.020691501094216344, 0.017569208264226786, 0.008499029006263797, 0.008221454012872196, 0.007748875827964522, 0.004579064676240762, 0.009711128375023323, 0.004633824159230941, 0.004434473415525565, 0.0029435975136065566, 0.0012525226640525257, 1.4598500775846922e-05, 6.449331673411698e-05, 0.00010627331015338278, 0.00014306063042034627, 0.00017825513753520772, 0.00021410499753799145, 0.00024663944253787667, 0.0002789519406549421, 0.00031001528856465445, 0.00033727204396013583, 0.0003618519352550903, 0.0003844173810645789, 0.00040331021616429055, 0.00042070317637685336, 0.0004350620165002604, 0.00044589861368809765, 0.000455349100133756, 0.0004622906324377191, 0.00046810657151339383, 0.000471769276278963, 0.00047456555079386986, 0.00047554242359640266, 0.00047539312965692176, 0.00047403706657550673, 0.0004723695919437433, 0.0004701315236477419, 0.0004674530157971805, 0.00046406797130971373, 0.00046048497718044484, 0.00045729797143067273, 0.0004533498162684208, 0.0004495389266833084, 0.00044591812966310193, 0.00044210844816109437, 0.0004385932049894669, 0.00043535137663751534, 0.0004320094281935859, 0.0004287475509461523, 0.00042677102412093734, 0.00042348231829963587, 0.00042129813557430294, 0.0004192096472409607, 0.0004169969764965247, 0.0004158521758794135, 0.0004147224348420854, 0.00041370641618275174, 0.0004129031055365284, 0.0004130629897054589, 0.0004125634921871814, 0.00041337335335122537, 0.0004148406999941423, 0.00041562845673691784, 0.00041696753871809495, 0.00042071867224451374, 0.0004219469784336454, 0.0004262484615415281, 0.0004292794792933763, 0.00043379421161631105, 0.0004387959029958759, 0.0004429774217622786, 0.000446918427369034, 0.00045464334094426497, 0.00046071822260086145, 0.0004651189728718809, 0.00047159044086379374, 0.00047544396694581935, 0.00048486998540612337, 0.0004891072258878853, 0.0004917544563340433, 0.0005005944520134074, 0.0004978762175351516, 0.0005051997933191936, 0.0005055807202445424, 0.0005093465519335255, 0.0005082766226507, 0.0005014778620166412, 0.0005007512928735403, 0.0004963830836439728, 0.0004933264040360517, 0.00048091737424939203, 0.00047655853705262115, 0.00045785449187746237, 0.0004499287961539822, 0.000438056421890434, 0.00041962144988101397, 0.00040130845104005314, 0.0003831486828747713, 0.0003633491119712037, 0.0003610705172997471, 0.0003771481473823495, 0.00042195711468386043]
2 [0.13619294921028452, 0.1404924875255898, 0.12492418923929399, 0.1005779472209862, 0.08366823587938968, 0.06733047640662716, 0.05661557382041458, 0.041584562203521774, 0.03689883451654515, 0.030587158760784085, 0.028248664250936424, 0.02170523351295183, 0.019332603167383007, 0.011948989403104269, 0.012146964576980175, 0.014286717224289864, 0.0066152214095760884, 0.01032616498223038, 0.0065818524414491784, 0.004569932509647439, 0.002696016804544202, 0.003085738602984378, 0.0009581295653779716, 0.00024770396203135307, 4.288594220011821e-05, 8.637005150537611e-05, 0.00012924817175904012, 0.0001695314639126849, 0.00020822864887015934, 0.0002465502165311511, 0.0002809785497107017, 0.0003141958128857386, 0.0003430396403497429, 0.00036940835456072995, 0.0003911185654064867, 0.00041055916454064826, 0.0004269883524827877, 0.00044087411662550467, 0.00045219088949727455, 0.0004611339247755558, 0.00046809877231582443, 0.0004729385445144408, 0.0004762716535843024, 0.0004782601067130043, 0.00047875747743440295, 0.00047846291117711583, 0.0004771913449279214, 0.0004750199714184554, 0.0004722134377035353, 0.00046967943025011215, 0.00046605840547929455, 0.0004626439775708185, 0.0004589792673932341, 0.0004548060534176313, 0.0004511578437356617, 0.0004474913914282034, 0.00044353146458603733, 0.0004399774189663393, 0.0004367254668020224, 0.000433309595371785, 0.0004302087912708318, 0.00042814754403301935, 0.0004248233603886692, 0.0004227509159197243, 0.0004206042560109459, 0.00041845239324891155, 0.00041730976078732836, 0.00041615029349331765, 0.00041509456341550237, 0.00041431984913537054, 0.00041453575877821127, 0.00041406564082897514, 0.0004148437873006863, 0.0004163483483090442, 0.0004171840216671661, 0.0004185336478214973, 0.0004222408321611413, 0.00042349027313192273, 0.0004278032484940238, 0.00043081444606092237, 0.0004353540962172163, 0.0004403682264048891, 0.00044457370641466946, 0.000448514260937258, 0.0004562310305747881, 0.0004623069604069605, 0.00046671910490065727, 0.00047322247352500884, 0.0004770676710960164, 0.00048650616744320556, 0.000490771331073224, 0.0004934347205997645, 0.0005022922495484962, 0.0004995855500498318, 0.0005069306057348196, 0.0005073324077182854, 0.000511137240610275, 0.0005100946278643327, 0.000503303983802135, 0.000502607686898891, 0.0004982653204776594, 0.0004952424822879996, 0.00048283631373748873, 0.0004784947213059001, 0.00045976190910404925, 0.00045181772175355436, 0.0004399042434082216, 0.00042137624511887707, 0.0004029435214674356, 0.0003846363646327816, 0.00036467654627235036, 0.0003622942063180141, 0.00037834910487057137, 0.00042324962539225773]
6 [0.15921601260901289, 0.14434716829675084, 0.10376902500385199, 0.11325447756541596, 0.06400498700518531, 0.071462869626467, 0.057283282057097, 0.04892078838523051, 0.03303550613289686, 0.027537922140857193, 0.03263465677135998, 0.012710118057597839, 0.020807068244713966, 0.017818898429084698, 0.012887015840888257, 0.013955534373313266, 0.0022716169620941593, 0.006713083288588117, 0.0029441204947365206, 0.009228167693971754, 0.0037080615917572317, 0.002430276705457291, 0.0029174019323859684, 0.001228094517880213, 7.420449946358863e-05, 0.0001470559293217923, 0.00020953779372105753, 0.0002591273549288501, 0.0003085267181840073, 0.0003412124237902785, 0.00036676116076553365, 0.0003890966235244342, 0.0004096558228049933, 0.00042187983798535673, 0.00042599897403345195, 0.0004320313657206376, 0.0004346538048889985, 0.0004337897596278261, 0.00043345205371263815, 0.00043036189653673464, 0.00042710062464985346, 0.00041931849589424875, 0.00041830632238748256, 0.0004150046889264577, 0.00040782270628069464, 0.0004065492118914435, 0.00040067238107421795, 0.00039845489836088646, 0.0003951274609425677, 0.00039210198345732486, 0.00039041410317064884, 0.00038712359240414263, 0.00038562306945331504, 0.0003843789965514992, 0.000382482258529401, 0.00038165372347095705, 0.00038009096564702017, 0.0003795771302999065, 0.0003785972119374754, 0.0003780225849907322, 0.0003776804071379319, 0.00037692818513182427, 0.0003768828097965042, 0.00037622188232421666, 0.00037615866947709504, 0.0003759794077669588, 0.00037551113361524065, 0.0003755557106985907, 0.0003752677618697589, 0.00037496816059420345, 0.0003752135078147897, 0.00037489482987993736, 0.00037467667246896046, 0.000374523825886577, 0.0003749487631369851, 0.00037391653609233477, 0.0003745759025008268, 0.00037432204775252417, 0.00037350729206560827, 0.0003740313769534002, 0.00037386623635256517, 0.00037349021111712387, 0.0003736294813677373, 0.0003736829611016187, 0.00037381481231520375, 0.000373406789287451, 0.0003748605776969152, 0.0003751821041985487, 0.0003759556822795063, 0.00037769218726309745, 0.0003794607487728075, 0.0003828829785422447, 0.00038433676009188775, 0.00039046848538464853, 0.000394133599175637, 0.00039796298830891135, 0.000406962959409073, 0.0004124462974537055, 0.0004198430322035099, 0.00042739419254183734, 0.0004342497925128403, 0.00044127507764959393, 0.00044622540729526405, 0.00045207889786930957, 0.00045464580794607847, 0.00045274485054803585, 0.00045143890571679423, 0.00044649353611926683, 0.00043690379411373754, 0.0004225694340447567, 0.00040805644733544235, 0.00038417817586449744, 0.0003626148933357268, 0.0003519091296633457]
4 [0.14287266997109538, 0.14231357154421354, 0.12364123287912156, 0.10042460483179094, 0.07970903873847851, 0.06653914893769479, 0.054645839132943866, 0.044230491359823695, 0.037301513369769064, 0.03173790947818468, 0.025795388088089406, 0.019055677358777265, 0.023824331612439468, 0.01511901920547744, 0.010938960095041951, 0.007592547354803102, 0.004397774876751782, 0.009250782339108258, 0.011058350801179177, 0.007548284177563041, 0.0008255013996513637, 0.001244725253570032, 0.0013798488065159499, 3.020369081238763e-05, 7.417382461426971e-05, 0.00011293188844718128, 0.0001504369546684658, 0.00018716110968968115, 0.00022366831466595434, 0.00025847805767681756, 0.00029112866286740494, 0.00032119087053556687, 0.0003491497090741594, 0.00037405306225060187, 0.00039528424782978407, 0.00041310399959932655, 0.000429094070608986, 0.000442431576053272, 0.0004532028098989318, 0.0004621213489973807, 0.00046855108918947015, 0.00047325056436456727, 0.000476152806795714, 0.00047770086337987585, 0.00047843718145357326, 0.00047776374145406804, 0.000476474529437569, 0.00047413480020904266, 0.0004715975066170412, 0.00046863164982974433, 0.000465338732466937, 0.0004615517361350566, 0.0004578882200360576, 0.0004540703483855218, 0.0004504027048262296, 0.0004465954761900173, 0.00044278155474073095, 0.00043933080237219357, 0.0004359571235852142, 0.0004328756132138115, 0.0004299552521921588, 0.0004271233321461425, 0.00042449271135809705, 0.00042229968015462506, 0.0004202850025963236, 0.00041867084386739653, 0.0004166259100878824, 0.00041578871786476627, 0.00041497022464070195, 0.0004140768997842069, 0.0004145966243287737, 0.00041413288361222944, 0.00041462936508071936, 0.00041569643442582166, 0.000417048417726802, 0.0004197106936335659, 0.0004207778859262941, 0.000424305810574447, 0.00042752640853094737, 0.0004308771005727411, 0.00043631788452919786, 0.0004394887655296753, 0.00044509656995931983, 0.00044966905718082445, 0.0004557806334186316, 0.0004627058879920282, 0.00046646712742989767, 0.0004729117972402723, 0.00047996977578069415, 0.00048556868476886636, 0.000489622651251288, 0.0004955759040569497, 0.0004985480865031785, 0.000502912019074647, 0.0005044449813588782, 0.0005088175311018653, 0.0005104648849004248, 0.0005081632199714221, 0.0005041234137570165, 0.0005020745632761803, 0.000497601033801641, 0.0004923489610714503, 0.00048519068038213175, 0.0004734283894275713, 0.000463983536218128, 0.0004504168589534017, 0.00043736346859876414, 0.0004221263724094704, 0.00040152095612912064, 0.0003840441201680601, 0.0003643988032190241, 0.0003637187111002858, 0.00037809390017029033, 0.0004249149040173406]
5 [0.14302752551173634, 0.14215403315711111, 0.12232489782787838, 0.10028957749038499, 0.080585335643223, 0.06316347735668895, 0.05616116538765824, 0.047620179556502155, 0.03894433669729839, 0.03442874517795425, 0.02273824061369632, 0.022289515308149307, 0.01564366593321066, 0.011491428012812816, 0.013992960641751774, 0.012747296802797079, 0.006543426383290856, 0.006277875720759491, 0.004410312873437666, 0.004640170229129486, 0.008419589740066744, 0.0032493015153412276, 0.0006831683736369552, 1.6739349300049927e-05, 6.786644101199505e-05, 0.00010836259481919388, 0.0001434057362961101, 0.00017771196553443094, 0.00021213861784347794, 0.00024554554281391253, 0.00027729270945106544, 0.00030702638844592474, 0.0003339185649268747, 0.00035835870381951957, 0.0003802920617237293, 0.00039964526497952824, 0.00041599116775281153, 0.00042961700061127706, 0.00044086253004658874, 0.0004501375406559711, 0.00045809296146624267, 0.00046371077363897335, 0.0004680297300654011, 0.00047097675179717574, 0.00047182528361313454, 0.0004721398520881702, 0.0004716044088918284, 0.0004702651426906099, 0.0004683907374586268, 0.00046578795953721884, 0.00046273789596316804, 0.0004596748973225662, 0.0004564063720437334, 0.000452792596071358, 0.0004490406185882211, 0.00044538897730509656, 0.00044193392770656135, 0.00043849838163269854, 0.00043511631270384913, 0.00043185149155214986, 0.0004289058112048735, 0.0004262850787518093, 0.00042360096922967313, 0.00042122946626574527, 0.0004190619003057586, 0.0004174916538136447, 0.0004154280415741112, 0.00041452488922300886, 0.00041379165397468847, 0.0004128236234152318, 0.0004132847030727598, 0.0004128303445574157, 0.0004132912783231003, 0.00041432570537405794, 0.0004156709618044427, 0.00041834549185646407, 0.00041947521606820455, 0.00042302607964406956, 0.00042622365472469833, 0.00042957482299575624, 0.0004349837863701693, 0.0004381699965641356, 0.0004437844594893146, 0.0004483797452035535, 0.0004544928524638255, 0.0004613712320862255, 0.0004651467602575342, 0.00047156292438937567, 0.0004785784211647271, 0.00048416500149030646, 0.0004882020477650581, 0.0004940778418606189, 0.0004970133095948734, 0.0005012966834084147, 0.0005027755036595418, 0.0005070171956839435, 0.0005085606356238642, 0.0005061915480013305, 0.0005020917213334113, 0.00049990505878552, 0.0004953028493307127, 0.0004899002152519661, 0.00048260890114884227, 0.00047077256191816884, 0.00046118275381902844, 0.0004475361424583875, 0.00043438827203515283, 0.00041909919839540317, 0.0003985359816757604, 0.0003810253526609665, 0.0003613392010460583, 0.0003602335781423806, 0.0003739320330902584, 0.00041958852730778525]

===========================================================================================
python3 delay_tomography.py 3 5 uniform 0.5 500000  failed with stdout:
b'i_max is 30\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 geometric 0.5 500000  failed with stdout:
b'i_max is 124\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 uniform 0.5 500000  failed with stdout:
b'i_max is 40\n0\n0.000252\n0.000282\n0.000534\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 5 geometric 0.5 1000000  succeeded with stdout:
i_max is 88
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.16641316063872225, 0.13888852391241652, 0.11322612611823726, 0.096350358254039, 0.07773709043239647, 0.06741113028666706, 0.05634282192508743, 0.04482700024964684, 0.03780036235477835, 0.03151152609854256, 0.027276594110239034, 0.021800259949037476, 0.017317051052030557, 0.015138184362731177, 0.012398948609846534, 0.009799625419347494, 0.008022426288569804, 0.007844338037378284, 0.0057329661318243205, 0.0038316227178088187, 0.003913209664725825, 0.0027146930684698208, 0.0025475076188957147, 0.0018471430523707107, 0.0013975073284246773, 0.0012673130522984893, 0.0005438439273431076, 0.0010025719245883612, 0.0005051387050523058, 0.0005232220789664401, 0.0004872030266185067, 0.0004600999544953616, 0.00048355310490581235, 0.0004439625110773624, 0.00045119626753920575, 0.0004091965483071375, 0.0004354626211261423, 0.0004111426505042774, 0.0004164165761375658, 0.0004193063152132129, 0.0004079856063699443, 0.0004045556690807692, 0.0003922746261597434, 0.000418515527246269, 0.0004006623350156181, 0.0003955503082508177, 0.000399953266068835, 0.0003908586096943723, 0.000406912871533914, 0.00039360010091105916, 0.0003952525231882526, 0.0004001009600252618, 0.00039153533933020975, 0.0003951645739306934, 0.00039527752161333036, 0.00039239022613669363, 0.0003976290607935652, 0.00039245735632714067, 0.0003927541850634836, 0.0003974089590754303, 0.00039179032515580304, 0.0003954771077415887, 0.0003922798317199022, 0.0003932714514282874, 0.0003960362642640122, 0.0003939041028270995, 0.0003937644014917923, 0.00039412244941722317, 0.00039361289352013424, 0.0003939553411424642, 0.00039305110869814483, 0.0003941240067296634, 0.00039334244575864167, 0.0003941384624058809, 0.0003933671060716117, 0.0003936538382071763, 0.0003941510587183181, 0.0003938022722539004, 0.00039335363996755935, 0.00039368181462215717, 0.00039366447494707576, 0.0003936694042459773, 0.0003936816898269189, 0.0003936691611443335, 0.00039366955171471734, 0.00039367565330282743, 0.0003936740559222363, 0.00039413488939478696, 0.00039334981926196646]
1 [0.16291422254625715, 0.1388236388984599, 0.11584092219577471, 0.09244250456730281, 0.0831558933357601, 0.06554881404052756, 0.053506300387669944, 0.04582048559464467, 0.040171028285720126, 0.03231129033108042, 0.024412681015137272, 0.02179278688021554, 0.01680925886865245, 0.016277684189657134, 0.014077549382828012, 0.007821809771386353, 0.00781900949725118, 0.009712890308569571, 0.005053708942951635, 0.0038222443111690296, 0.004188612995518226, 0.0023378708425783956, 0.002075076810543977, 0.0024524303498141553, 0.0014929900947150791, 0.00021611998483039683, 0.00013418811881615118, 0.0002242280116169397, 0.00029303875098536886, 0.00034709538249277184, 0.00039037418724788346, 0.00042542859772879446, 0.0004509950202480225, 0.0004699162254734913, 0.00048357281426048525, 0.0004930582690772278, 0.0004984657224117893, 0.0005005366713200097, 0.0005004182261660765, 0.0004989500788099173, 0.0004960219421905473, 0.0004922776000282693, 0.0004887138504488524, 0.00048490125542627257, 0.000480479851641407, 0.00047621458623518483, 0.0004724297187177244, 0.00046892240125895687, 0.0004656250415964664, 0.00046265659742785196, 0.00046013929778330277, 0.0004576168792228528, 0.00045556777406528765, 0.0004538971261429437, 0.0004521849254366823, 0.00045085851261492853, 0.00044959357621801523, 0.00044870274040437414, 0.00044807445719343537, 0.0004475338794308212, 0.00044747060318598396, 0.00044736576872210894, 0.0004480621996720974, 0.00044883990935490293, 0.000450373882337757, 0.0004524508193975214, 0.00045502151852544687, 0.0004584595009325041, 0.0004624810763743866, 0.00046771667340559677, 0.0004732828181683946, 0.00047932186041946886, 0.00048626271410740266, 0.0004933996999806763, 0.0005005994794402921, 0.0005073982599408346, 0.0005138266895457927, 0.0005188840838123104, 0.0005219650266126303, 0.0005232218080856318, 0.0005215608880026843, 0.0005171353946575295, 0.0005083557409768262, 0.0004954286606588317, 0.0004789828065757817, 0.0004566936725202278, 0.0004309969339701411, 0.0003995128697976187, 0.0003822654122196575]
2 [0.16219421974634735, 0.13864564874783003, 0.11691822265078078, 0.09381040171639149, 0.08073329401900929, 0.06802843565588587, 0.05253844954340087, 0.04734518461478789, 0.040399140839350464, 0.028822279070751352, 0.025660548381890164, 0.02196432884633281, 0.0189772547226197, 0.015534498375069438, 0.010753790495543952, 0.008908069209152035, 0.011012206895311724, 0.005810280468745936, 0.006367505387691262, 0.004895910786415227, 0.0014394172145497652, 0.0034092989635840765, 0.003048344978845905, 0.002012134240728125, 0.0014833641418700476, 8.313050702860028e-05, 0.00017017283095640195, 0.0002401655277145236, 0.00030180127490401435, 0.00035110349136517984, 0.0003935573366187593, 0.00042723987127179147, 0.0004517830868835417, 0.0004705524208567598, 0.0004841092496869898, 0.0004935132986527222, 0.0004985667110599576, 0.0005004718787582736, 0.0005007870976983608, 0.0004991274360067545, 0.0004960427397594109, 0.0004925441780306847, 0.0004892240911120642, 0.00048513507107004973, 0.00048058385589607654, 0.0004767987098857424, 0.0004728943388309439, 0.0004694843164343455, 0.00046623963406421315, 0.0004633350092187242, 0.00046079184311988337, 0.00045828673745206927, 0.00045642073237330254, 0.0004545848473278324, 0.0004530338533668339, 0.0004516548805543993, 0.0004503960001335622, 0.00044955406109282466, 0.0004488383762988866, 0.0004483830697084948, 0.0004481604289729709, 0.00044815147794269555, 0.0004487863386890395, 0.0004495484346386776, 0.0004510428568196574, 0.00045306715909993416, 0.00045561134424156415, 0.00045903558489342124, 0.000463067690172369, 0.0004681977254204421, 0.0004737682589730899, 0.0004797895953149513, 0.0004866869092407118, 0.0004938379505093058, 0.0005009908252945504, 0.0005077911894462296, 0.0005142103467368795, 0.0005192369731361372, 0.0005223316336075672, 0.0005235789733396667, 0.0005219221850326906, 0.0005175098826530763, 0.000508721874000799, 0.0004958150392120868, 0.0004794169736280508, 0.0004571467096737869, 0.00043155812721057494, 0.0004002335157050929, 0.0003834190541327861]

===========================================================================================
python3 delay_tomography.py 2 5 uniform 0.5 1000000  succeeded with stdout:
i_max is 20
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08977950791382662, 0.09179691242430085, 0.08689814655441791, 0.09526501287381797, 0.08656215014382573, 0.08872159081238908, 0.09499547604601422, 0.08405953218311363, 0.0896407424254421, 0.09060339019790078, 0.09174139572550123, 0.0006939803518489164, 0.0009455400772510151, 0.0012195163650984397, 0.0003970985450742925, 0.0015717330731169889, 0.0009282444098872387, 0.0008213822605546183, 0.0010395456014234534, 0.0009397847766495242, 0.0009050639032597557]
1 [0.08856611602298978, 0.08899845466975334, 0.09738415466241171, 0.08399929544294532, 0.09458816832095979, 0.09237397609662397, 0.08821487359769672, 0.09263071831975445, 0.09226413249388724, 0.08894226205979397, 0.08456261127084727, 0.00635321924672484, 0.0008202943092472683, -5.691505223539081e-05, -7.793788769296418e-06, 3.501903517307216e-05, 4.504740292995217e-05, 4.131946805868993e-05, 4.700041578286248e-05, 5.3735279646259735e-05, 5.241726697704e-05]
2 [0.0907308593545559, 0.08900401719867765, 0.09466218210561964, 0.08546767747621135, 0.09481453635459891, 0.08983494257618954, 0.08768853085199041, 0.09737513885836235, 0.08812095007687182, 0.09467220593780096, 0.08355213771897388, 5.2209558895715465e-06, 0.0022230452348911836, -0.00022669417965385673, 0.001963044248592256, -3.434266798002253e-05, 8.041426901483659e-06, 1.0363873467393082e-05, 2.039741660533839e-05, 1.685142790532943e-05, 2.2621774067337513e-05]

===========================================================================================
python3 delay_tomography.py 3 5 geometric 0.5 1000000  succeeded with stdout:
i_max is 113
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.1723098979420912, 0.13668602049434614, 0.11423268538521053, 0.09006295699829467, 0.08589546271538967, 0.0666912515140751, 0.0505752869978663, 0.04041066834967128, 0.04719108472857992, 0.02531177199396592, 0.0253743289070711, 0.025661099802559855, 0.01221455395525131, 0.01864937972483511, 0.009980899027971727, 0.012494203036511988, 0.006746504910159281, 0.0028340521654836876, 0.008273811188062545, 0.006163120625370897, 0.0004222130559666856, 0.005786957259040347, 0.0003407121969256811, 0.003330621003555893, 0.0004326898735828055, 0.002440615601851633, 0.0003354324025962945, 0.0009397170995417823, 0.00033110205254190377, 0.0009620409103918983, 0.000331296304851409, 0.00042226796393423114, 0.000382164319605096, 0.0003211881419804257, 0.0003870704146378914, 0.00037292652407133514, 0.00028372257575162696, 0.00038384692732887414, 0.0003715724353924808, 0.0002911150754219583, 0.0003259337295324217, 0.00034067439748583354, 0.00033672008994112225, 0.00024877933776573625, 0.00041067506998465614, 0.0002725398489359446, 0.00030724779836686564, 0.0003529364266592723, 0.00028738005785565907, 0.0003121932167151326, 0.0003351845363322424, 0.00029604251561079017, 0.0003316338255067266, 0.00027913128788032663, 0.00034350368316894025, 0.00029844078885234344, 0.0003063435851222556, 0.00032773403655891366, 0.00030790013192226034, 0.0003045929293681655, 0.0003215854832459808, 0.00030189311098183745, 0.00031792546268563947, 0.000305194575534731, 0.00032239858728793844, 0.0003027368325673285, 0.00031983677243033616, 0.00030446616253719625, 0.00031563161779810773, 0.0003133049038502412, 0.00030685784208623625, 0.0003157075571682919, 0.00030734878581658675, 0.0003142219070372583, 0.0003119575179913348, 0.00031278358100830946, 0.0003082802661075854, 0.0003158026636167538, 0.00030745717300068227, 0.00031335146295466995, 0.00031107275055393977, 0.00031203473444260503, 0.00031125469530921186, 0.00031154189693334566, 0.0003117855988836589, 0.00031142135769246927, 0.00031149049106506805, 0.00031175016723309257, 0.0003113942786968694, 0.00031164751873143874, 0.00031155194109664346, 0.000311551771896083, 0.0003115679441403797, 0.0003115665514439621, 0.0003115496694805711, 0.00031157620709344703, 0.0003115607978729664, 0.00031155539810075465, 0.0003115715838948504, 0.00031155946761105094, 0.0003115584852398021, 0.00031157193947241367, 0.00031155267714763537, 0.0003115737920918099, 0.00031155062277794896, 0.00031157470684999933, 0.00031155446066378253, 0.00031156655892692676, 0.00031156230187870295, 0.0003115625392837837, 0.0003115629114814495, 0.000311562849778813, 0.0003115632581501116, 0.00031156225309423647]
3 [0.15958968195807866, 0.13818921078074564, 0.11920821687295488, 0.09620339753301668, 0.07293825218490066, 0.06494910924845793, 0.06246565256246058, 0.0418465779706819, 0.03568541388421266, 0.039386593444994816, 0.0218833320532055, 0.020528910247777178, 0.01978820900900307, 0.010276164206861529, 0.017459254275814556, 0.015370868186649771, -1.418223944370073e-05, 0.009486822396629756, 0.00415991678166695, -6.163160014653195e-06, 0.012990756504812396, 1.2204170800879174e-05, 1.4996089814804816e-05, 0.0026180076039205007, 8.604507510758639e-05, 0.00014792249976986862, 0.0002128767292634208, 0.00026187759527723206, 0.00030823396669376897, 0.00034952013801332524, 0.0003740330988705371, 0.00039578533360786253, 0.0004172045398893095, 0.00042321092445215885, 0.0004331193144631798, 0.0004367454419475695, 0.00043553669689562057, 0.00043785432430248786, 0.0004324076470970725, 0.00043211118605102967, 0.0004272376295013801, 0.0004207692061849804, 0.0004171597682924827, 0.00041459974694477424, 0.0004080591255714481, 0.0004052645102808146, 0.00040110612737381964, 0.00039726530563802167, 0.0003942772964200513, 0.00039192540928030247, 0.0003890452670492126, 0.00038721157110324764, 0.0003848865540213687, 0.0003836296507498841, 0.0003818342310271922, 0.0003808938297797716, 0.00037973954993227325, 0.00037878878196608414, 0.0003780585474935917, 0.00037736218732518315, 0.00037699782215220234, 0.00037639353176534507, 0.0003761863732448421, 0.00037593955650622754, 0.00037526946502458645, 0.00037562582646699194, 0.0003750311311076179, 0.00037484436846569236, 0.00037517245999898563, 0.00037446002041467604, 0.0003747830655469362, 0.0003745667466946458, 0.00037438232353012026, 0.0003743098584977345, 0.00037430992982344054, 0.00037415378459295783, 0.0003738458922876504, 0.0003740936802317667, 0.00037347152442978964, 0.0003737084125462296, 0.00037349535351690005, 0.0003732477746888192, 0.0003736369054886554, 0.00037294229323055683, 0.00037368307791783845, 0.000373685990821412, 0.0003736976046538723, 0.00037550252286232136, 0.0003752968138783584, 0.00037759299001025666, 0.0003789768614066943, 0.00038221080758439304, 0.000384608687255232, 0.0003892650974504002, 0.00039385702744405035, 0.0003981784599635295, 0.00040565621185655764, 0.00041193802000990106, 0.0004189818413737669, 0.0004271493120264641, 0.00043232821551327465, 0.0004422611824004888, 0.000445263866224432, 0.00045094269172157625, 0.0004552943355793865, 0.0004523498986350453, 0.00045245272043487045, 0.0004467663757227782, 0.0004377225768135204, 0.0004230678017372484, 0.00040845326523481493, 0.0003862005362401132, 0.0003629310599972713, 0.0003537811301215398]
1 [0.14171507941897465, 0.1412269173701429, 0.12425532691510856, 0.10202348150205062, 0.08103388326739246, 0.0630959549375619, 0.05055951888927228, 0.04470538517211316, 0.041620118912895424, 0.03151336375242173, 0.026013821601261047, 0.022282935600717303, 0.02208767573075766, 0.015020369696571025, 0.009275520469233977, 0.008606301284469063, 0.009516417316297437, 0.005767367976350786, 0.009134736100038753, 0.004593475131350649, 0.003487606831100255, 0.0027842937166936343, 0.001314511102867522, 1.5640034837120208e-05, 6.50123105934726e-05, 0.00010654774494838174, 0.00014414489040744073, 0.00018025509578749283, 0.00021551554083280267, 0.0002491354759764908, 0.0002812290071713357, 0.00031214709507655457, 0.00033954686262030204, 0.00036415569037625525, 0.00038663024442574137, 0.0004060174383164541, 0.00042289678631463214, 0.00043727690229667087, 0.00044856692295437635, 0.0004580157665202903, 0.00046468352215580505, 0.0004700085255481982, 0.00047361604727388907, 0.00047618015579572906, 0.0004769360781243216, 0.00047659820062030884, 0.00047528244834449076, 0.0004732877355626942, 0.0004709771323879635, 0.0004682785855907313, 0.0004650176950011486, 0.0004613641253067712, 0.0004578349543443829, 0.00045396103776772174, 0.00045017839857340537, 0.0004464443045765639, 0.0004429120382717889, 0.0004392228656038638, 0.00043592709438680964, 0.00043260536214863483, 0.00042976022415613013, 0.0004271782631087037, 0.000424223584769196, 0.0004219702739704559, 0.00041985536875251454, 0.0004178690531547783, 0.0004166756158218577, 0.0004153816880259542, 0.00041441026482374864, 0.00041377328989460163, 0.0004138110551073754, 0.00041357936500627165, 0.00041429090940086645, 0.0004155153483636596, 0.0004169378342599077, 0.0004182454036830034, 0.00042127921951943344, 0.0004234156228195456, 0.0004270453502829716, 0.0004304211952916897, 0.00043431828843185246, 0.00044058045153192593, 0.00044395412455522436, 0.00044908004946998733, 0.00045568524220753566, 0.0004611002609032322, 0.0004659001055818927, 0.0004731386609028903, 0.0004783248364147886, 0.00048461412443222425, 0.000489441852494193, 0.0004957536892329135, 0.00049934679703397, 0.000499874648833033, 0.0005069940118005581, 0.0005074416419681965, 0.0005090047682545536, 0.000508420173231289, 0.0005031963479751387, 0.0005020481879335254, 0.0004983920406241456, 0.0004920969412498162, 0.00048237161281089425, 0.0004739943713316712, 0.00046152998200100223, 0.00045018362197144114, 0.00043809987996901026, 0.0004186306503776922, 0.00040203413393106877, 0.0003826626427118403, 0.0003658015798319079, 0.00035919104551178664, 0.00037734121920470355, 0.0004231736937213665]
2 [0.14111017426250577, 0.14145059348193037, 0.1239318677857506, 0.10048707043643378, 0.08127806660180686, 0.06775171502779549, 0.0538322612874387, 0.0430473323533077, 0.03841331258616171, 0.03099847656934032, 0.02458715009851129, 0.02054623627607067, 0.01829582586425543, 0.017485812356775623, 0.013510601967577359, 0.010045639118934049, 0.006774335611216527, 0.009420205620355056, 0.007617826098202541, 0.005290039050818785, 0.0033685605674674476, 0.0017856279933865255, 0.00025158222390773207, 3.942257895901123e-05, 8.447991706170089e-05, 0.00012428870700129042, 0.00016224663213581535, 0.00019849850835076504, 0.000234090293755702, 0.00026880987961455194, 0.0003010410062399303, 0.0003305125612907177, 0.00035696272896024997, 0.00038028309630326964, 0.00040053242331593015, 0.00041817351046551495, 0.00043309548787803174, 0.0004455155201815217, 0.00045557909063588314, 0.000464100862437365, 0.000470055210509529, 0.000474190272449103, 0.00047684596062761537, 0.0004782876967604501, 0.00047862382425342074, 0.0004782712100704811, 0.0004767473100586981, 0.00047445606076365566, 0.0004718134681863751, 0.000468927541692731, 0.0004655638045050467, 0.0004621978761406913, 0.0004584395264253047, 0.00045453354526648124, 0.0004508356736236145, 0.0004470343181897428, 0.000443396941471476, 0.00043978691181953584, 0.0004365668999912457, 0.00043327629555871196, 0.00043042620190750496, 0.000427854411042413, 0.0004249021635205188, 0.0004227026062580607, 0.0004205847319068773, 0.00041859936648679666, 0.0004174015814795086, 0.0004161339352258547, 0.00041515593721098054, 0.0004145320151318816, 0.0004146185652819807, 0.0004143447475553588, 0.00041502829495815616, 0.00041625454131482463, 0.0004177038228202855, 0.0004190088440369514, 0.0004220385822687212, 0.000424153632108483, 0.0004277698643943566, 0.0004311316472032146, 0.00043501852052677556, 0.0004413037844324688, 0.0004446604636521338, 0.00044977615143858377, 0.0004563843234517121, 0.000461795412203308, 0.00046658492552036074, 0.0004738512806430091, 0.00047902029017966765, 0.0004853193405038688, 0.0004901620964640913, 0.0004964994872434855, 0.0005000972494957723, 0.000500618788572085, 0.000507814057654055, 0.0005082814610438031, 0.0005099005361253104, 0.0005093723597810408, 0.0005041783310865823, 0.0005031320442112593, 0.0004995758523012657, 0.0004933754654639515, 0.0004837343867074096, 0.00047548533936143364, 0.00046312616951233436, 0.0004519080952592463, 0.00043995138808305777, 0.0004205344711171219, 0.00040403902434970896, 0.0003847577095867507, 0.0003680481948700879, 0.00036173064792003457, 0.00038043025479888654, 0.0004270192073647938]
6 [0.15580561404621124, 0.14165890539863207, 0.11230611963168487, 0.10058609700156845, 0.07299485945804537, 0.06893543346990065, 0.06428101530615662, 0.03985500715971291, 0.03512978738984968, 0.03796440470261141, 0.017804919142071413, 0.023272613106163575, 0.017913369795998956, 0.01934109795556549, 0.010412654318173082, 0.012277892267186754, 0.0038965544993585424, 0.007641649790910142, 0.006457349486333167, 0.007380536942959415, 0.001545031311393592, 0.004441501446639646, -4.574348563140164e-06, 0.0034611281864544707, 7.492029497932144e-05, 0.00013940878515620106, 0.00020257132041530962, 0.00024589090462576375, 0.0002955122464506105, 0.0003279449679735434, 0.00035936951543607675, 0.00037736356490872307, 0.000400732811999484, 0.000412891063620132, 0.00041806281253597565, 0.00042976923615936315, 0.0004276879517305105, 0.0004309521650685044, 0.00042897769546447543, 0.00042706108761608665, 0.00042475148793947573, 0.0004179902829549725, 0.00041577504647283156, 0.00041290601268225736, 0.00040590325212821055, 0.0004050049463216871, 0.0003988957802614488, 0.0003964317986411245, 0.00039306851975845307, 0.0003909199752013137, 0.0003878013635350037, 0.00038578019789420705, 0.00038402456610776874, 0.0003821201527595457, 0.00038077567924475536, 0.0003798053732612589, 0.00037826318841147793, 0.00037761328884686283, 0.00037662083376255074, 0.0003762440401515339, 0.0003753187181250178, 0.00037509097658451737, 0.00037484321718001196, 0.00037418372454029727, 0.00037407264842380606, 0.0003738414080018147, 0.00037356642253406414, 0.00037319198202043745, 0.0003734485918150007, 0.00037290954560217584, 0.0003728973837493901, 0.0003729804885789479, 0.00037256428210152555, 0.0003725947056486324, 0.0003725307997873579, 0.0003723159243426945, 0.000372187134629281, 0.0003721810498712523, 0.00037180441024564165, 0.000371862754238778, 0.0003716924620298434, 0.00037152252697960947, 0.0003717943037214347, 0.0003712269480916189, 0.00037190073235992497, 0.00037188894180619717, 0.0003719849861308548, 0.0003736855460124644, 0.00037361108697504884, 0.00037579608698740173, 0.00037725944934131547, 0.0003804437847698751, 0.0003828696511900422, 0.000387527137159932, 0.0003920886727758489, 0.00039648866516787506, 0.00040384649798835733, 0.00041018414699402, 0.0004172184023887043, 0.00042529674319902416, 0.00043054067423943797, 0.000440279925327599, 0.00044333955783322786, 0.00044886487487398114, 0.00045307375595601433, 0.00045013342572389285, 0.00044997542648842967, 0.00044420402810141547, 0.00043504996075322954, 0.0004203377363719841, 0.00040554396879184326, 0.00038329144343140587, 0.00035993815346654055, 0.0003501793313458447]
4 [0.14467244691029613, 0.1433375176151807, 0.12324076731523882, 0.10001967086960187, 0.08078667417951849, 0.06443890467973802, 0.05274105949050434, 0.04377492654276553, 0.03895293826545255, 0.030571150113673295, 0.025390720237759682, 0.021536051102774855, 0.020844402154722243, 0.01528372116469585, 0.0113656389546729, 0.006831632923469853, 0.007752486724967493, 0.009685184397785984, 0.009897363691317333, 0.006048751612958222, 0.0018403853500776187, 0.001522574486132189, 0.0007227826877992448, 3.14915761503981e-05, 7.811747807454642e-05, 0.00011863313049544316, 0.00015694437984542712, 0.00019459139017482242, 0.00023124910161408961, 0.0002653923680360806, 0.00029765427561403686, 0.0003276448572529666, 0.0003550752292533604, 0.00037924292058123425, 0.00040004088188130095, 0.00041807832406872726, 0.00043328530961464246, 0.0004459897750725013, 0.0004564186951418211, 0.00046480118646760165, 0.00047116319762420436, 0.00047551022724740455, 0.0004784337955757162, 0.00047987546272923595, 0.00048037454334911564, 0.0004796223558637775, 0.0004782243925244034, 0.00047590498284462717, 0.0004732409017391388, 0.00047018453790852237, 0.00046670389771224493, 0.00046306662624637197, 0.0004592732575597339, 0.00045548386045134127, 0.0004516921515413901, 0.00044789589266882744, 0.0004442617166831297, 0.000440652216640994, 0.0004374439122945166, 0.0004340511900408869, 0.00043119480245075903, 0.0004285315899365913, 0.0004256228200543149, 0.000423598934572235, 0.0004214796713698434, 0.0004196665094715333, 0.000417779397757865, 0.0004171346627219023, 0.00041611265885324703, 0.0004151770027579814, 0.00041558605002176875, 0.00041542241043840845, 0.0004159246623638053, 0.0004169203547125747, 0.0004182141420842427, 0.0004205966684041383, 0.0004224794767897806, 0.00042557803101757536, 0.0004289315241265195, 0.00043175055409278186, 0.0004374232760421635, 0.0004408490406514909, 0.00044626128589797385, 0.00045161369147769375, 0.0004560511301854568, 0.00046449585569551086, 0.0004679245572418337, 0.00047541926308327607, 0.00047959197018852503, 0.00048695330170805897, 0.0004909384447407525, 0.0004980164000870173, 0.0004997622295850102, 0.0005044995283800279, 0.0005057643923138609, 0.0005093949604839053, 0.0005109464685588623, 0.0005097733747236944, 0.0005063180482553617, 0.0005038220110966957, 0.0004977674836652872, 0.0004942766090239034, 0.00048443275719696076, 0.00047719926802747113, 0.0004634502396958417, 0.0004528749318614613, 0.0004400602483901479, 0.00042012985163812963, 0.00040335084220109187, 0.00038520945801744577, 0.0003681430116850191, 0.00036313506603686857, 0.00037888786748611946, 0.00042588466153522636]
5 [0.14447265884135496, 0.1419354241011656, 0.12270289988626756, 0.10110701844086176, 0.0796670119384861, 0.06359789761283405, 0.05457431879583832, 0.047393606680195, 0.038028195049907884, 0.03207531354387887, 0.02344084831322553, 0.02330611271475522, 0.018237357315806065, 0.014302161025480755, 0.01105305478214877, 0.009911468793110997, 0.007689093895627648, 0.007432847471259521, 0.005928631035213696, 0.004517480451004434, 0.00629274527907842, 0.0032730873575818435, 0.0007870193600493971, 1.786222096746948e-05, 6.772107361309923e-05, 0.00010841451146444353, 0.0001444910618070752, 0.0001794079695519896, 0.000214109744904944, 0.0002473435709518512, 0.00027975117122620613, 0.000309746472444139, 0.0003369275582858517, 0.000361605147979395, 0.0003834946395058816, 0.00040286419571447984, 0.0004189583373743065, 0.0004325692126392232, 0.0004436525592523998, 0.0004531711345190672, 0.0004609951936204197, 0.00046649169235186467, 0.0004705277960344966, 0.0004732294240442609, 0.0004740741445522625, 0.0004744039402984916, 0.00047368662836406734, 0.00047197958542085136, 0.0004698531524329595, 0.00046718975072320107, 0.0004639915599447163, 0.0004607294053602261, 0.0004572464345342494, 0.00045361098788632484, 0.0004498010051583465, 0.0004461146232299728, 0.000442565581524766, 0.00043901881635343863, 0.00043578441335874116, 0.0004323078695690331, 0.0004294724604517206, 0.00042687507011878253, 0.0004239121495792628, 0.0004217474534668109, 0.0004195742391616512, 0.00041778708383259785, 0.00041585167043639847, 0.0004151496475287213, 0.00041416632603929457, 0.00041322110091523143, 0.000413554842527909, 0.00041339668791144483, 0.00041390828568904777, 0.0004148735857836112, 0.0004161553611479967, 0.0004185643849634433, 0.00042046267116793425, 0.0004235698118903378, 0.00042691773820462467, 0.0004297383149773368, 0.00043540955592618117, 0.00043882537462756004, 0.00044425073977207095, 0.0004496103308239035, 0.00045407097003442626, 0.0004624766076128524, 0.00046591251921562733, 0.0004733854676957387, 0.00047755262219545186, 0.0004848812122750385, 0.0004888504829153864, 0.0004958744674267676, 0.0004975942701570835, 0.00050226457935757, 0.0005034730138915502, 0.000507018422062836, 0.0005084879319898574, 0.0005072359937265854, 0.0005037021385949136, 0.0005010979319937942, 0.0004949429579396795, 0.0004913099448348459, 0.00048136430277751765, 0.0004739947399078851, 0.00046015428922603423, 0.00044945297818507903, 0.0004365368906248133, 0.00041656762801582366, 0.0003997220387537637, 0.00038152555659583834, 0.00036438365821236013, 0.00035918575981190093, 0.0003745861491161745, 0.0004210243827267774]

===========================================================================================
python3 delay_tomography.py 3 5 uniform 0.5 1000000  failed with stdout:
b'i_max is 30\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 geometric 0.5 1000000  failed with stdout:
b'i_max is 140\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 5 uniform 0.5 1000000  failed with stdout:
b'i_max is 40\n0\n0.000262\n0.000287\n0.000549\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 6 geometric 0.5 10000  succeeded with stdout:
i_max is 74
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.15742554835934136, 0.12137010089952702, 0.0725248586334723, 0.11817820187640744, 0.04662170345662698, 0.08142484075155812, 0.073711350190052, 0.024303165435612804, 0.04858034942170775, 0.03849959987500494, 0.018472092582682953, 0.024493292104088692, 0.03574691178880079, 0.0033742842652223102, 0.019927368251094466, 0.009724533807366677, 0.013871482430949865, 0.019437516378884755, 0.0026839063377048955, 0.0016499061753298583, 0.008660851954683326, 0.010597163948505298, 0.0002232967148654112, 0.005871390617061737, 0.0048569648856579516, 0.00010257614576396602, 0.003641952039955858, 0.00643043608580552, -1.8967566507670567e-05, 0.005110021041699596, 0.0003769528717854386, -0.0003271557872150324, 0.004402940189881566, 0.0020113391170043186, 1.546152553240885e-05, 0.000216905682407608, 0.0006667261889462233, 0.0031618298616828224, -9.293982046673135e-05, 0.0004892891016637531, 0.00034352333109259397, 0.00025820024197471114, 0.00047081970626921513, 0.00028561513365729055, 0.000331159045796198, 0.00022545328681147203, 0.0005034635533264424, 0.00024037010245456602, 0.00039362085598885116, 0.00048034739113451996, 0.000131923697426382, 0.00041372123526724224, 0.00027344396435319946, 0.0003421069282244862, 0.0003157948397292178, 0.0002983918590350189, 0.00032171032473608916, 0.00031608507055086514, 0.00039987467091203235, 0.0002529732933371247, 0.0003264218403085821, 0.0003345854372065041, 0.00030161878671866723, 0.0003415278450050227, 0.00030920805588065833, 0.00031845204018475764, 0.00032229655066281777, 0.000325639633421468, 0.00031631135008779805, 0.00031955792456911684, 0.00032452559906502425, 0.000314742553067904, 0.0003251371823925884, 0.00031923972792935766, 0.000319050606203084]
1 [0.13302018353284195, 0.13204211115742703, 0.10765952706387001, 0.09125373942572958, 0.07190565933397816, 0.06106489131068774, 0.04633699258268791, 0.05197267394920173, 0.07675988928004943, 0.014537281077343717, 0.03699688259878861, 0.0037293544574084404, 0.025632981209415786, 0.035757772930615855, -4.41486887027368e-05, 0.01137275766926341, 0.001465619176329255, 0.022978503688926823, 0.020381203728152365, 1.2585892870037838e-05, 0.01112869956893352, -4.012128829622666e-06, 1.7768234191065381e-06, 0.007238392068533491, -9.343197390628882e-07, 0.005296422145151233, 3.9831755169182685e-05, 0.006027256898024242, 2.128541345336478e-05, 2.9870383384360063e-05, 0.0029582214325637145, 0.00010308836408154135, 0.00017028473129025528, 0.00021232665590605813, 0.0003191789624447265, 0.0003337436129154835, 0.0003898653442516182, 0.00045100597651614034, 0.000464129366225826, 0.00048085206609071876, 0.0005273287191813374, 0.0005174687967736621, 0.0005365679699898183, 0.0005475954561091003, 0.000550471323488399, 0.000550276955085609, 0.0005576989808724485, 0.0005530282103634977, 0.0005693629512104016, 0.0005608461478106479, 0.0005651431296874794, 0.0005635498171921278, 0.0005709918255544502, 0.0005723860521829487, 0.000567856629699239, 0.0005854863991267471, 0.0005727906947877489, 0.0005924998880950305, 0.0005804537660957238, 0.0005950611788933417, 0.0005891708090703959, 0.0006030431389765761, 0.0005838192724533608, 0.0005991418168593693, 0.0005838232459932148, 0.0005858419864019289, 0.0005704601614882738, 0.0005557445631096331, 0.0005528851853289667, 0.000507586626042117, 0.0005075354322056641, 0.0004517925836898865, 0.0004465150622368998, 0.0003835155561358907, 0.0003944612459928125]
2 [0.1269352804172289, 0.11536836731109629, 0.14144939860643596, 0.0660371504152435, 0.1043838920436275, 0.0398513262358106, 0.04197766600240485, 0.0561183940678577, 0.04254105774936011, 0.05016130133931057, 0.013468469973993607, 0.0361186178739686, 0.015470713609467258, 0.027769453466512113, 0.024268863150477715, 0.017297991991436567, -1.1869760104414402e-05, 0.007941172830046361, -4.7307446093133854e-05, 0.012822229700242507, 0.02018628639339387, 0.007312301613900603, 2.4980732707078287e-05, 4.217790198944969e-05, 0.0002206510576747905, 5.057979616181513e-05, 0.004579273717864086, 0.0011918609102634968, 2.6505715296914756e-05, 0.0020258610913610675, 0.00011974048265603255, 0.00021141435855132553, 0.00024799194913870354, 0.00036026980215128385, 0.0003972919047242237, 0.0004416419926139065, 0.0005091882641864826, 0.0005189371283213823, 0.0005446868120048685, 0.0005714828748933847, 0.000569005583884046, 0.0005695512960897276, 0.0006023359563154799, 0.0005739135535925942, 0.0005933817830106159, 0.0005856717128432812, 0.000589909835993416, 0.000586295328777243, 0.0005949513139081948, 0.0005855698212392628, 0.0005862446207362411, 0.0005968294432432805, 0.000591743447450782, 0.0005926490931857211, 0.000596740009865871, 0.0006024144978930262, 0.0005938133044013714, 0.0006200443774058081, 0.0005978730850910541, 0.0006232686153177534, 0.0006082504440159026, 0.0006210068208200258, 0.0006113721114162115, 0.0006210363784047014, 0.0006072443745571805, 0.0006070491109661651, 0.0005959593016974671, 0.0005835684801209094, 0.0005759709527060193, 0.0005358120383992921, 0.0005326642191281701, 0.00047961210668901003, 0.00047245887219464234, 0.0004110924339579054, 0.0004196765753504853]

===========================================================================================
python3 delay_tomography.py 2 6 uniform 0.5 10000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.04067514267525958, -2.247482968778667e-23, 0.08374639697343425, -2.6539551267275773e-23, 0.016857559454261737, 0.0655582030655148, -2.247483008992084e-23, 0.11971718060959485, -3.060425985829333e-23, 0.08789153068267871, 0.05879600269447957, -3.635259010465415e-23, 0.11283448844732252, 2.899576351312159e-24, 0.02813018133169383, -3.042989405898203e-23, -2.8223162547249234e-23, 0.08887231581666477, 3.0655068437076026e-23, -4.3291476949072106e-23, 0.06051132106011334, 4.6913952850672915e-23, 0.23640967718898193, 2.3920628720571236e-23, -3.6352589835023957e-23]
1 [0.07156399071845893, 0.08673172964724442, 0.05799784754090555, 0.0638911539888451, 0.10828686918668019, 0.08177047720179806, 0.06626550310949922, 0.07439706484145295, 0.09403277566234311, 0.07440264845604014, 0.05211564499908305, 0.06382440229961624, 0.08911144927992114, 0.013782760983860755, -0.000210736183625169, 0.0005769680795242444, -0.00010531179566079462, 0.0011449761013212333, 3.702529409761619e-05, -1.236705188662949e-05, 7.572761937918461e-05, 2.35131357030792e-05, -1.1230836078218512e-05, 0.00010459309084567597, 0.00011260684477788599]
2 [0.06114126844471261, 0.07333228603604758, 0.06824647251026739, 0.08553618036110447, 0.10231612816408953, 0.054334881003486976, 0.0856269362918986, 0.10206312329881231, 0.03694065423332668, 0.05811703059440802, 0.11178525120512837, 0.09132935847667834, 0.030297344136749848, 0.006673516625733366, 0.024740116816139725, 0.007370335050394194, -5.943516902523775e-05, -3.440516531620918e-05, 3.215039854712422e-05, 3.000048790106414e-07, 6.894942512803418e-06, 2.038210644642498e-05, 6.809884860649505e-06, 7.881605922471526e-05, 7.102813176920698e-05]

===========================================================================================
python3 delay_tomography.py 3 6 geometric 0.5 10000  failed with stdout:
b'i_max is 92\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 6 uniform 0.5 10000  failed with stdout:
b'i_max is 36\n0\n0.0006\n0.0008\n0.0014\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 geometric 0.5 10000  failed with stdout:
b'i_max is 112\n0\n0.0015\n0.0014\n0.0029\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 uniform 0.5 10000  failed with stdout:
b'i_max is 48\nInvalid k.gamma[ 0 ] =  0.0  for node  4\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 6 geometric 0.5 50000  succeeded with stdout:
i_max is 92
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.15849687276491947, 0.10746955504845494, 0.10403243253485232, 0.0870193851558631, 0.070021004177047, 0.07021834570882762, 0.05951934498680537, 0.04753599246800953, 0.04325988583034923, 0.03818215117373119, 0.020706820255374618, 0.024980696048762213, 0.029204996255894136, 0.011343913363733145, 0.02058782667645745, 0.007717998101439091, 0.018608608831562744, 0.006381749122694905, 0.0075180564619388894, 0.009578169949693856, 0.0019771136917532827, 0.010052611079829528, 0.0007480920277483465, 0.0030947719512117375, 0.0026921501695157434, 0.003032314905198119, 0.001347279436654023, 0.0030658818070670993, 0.0006967690741092728, 0.0020252625340279936, 0.0005518581388223496, 0.00037555595100838057, 0.0021053028094800367, 0.00037586746470169206, 0.0007401189462398043, 0.00031775823043412915, 0.000962584429674941, 0.0010615478649581057, 0.00032054718867608487, 0.000469763052663886, 0.0005292347923865631, 0.0002725348055117135, 0.0004213529085457306, 0.0004548153650323848, 0.0004253588456972369, 0.0003638245604746563, 0.0005583268004582449, 0.00032842775329919635, 0.0004381510268396978, 0.00042338880277814677, 0.0003427418145390799, 0.0004943161013471692, 0.0003105604546671893, 0.0004482468851437551, 0.000365412541617122, 0.0004228504976626194, 0.00041237709410797945, 0.0003860995037953571, 0.0004026218494914431, 0.0004007292563773779, 0.00039928394268414017, 0.0004160130142655497, 0.0003799695743003453, 0.00042203959765803344, 0.0003802933102176434, 0.0004002099826527107, 0.00039913969315611184, 0.0003975471765332719, 0.00039949645236446777, 0.00039800117645671685, 0.00040992064825708146, 0.00038902577455996194, 0.00040053876359999344, 0.00039770494683264064, 0.000398588968026343, 0.00041039143143088653, 0.00040027474590985504, 0.00039003895094778075, 0.00040030064917898674, 0.0003973627402151137, 0.000398905865012399, 0.0004108009985940837, 0.00038828812269900556, 0.0003998747251941061, 0.0003985378569866751, 0.0003980202090256436, 0.00039938982092364183, 0.00039868535859296394, 0.00039787004511837983, 0.0003989136788030402, 0.0003986008068916973, 0.00039853730496810033, 0.0003988405055742636]
1 [0.12609966264406375, 0.13314033861114155, 0.10384056309907144, 0.08839624027747392, 0.07933506889772285, 0.06969238720372226, 0.05136504511038086, 0.05201902721272218, 0.04106135044546184, 0.03063794985411383, 0.038438728062508525, 0.02336701001936011, 0.015778928257050066, 0.01759142158388848, 0.02225018824442348, 0.009075570786702684, 0.01614808146731469, 0.006932226532666193, 0.012138286681741356, -2.750060702028562e-05, 0.007951368771897943, 0.004945683528752257, 0.002381515761002838, 0.0067264669869677015, 0.007215545983735027, 8.805891415821386e-07, 9.517567883038844e-06, 0.0024366995195392632, 8.486563906516068e-05, 0.0001469713353231469, 0.00021925155312986107, 0.00027887611051996336, 0.0003223179027152667, 0.00037493755079215233, 0.00041180343835857755, 0.00044429562750506146, 0.0004640255604782548, 0.0004881227743123189, 0.0004981620873536086, 0.000503554884502894, 0.0005170925951153421, 0.0005154045190013646, 0.0005217156748700505, 0.0005174662430851293, 0.0005215965574155219, 0.0005173245063421451, 0.0005150637054917927, 0.0005143293130130846, 0.0005086424172008347, 0.0005074192710456353, 0.0005028147129251433, 0.0004999724320840518, 0.0004953597367136025, 0.0004930053690638699, 0.0004893861497235, 0.0004886557539753871, 0.00048424021548871415, 0.00048373594024338174, 0.0004813992009825415, 0.000479335528670498, 0.000478358052529162, 0.0004776299856170902, 0.0004783977701794893, 0.0004759609523753173, 0.0004786965366830443, 0.0004800190518068052, 0.00048116433140586593, 0.000482898050679255, 0.0004871697948786689, 0.0004901158743510174, 0.0004942942114647241, 0.0004983196016115928, 0.0005055939735859169, 0.0005087894771408847, 0.0005166047368459954, 0.0005232579137037635, 0.0005264979890050683, 0.0005342450371582379, 0.0005377871896881505, 0.0005442994200025727, 0.000542434705387461, 0.0005462435374172087, 0.0005470887170362971, 0.0005415375380713029, 0.0005362716222000368, 0.0005286525903786009, 0.0005138220344989184, 0.0004978093837197365, 0.0004807717804744131, 0.0004572624936241347, 0.00043053625361194316, 0.0004072907753583837, 0.00039534476257940213]
2 [0.1339600220868561, 0.12606277432994262, 0.10673786918798932, 0.08385855942690473, 0.0884140824461582, 0.06193352791042247, 0.043220767715759306, 0.046244854533018624, 0.04737217422550002, 0.04197311064533088, 0.03288594518323773, 0.017756842217504135, 0.014570588570782991, 0.023458752621967317, 0.02125978885365787, 0.013010373553059972, 0.01195725331478423, 0.014465411162044617, -3.0788655759827005e-05, 0.006016251907192245, 0.011141476781969643, 0.004455399804052846, 0.00018876865062095053, 0.008849847129348658, 0.0020732936740539207, -7.023486410083171e-06, 0.006784413948420539, 0.0008052165129233389, 7.959169916725796e-05, 0.00014657661129812764, 0.00021619748601759686, 0.00026328097497261334, 0.00031064434410811093, 0.00035251381290760575, 0.000391878175672143, 0.0004172634656890812, 0.0004438703216795296, 0.0004656937063914815, 0.00047260537144880663, 0.0004883291629484367, 0.0004973671034269673, 0.0005018052200297222, 0.0005075761953191678, 0.000506840254063822, 0.0005121930744432949, 0.0005098076097733799, 0.0005067950283141685, 0.0005080406922704507, 0.0005022263668449491, 0.000502703790333698, 0.0004983352199482951, 0.0004947053572419553, 0.000492574148466177, 0.0004881700914244039, 0.00048742739258788345, 0.0004842466616672525, 0.00048057442726740895, 0.0004810162876108815, 0.00047759682449501995, 0.000476024788427178, 0.0004755446186740512, 0.0004740618546660777, 0.0004752881556377009, 0.0004723784113621426, 0.0004761247213305998, 0.00047649362351272445, 0.0004774945196558682, 0.00048028775662318905, 0.000483198436041787, 0.0004870315965780319, 0.0004905474722736529, 0.0004950782510397599, 0.0005017966617254367, 0.0005051947345481846, 0.0005129424220054327, 0.0005195353083496615, 0.0005223358764945472, 0.0005303236652036636, 0.000533582172306159, 0.0005399665566523705, 0.0005379419272034105, 0.000541413398852394, 0.0005423902475911165, 0.0005361554545066039, 0.0005310471009617315, 0.0005228668271893301, 0.0005080565283662964, 0.0004918696938323808, 0.0004748106079663949, 0.00045128408008688806, 0.00042459765880474245, 0.00040174688154494677, 0.00039035105211130674]

===========================================================================================
python3 delay_tomography.py 2 6 uniform 0.5 50000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.07132655345623848, 0.06601307858508401, 0.08844876832662704, 0.05826267293314474, 0.06669507289080508, 0.08661564032287701, 0.0726651227836454, 0.07471216167960716, 0.07210660048224496, 0.05878250006590077, 0.09501159434062678, 0.0773044270355779, 0.06819980832491518, 1.02633844024449e-23, 0.0009143440253510596, 1.3522371361546652e-23, 0.01576768537674296, 1.2208557324308618e-23, 0.009397755513965636, 1.1490014084216836e-23, 0.006401783037951269, 8.02057755375557e-24, 0.004928258217384689, 1.220855558129387e-23, 0.006446172601309796]
1 [0.07498402628641719, 0.07778907112330369, 0.07796662692746331, 0.0829232229466843, 0.0939852931347411, 0.06364210305555473, 0.06921783257680364, 0.09104957206585099, 0.05927102204254725, 0.07274213120198228, 0.09189183678944499, 0.07680160310334418, 0.048231743196070945, 0.01907760194288844, 7.269971683729603e-05, -6.257634954857808e-05, -2.217062427614802e-05, 3.4416367378926424e-05, 3.3370090256978216e-05, 3.4981009160644034e-05, 7.984199351258365e-05, 7.540460009904249e-05, -9.049996874126067e-05, 8.108974030293047e-05, 0.00012443422098306337]
2 [0.07180325856039849, 0.08384946739966628, 0.07010088291601944, 0.08030841342971566, 0.08610175805146461, 0.07220816754272522, 0.07411589746768427, 0.08255730875144009, 0.06574349811242726, 0.07443427261414912, 0.08876287453080474, 0.06955736029647662, 0.07590105833857619, 0.004555781988452118, -1.2360958728363412e-21, 3.6624227493506757e-22, 5.045886491819941e-22, -1.186860775828013e-21, 7.669320534180104e-22, -2.4740669229407146e-22, 2.5375087290594336e-23, -3.8245365280604556e-25, -4.858282369147557e-22, 3.547360328915688e-22, 2.3491501031090718e-23]

===========================================================================================
python3 delay_tomography.py 3 6 geometric 0.5 50000  failed with stdout:
b'i_max is 125\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 6 uniform 0.5 50000  failed with stdout:
b'i_max is 36\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 geometric 0.5 50000  failed with stdout:
b'i_max is 122\n0\n0.0014\n0.00122\n0.00262\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 uniform 0.5 50000  failed with stdout:
b'i_max is 48\nInvalid k.gamma[ 0 ] =  0.0  for node  4\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 6 geometric 0.5 100000  succeeded with stdout:
i_max is 92
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.152050510279707, 0.11247146566149581, 0.1058001425427111, 0.09413166155343265, 0.07029316530476498, 0.06712167210474687, 0.05520731032745185, 0.046396199560494754, 0.04298611632150197, 0.0345673686039954, 0.02557675004720083, 0.024699636173502112, 0.02685107315653351, 0.015105655759339568, 0.019120919780192775, 0.008447127793281004, 0.01742372331176695, 0.0051833842379861595, 0.009004006206451226, 0.008621328500517065, 0.003973210847719655, 0.007364724554890629, 0.0032686593539043084, 0.0036790982556687457, 0.0028941939626250393, 0.0021426864113432377, 0.0025705785275384743, 0.002632483266095236, 0.0005054799343178546, 0.0015559787368664662, 0.0011622104620102483, 0.0003476911290600734, 0.0015403288324269905, 0.00043302198499274266, 0.0005159371393548493, 0.00047278217825119087, 0.000503739234534291, 0.0007130900706984601, 0.0003198358491844624, 0.0005108283717866987, 0.0004970682043071667, 0.0003516097886134452, 0.0004621878821929388, 0.00043627866090765566, 0.0003942908912779946, 0.0004223481998627744, 0.00045725330533990925, 0.0003904124947064486, 0.0004572345438865911, 0.0003690577607808898, 0.0004152766363402877, 0.000429730257823583, 0.000364996192192549, 0.0004463165902132064, 0.0003622838150734507, 0.00041541745814410865, 0.00040551309911318384, 0.00040449340392755635, 0.00040661418111158213, 0.0004165061151167075, 0.0004016399512132291, 0.0004075640388381684, 0.00040220679306815694, 0.00040423167991669804, 0.00039008934320761585, 0.0004013499944022402, 0.0004006774156322538, 0.00040151931916307485, 0.0004012068656959612, 0.00040140651938157723, 0.00040681230578936333, 0.00040206765039351437, 0.0003976863276890046, 0.00040142082877896043, 0.000400972108456146, 0.0004066179604663344, 0.00040248880206168996, 0.0003974342984559711, 0.000407027721720781, 0.0003964698235136134, 0.0004017373337770021, 0.00040682290231552285, 0.00039657714422675067, 0.0004018311872500419, 0.0004011305680198254, 0.00040099709048769876, 0.000401431024599898, 0.0004013054401764749, 0.00040110816379893975, 0.00040129942660761765, 0.00040120578631661037, 0.00040121573442899105, 0.00040136415194782105]
1 [0.13425650174723897, 0.12910588674331502, 0.09643176912181405, 0.08548007519755553, 0.08221661251014983, 0.07334406332368783, 0.051690240549162964, 0.050938949340591844, 0.04352562082168404, 0.0331478066494538, 0.032355698400231586, 0.02110310407591927, 0.021743217904372607, 0.020531014324459022, 0.011782980423101063, 0.018469458197585345, 0.011929495710973088, 0.005571917689254368, 0.014020714090448997, 0.0015499575404815105, 0.005905529853933303, 0.006087044994337905, 0.0017974335689463414, 0.006931818115536539, 0.005412427316652639, -1.3893589743315706e-05, 0.00037486901617361416, 0.0008859387383581465, 0.0027785954963367486, 0.00019707074526735074, 0.00012025889779611702, 0.00020182198426500257, 0.00027352230439901825, 0.0003279198643835431, 0.00037383756384581977, 0.0004126123006616244, 0.0004413548523889634, 0.0004679108672787384, 0.0004873436860147271, 0.0004980619061261387, 0.0005056628989857662, 0.0005177632461994125, 0.0005184724842002689, 0.0005220327183612651, 0.0005200043841475305, 0.0005207027011133184, 0.0005178012840257231, 0.0005145834557273082, 0.000512108433004444, 0.0005081649351261748, 0.0005053338992401589, 0.0005027095247104568, 0.0004984443468459906, 0.0004948128971757144, 0.000492445997027178, 0.0004895381725252776, 0.00048712166431968886, 0.0004850412474967621, 0.0004830075347999366, 0.00048136019049664104, 0.0004798233988033987, 0.0004793040214387646, 0.0004793203215254755, 0.00047802694453962457, 0.00048049511647213814, 0.00048048240545249494, 0.00048298781588024064, 0.00048474952187797023, 0.0004883455387830756, 0.0004918098804950588, 0.0004957841632808191, 0.0005004326148819636, 0.0005060415575392727, 0.0005111382115327375, 0.0005165376636668139, 0.0005248407995787647, 0.0005273006311862492, 0.0005361547471374682, 0.0005389795034496684, 0.000544784138169758, 0.0005440953070521183, 0.0005472239058088668, 0.000546681704297802, 0.0005427725732133542, 0.0005363732493653293, 0.0005283230380680945, 0.000515548247426187, 0.0004992875760983962, 0.00048250390647718293, 0.0004558634603084569, 0.0004292818378445432, 0.0004026839416515192, 0.00039116177683832783]
2 [0.13430045114087907, 0.12604422174182184, 0.10810006976526318, 0.08168207949832902, 0.07785311306697293, 0.06330899961754456, 0.05972082157620372, 0.042726227026263955, 0.04537133123566055, 0.04115774015802123, 0.03389564816355953, 0.018758741389559457, 0.018052486727706714, 0.0211690178584351, 0.01910925219303556, 0.013551172728153133, 0.009499497393629434, 0.01009509407303024, 0.001485833083762057, 0.010149605322907953, 0.012339826139635943, 0.0032867063485977573, 0.0021902402733128957, 0.005972718361649018, -1.6835844768071238e-06, 0.003408880022043152, 0.005333940135013501, 0.0005342385166251008, 0.00010078846984939779, 0.00016030714107529055, 0.0002249625989225756, 0.00028000303440055946, 0.00032793474453860253, 0.0003669793932153912, 0.00040061749840197743, 0.0004283106387405146, 0.0004516642544971206, 0.0004691001022800148, 0.00048271821176552594, 0.0004940980765320211, 0.0005019160112329921, 0.0005095797689538943, 0.0005119958140750772, 0.0005146267931359507, 0.0005149361108866358, 0.0005143843811037036, 0.000512176160038482, 0.0005104107827414845, 0.0005079342931163199, 0.0005053389437766039, 0.0005021224943240556, 0.0004996001553044438, 0.0004956960124983998, 0.0004926099933915283, 0.0004909621561916195, 0.00048771795265958347, 0.0004849265972866236, 0.0004832776448396183, 0.00048120902923076464, 0.0004792390961001671, 0.00047831483704439823, 0.00047729834104057823, 0.0004775446738446613, 0.0004767347653064995, 0.0004790633064994043, 0.00047915677537928525, 0.0004811083949498879, 0.00048330148247322153, 0.0004866376453294948, 0.0004898070015594015, 0.0004941159028835809, 0.0004985270681491755, 0.0005038557514369236, 0.0005092786472635624, 0.0005146561428861738, 0.0005227165183889075, 0.0005251357662367391, 0.0005338122942027605, 0.0005365015543719836, 0.0005424100268564654, 0.0005414401883658706, 0.0005445906145989216, 0.0005439402566181517, 0.0005400260329632186, 0.0005336706139264923, 0.0005257128573775316, 0.0005132501429383554, 0.000497271776447244, 0.00048093548958111067, 0.00045478780324552083, 0.00042903293257802433, 0.0004034898085376601, 0.00039352009498676884]

===========================================================================================
python3 delay_tomography.py 2 6 uniform 0.5 100000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08778408952756549, 0.0688300348278424, 0.06995504039373295, 0.07458366303916544, 0.06627323537072138, 0.08889340391259999, 0.07072772716129187, 0.07394297223477307, 0.0879244248019868, 0.056083369238482866, 0.0917279896037263, 0.08205902530266194, 0.06400153739762476, -0.0006373830898212182, 1.3649426151956026e-05, 0.0001253080842695275, 0.007928022312331851, 0.0007353654895454617, 0.002711352444268114, -0.0005362596625537997, 0.005596575717660623, -0.0009435752510300884, 0.0009230791391833078, 0.0004771238928800342, 0.0008011692160656475]
1 [0.06255943110416687, 0.08141654920256053, 0.0846063071207992, 0.07527067542100965, 0.09156014248888918, 0.06505824819107232, 0.07354292385168074, 0.08470059013273153, 0.07226546738491359, 0.07559683652466824, 0.07265266803454218, 0.08029920200346666, 0.06505572665561278, 0.013016544296479964, 0.002245573286123617, -0.0001266392488964538, -7.3343677211347085e-06, 2.240514354555319e-05, 3.3499418954069285e-05, 2.1443422100896117e-05, 3.741816074219644e-05, 3.040912970442269e-05, 2.1110299149827678e-05, 2.6935297348028265e-05, 4.984319151072518e-05]
2 [0.058862467139029005, 0.07927349433927197, 0.08242134885321696, 0.08514001021376243, 0.08039164147852951, 0.06924187814234374, 0.08381374276608698, 0.07683892723354539, 0.06907618498709962, 0.07275808196539675, 0.08861129719264993, 0.0676640715128936, 0.07316796030010393, 0.012738893876070087, 8.537434624492717e-23, 4.3143368337420613e-23, 3.5795903631566853e-22, -8.185543848126248e-23, 2.5530904274993086e-22, 1.7487874131607866e-22, 1.799055875175043e-24, 2.964389976482073e-22, 4.4554439113729706e-23, 2.0520831930912855e-22, 1.55181161714118e-22]

===========================================================================================
python3 delay_tomography.py 3 6 geometric 0.5 100000  failed with stdout:
b'i_max is 125\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 6 uniform 0.5 100000  failed with stdout:
b'i_max is 36\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 geometric 0.5 100000  failed with stdout:
b'i_max is 122\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 uniform 0.5 100000  failed with stdout:
b'i_max is 48\nInvalid k.gamma[ 0 ] =  0.0  for node  4\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 6 geometric 0.5 500000  succeeded with stdout:
i_max is 103
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.14871210319358832, 0.11898912560911486, 0.10424384408642443, 0.08830343713940501, 0.07463321625964958, 0.06252378448021809, 0.06030064459547564, 0.047739588086612536, 0.04007992464157062, 0.033594247861529376, 0.02840495199059503, 0.027541033563013035, 0.022294478433764975, 0.017070984822886194, 0.016881209138213123, 0.012141918350740275, 0.012480649676953812, 0.008961033805205524, 0.0070162522209495145, 0.007755838784685963, 0.006132332546464151, 0.005770123635860492, 0.0029197783836526405, 0.003881772725954348, 0.002192762991978183, 0.0023518237546430246, 0.002247069302315662, 0.0018239597686513502, 0.001155897890394837, 0.000871675961118557, 0.0013982525524293007, 0.0004310056608127751, 0.0008947837072436365, 0.0004928552496829617, 0.0004473911120307465, 0.0004945041336634107, 0.0004725067691953578, 0.0004562186301457565, 0.0004122346175816364, 0.0004610935435496695, 0.0004239550961924305, 0.00041007687305582533, 0.00041186947536894113, 0.0004034761737758359, 0.0004074345470632808, 0.00039952057037502694, 0.0004093596766811835, 0.0003865830362688665, 0.0004070265581558797, 0.00037803937281707977, 0.0003818362643314934, 0.0004121408749389205, 0.00038481102561979176, 0.000388592174341304, 0.00037468879624735855, 0.0003890428098781576, 0.000388557952548994, 0.00039691913414364685, 0.00037778400934251964, 0.0003854191382967196, 0.00038834852045774445, 0.00038423365101300164, 0.00037773008330616704, 0.00038713995888357274, 0.00038753382278555954, 0.0003777464725511167, 0.00038418928379285386, 0.000386982107653677, 0.0003785973892024057, 0.00038464600542284055, 0.0003822039796129591, 0.00038526867731276807, 0.0003835710797740251, 0.00038150586839067217, 0.00038207242782737, 0.00038401228576883674, 0.0003839988496413452, 0.0003812710099227668, 0.00038400866915933246, 0.0003840940389888733, 0.000382216881473445, 0.00038432755947421984, 0.00038110155540083926, 0.0003829008142192347, 0.00038279517708592395, 0.000382819892302414, 0.0003828152084677825, 0.0003828424836636346, 0.0003827579930895334, 0.000382873921531848, 0.00038277867615692956, 0.00038284315216424443, 0.00038281197330991025, 0.00038280453249425766, 0.000382824347278023, 0.00038281601725380864, 0.00038281413384921, 0.00038282162344626774, 0.00038281293181135557, 0.0003828154172162384, 0.0003828196389225228, 0.0003828155068818054, 0.0003828166791957668, 0.0003828178737675042]
1 [0.13159206933869194, 0.12901057948837108, 0.10070904338679196, 0.09017138320690596, 0.07885994626917342, 0.06694899668821483, 0.05319169785409492, 0.04745332889182525, 0.041249701527308856, 0.03771292684504937, 0.030568625513697135, 0.022901019846139403, 0.023690720751869905, 0.016984608654704456, 0.015803127161175892, 0.015001404166997205, 0.008285441259865692, 0.010687409442233533, 0.00983856353295813, 0.005121665109197178, 0.00894009204743675, 0.0048671541052180845, 0.0031664112275403447, 0.005152419781773406, 0.002891586115648199, 0.0005403395975542728, 0.001354841056372933, 0.002715299085166859, 0.0008077110663649826, 0.00016037858453712923, 0.00013773075815945034, 0.00021366907214809497, 0.00027367818288307643, 0.0003225598303685453, 0.0003634755863751751, 0.00039957512335972613, 0.00042711735129072456, 0.0004477093862476449, 0.0004628862350815781, 0.00047404507637772926, 0.00048355518706134275, 0.000489806763213176, 0.0004919447988290335, 0.000493339596531812, 0.0004928047520227218, 0.000491603482543007, 0.0004889188727102194, 0.00048524977911503626, 0.0004822784314291479, 0.00047943189282562815, 0.0004759870159145063, 0.00047206820841873363, 0.0004685713906700787, 0.0004650490315671134, 0.00046192251177134907, 0.00045918732835200407, 0.00045669892880735417, 0.00045413863705759134, 0.00045202721091116725, 0.00045021886360429545, 0.0004481826291505417, 0.0004465744962315646, 0.0004451289425532211, 0.0004436705844786108, 0.00044245992748029447, 0.00044172738776682423, 0.0004407435924347995, 0.00043997085635004646, 0.00043949146406644366, 0.0004393383742437636, 0.00043912781000665906, 0.00043892791356586037, 0.0004398677982193201, 0.0004399204481278066, 0.0004412130750564145, 0.00044254282228758723, 0.00044435723173042254, 0.0004465091834459225, 0.00044937469050377444, 0.0004528423130158685, 0.0004564216658627998, 0.0004619675372515575, 0.0004660333881548037, 0.00047198902649547435, 0.00047717134300149844, 0.00048416394008969903, 0.0004904998081893602, 0.0004958496571405816, 0.0005028690589557592, 0.0005069602747906464, 0.0005125929202806684, 0.0005150979250896181, 0.0005157143672434006, 0.000516647267701783, 0.0005138798420189605, 0.0005092563017000761, 0.000501712668601137, 0.0004886453521392122, 0.0004771469905807806, 0.0004587848095209333, 0.0004382019537282244, 0.0004136101761128286, 0.00038884857589433766, 0.0003857576927810701]
2 [0.13176321084640544, 0.12396822681711067, 0.10908688530321074, 0.08732689725363824, 0.07551287053517129, 0.0688814045934668, 0.05144033807533297, 0.051300781406822454, 0.03949546933576736, 0.04063820787957119, 0.029516476690620578, 0.022243629984604933, 0.021098830490075816, 0.018927130362090892, 0.01640787192226859, 0.013089741835801548, 0.013852149150989758, 0.007866333139485827, 0.006175618093926307, 0.009091502643813044, 0.004991966893599481, 0.007216118414341884, 0.002403162789602905, 0.004935614661135613, 0.0010263562108495303, 0.002845820061216753, 0.0019902715973813038, 0.0027092318618680035, 0.0005504508092432064, 9.973788409155387e-05, 0.0001617275937495229, 0.00022418432202162225, 0.00027808206068988397, 0.00032325467403271227, 0.0003634144896794743, 0.0003957288195918751, 0.00042234495476534595, 0.0004424250568317227, 0.00045758921520104904, 0.0004691801424360471, 0.00047860175956629066, 0.0004846151381474922, 0.0004883063849961742, 0.0004895157487396891, 0.0004899952664714109, 0.0004888414151302388, 0.0004862035710512748, 0.0004834314295112449, 0.000480517254414311, 0.00047777112521634385, 0.0004741527992765125, 0.00047089833923081063, 0.00046705733414601516, 0.00046371208074526125, 0.0004608270055947136, 0.0004580031188375517, 0.00045557332121308605, 0.0004530779268036055, 0.0004510944219076403, 0.00044898759238987096, 0.0004471871377896917, 0.0004455689733063378, 0.00044416556654018315, 0.00044276372415115797, 0.000441501397009933, 0.0004408429452665275, 0.0004398102511527679, 0.00043910709863556575, 0.0004386154948859716, 0.00043845804902962446, 0.00043826104035768357, 0.0004380330044252386, 0.0004389627957769635, 0.00043902850901013276, 0.00044034728873393553, 0.0004416108252678234, 0.00044343895810912426, 0.0004455520481065223, 0.00044843468015859985, 0.00045193095834646823, 0.00045543892845464375, 0.00046098510980131205, 0.0004650217111636914, 0.00047098084131592623, 0.0004761491041581948, 0.000483115579300932, 0.0004894142051053843, 0.0004947456170426988, 0.0005017426678464524, 0.0005057694378315504, 0.0005113772676312063, 0.0005138371194287616, 0.0005143973193000467, 0.0005152822928226959, 0.0005124751043341222, 0.0005078097573491677, 0.0005002221787586178, 0.00048712628092031386, 0.0004756729294259623, 0.0004573279835941134, 0.0004367843517277121, 0.0004123008176828833, 0.0003877674185372915, 0.0003851685361099862]

===========================================================================================
python3 delay_tomography.py 2 6 uniform 0.5 500000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08195604707923049, 0.07074603396145374, 0.07817540801870065, 0.07505079132311417, 0.07475512278849622, 0.08051216677467168, 0.07671290273105438, 0.0744706931339997, 0.07407814754483188, 0.07400205204068613, 0.08030383932685067, 0.0766076934395522, 0.06985238254789507, 0.0008458211668230199, 0.0009045284464773904, 0.0001997226022843146, 0.004470064806646842, 0.0008065991269493864, 0.0007928909519358543, 0.0003454798076161281, 0.0009056909858828449, 0.0007862998765812371, 0.0008461439855437771, 0.0007963487857142174, 0.0007192897348813547]
1 [0.06727412297663748, 0.08425977216359426, 0.07863808790408848, 0.07317136599366657, 0.08025004440213035, 0.07196097838258529, 0.07481242019481094, 0.08218688092960201, 0.07801836220993635, 0.0718314653664539, 0.08422475931475934, 0.07595493158607149, 0.06817612250956906, 0.004985490771062051, -0.0002257017702219277, 0.0030372689518288615, 9.186620324388768e-05, 0.0006391676025611251, 0.00048046376792716233, 5.3862525074978635e-05, 4.816739322558921e-05, 3.847115040334464e-05, 1.731250338673125e-05, 1.864518697639055e-05, 4.307836884014771e-05]
2 [0.07109470179977134, 0.07725394389431126, 0.07597961335051351, 0.08409577715737829, 0.07421010596806338, 0.07267587262162206, 0.07700867173845391, 0.08022337715555905, 0.07595268835224325, 0.07790683772727355, 0.07817523412821334, 0.07518969905005621, 0.07080506087085296, 0.008369563529864758, 0.0008909254743651167, -0.0001528405526259522, -3.833998495679512e-06, 3.42834905970544e-05, 3.778929787939819e-05, 3.325951658468082e-05, 3.296609383602477e-05, 3.230190554423758e-05, 1.9237114509995364e-05, 2.3897158265799346e-05, 5.983195198486396e-05]

===========================================================================================
python3 delay_tomography.py 3 6 geometric 0.5 500000  failed with stdout:
b'i_max is 134\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 6 uniform 0.5 500000  failed with stdout:
b'i_max is 36\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 geometric 0.5 500000  failed with stdout:
b'i_max is 147\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 uniform 0.5 500000  failed with stdout:
b'i_max is 48\n0\n6.4e-05\n4.8e-05\n0.000112\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 6 geometric 0.5 1000000  succeeded with stdout:
i_max is 104
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1416127503473023, 0.1232081085239496, 0.10377219383606351, 0.08812930806175791, 0.07682247910996884, 0.06304346228085188, 0.056666928266496594, 0.049931914569810956, 0.04090291248992172, 0.0340073997576633, 0.02873055687781971, 0.027071010885175384, 0.021854614634313506, 0.01902332612426145, 0.015599814753218902, 0.013099374176514283, 0.011602837604050505, 0.009702634906808717, 0.007417664492516734, 0.007055650460067072, 0.0064012087368391785, 0.0056578756473362295, 0.003363258165796162, 0.0038166829151551483, 0.0023970426355354097, 0.0022690023148046728, 0.0020740933505222926, 0.001561014916651632, 0.00118668307512222, 0.0009874018906285264, 0.0012893217791968632, 0.00042786655478928255, 0.0008411239799712223, 0.00048763780316607696, 0.00048072371837779666, 0.0004812520327342688, 0.0004477370637053495, 0.0004562612162155916, 0.0004407728845622768, 0.00043320342144771836, 0.00041494300367033967, 0.0004222341928012838, 0.0004013091075082947, 0.0004078502989262622, 0.0003911839125946559, 0.0004014335569749086, 0.0003996803610294032, 0.00039331763316236804, 0.0004058514136303937, 0.0003786192502820832, 0.0003824370943946517, 0.0003950716089134793, 0.0003890296730531777, 0.0003949803704558244, 0.00037050499255257953, 0.0003893312191035935, 0.00038322391724897515, 0.0003848417498064138, 0.0003837524737123411, 0.00038253033052514194, 0.00038605364825142587, 0.0003792909875322959, 0.0003786859265270543, 0.00038458222457255094, 0.00038175602276785945, 0.00037977741799724763, 0.00038198498114659, 0.0003823440079426235, 0.00037771165465975694, 0.0003829909683214892, 0.00038152780022252767, 0.0003797715378699855, 0.0003820359102827942, 0.00037978015732725916, 0.00038027784549221616, 0.0003817855297419961, 0.00038104700615104227, 0.00038099783937580416, 0.00038046390778581174, 0.0003808781791789264, 0.0003813996671703446, 0.00038046004096100905, 0.0003803575747901032, 0.00038073218988171446, 0.00038017285359032464, 0.0003805855129209214, 0.00038112358823179805, 0.00038019823994252163, 0.0003805799199574797, 0.00038058556006114483, 0.0003811173216993555, 0.0003801901236829833, 0.0003811184976402613, 0.0003802058801107558, 0.0003805715262846269, 0.000380582032524888, 0.00038059575984930176, 0.00038057714952158906, 0.00038058855689595346, 0.000380583930860434, 0.00038058356685016976, 0.00038058374852019254, 0.0003805869855530402, 0.0003811196317181958, 0.00038018985069132745]
1 [0.13810543794372848, 0.12408913202587024, 0.10325408829294441, 0.08735717071997687, 0.07723991770503577, 0.06701876179593183, 0.05653117951714411, 0.045063618436958254, 0.04029890466179088, 0.036866072879475506, 0.03122758251437725, 0.02461034704075872, 0.02313718750432784, 0.014518183958211629, 0.017445461546097323, 0.014689353576027834, 0.010950076181138215, 0.009937025006347779, 0.008234714757112445, 0.005720148444921077, 0.00856735930077367, 0.004649262030110193, 0.00347267016287002, 0.004138464334385217, 0.0021141418715334617, 0.0020403317368790663, 0.0018592477309104455, 0.0020986976943861892, 0.0005692003833191609, 0.0005315667491790951, 8.261380730575931e-05, 0.00017992903039878644, 0.00025326481637668924, 0.0003106932297426407, 0.000356739819140546, 0.00039143303361851656, 0.0004204331560110988, 0.0004433648167938424, 0.00045931132774886115, 0.0004703031007046886, 0.00047824693707161707, 0.00048517610211142644, 0.0004880592807369388, 0.0004896689294010203, 0.0004890519620768812, 0.00048738134609978365, 0.0004850293527639411, 0.00048218218534017414, 0.0004782982954694763, 0.0004752553168356568, 0.00047210521020735153, 0.0004691076339798771, 0.0004649555880961296, 0.0004619125017826833, 0.00045848010329447095, 0.0004555997168976501, 0.0004530081330986659, 0.00045055260959341297, 0.00044837420164319685, 0.00044633854289779487, 0.0004449733392519133, 0.0004425415090528857, 0.0004415463257817799, 0.000440103116653549, 0.0004389392665895328, 0.0004379573983066879, 0.0004370075056934804, 0.0004362571115008272, 0.00043582556291577474, 0.0004352108749105268, 0.00043504075689064086, 0.00043507782296887216, 0.00043469796002490436, 0.0004359596841648642, 0.0004358155007630764, 0.0004372754302140621, 0.00043864451832910503, 0.0004405911517202125, 0.00044287183943788813, 0.000445676490804253, 0.00044938844090647827, 0.00045294437859032266, 0.00045833381218327696, 0.00046270423132836616, 0.00046833071829586385, 0.0004741599781382507, 0.000480745795607291, 0.0004868095115233448, 0.0004928951373628921, 0.0004990752554594641, 0.0005043320356878441, 0.0005084191062111345, 0.0005118930291937696, 0.0005122737909325553, 0.0005131439367663353, 0.0005103454705988874, 0.0005056202998028948, 0.0004969548633040915, 0.0004860597515853104, 0.000473442773441841, 0.0004545336382842946, 0.00043493491599181424, 0.00041050434377640064, 0.00038248826240060716, 0.0003840770212559161]
2 [0.13866271091540644, 0.12013253922737316, 0.10722674545480414, 0.08918803919166207, 0.0743681971788627, 0.06863400691612999, 0.05479364101879341, 0.04688141561320806, 0.04059222934127371, 0.038717656532854396, 0.028675787786071664, 0.023886627343761554, 0.02174162059964508, 0.01784646741315543, 0.016861202348140942, 0.013845057462527729, 0.011803791295484999, 0.008919943240419172, 0.006317830358817031, 0.008961722131844716, 0.006052554765652415, 0.005207700504796353, 0.0037346177492918447, 0.004539877534827713, 0.0011009860032997062, 0.001940173435259256, 0.0026807685026336205, 0.0019806741682947973, 0.0007723333955851177, 7.968222954093059e-05, 0.00015684358918163346, 0.000221580791424741, 0.0002759338407989854, 0.00032326114185985517, 0.0003619098650778594, 0.000395134835549972, 0.00042272932753105436, 0.00044293227953072717, 0.0004580572126060525, 0.0004694464318383808, 0.00047890547694038607, 0.0004844944446196582, 0.00048787973311638534, 0.0004890159937097286, 0.0004888190259601788, 0.0004877051161548525, 0.0004850366046627396, 0.0004818501808922799, 0.0004788246758429414, 0.00047593727662293415, 0.00047262510369203267, 0.00046878996379078996, 0.00046548753660195704, 0.0004620047171158432, 0.0004590444042610704, 0.00045614988608009643, 0.00045351037634404795, 0.00045107796678237386, 0.00044899119003666396, 0.0004471125801700603, 0.0004449450346989072, 0.00044356067809855974, 0.0004420837004706989, 0.00044072322303839034, 0.0004396116505639727, 0.00043858732460279895, 0.0004377330099122932, 0.0004368987818539788, 0.00043646185782711947, 0.00043585979053479884, 0.0004356967472855162, 0.00043565160162187255, 0.0004353032881139193, 0.00043651694889892945, 0.00043644542466033146, 0.00043782551092448553, 0.0004391835602977402, 0.00044112718633986214, 0.00044327777304809424, 0.0004461464777983943, 0.0004498848287409943, 0.0004533827894946211, 0.00045874051492492937, 0.0004630261399607929, 0.00046873888385791726, 0.00047451435387175345, 0.0004810917727417828, 0.00048714076180081926, 0.0004932030804910279, 0.0004993878215756866, 0.0005046055538082898, 0.0005086741442352531, 0.0005121751205028374, 0.000512514991809792, 0.0005133802551965226, 0.0005105716717508559, 0.0005058306381212114, 0.0004971385150697174, 0.00048628770489740245, 0.0004736907912614365, 0.0004548177876306986, 0.00043535817895489366, 0.00041113455159641726, 0.00038351068320454073, 0.00038569712992537857]

===========================================================================================
python3 delay_tomography.py 2 6 uniform 0.5 1000000  succeeded with stdout:
i_max is 24
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.07989941267072424, 0.07621721949201232, 0.07374418937919283, 0.07769142504516091, 0.07434565840413017, 0.077202760243123, 0.07846940416024488, 0.07544605868245609, 0.0749918793910326, 0.07519243057266942, 0.07887133136387219, 0.0752002312825494, 0.07243987530881815, 0.0006738020760965492, 0.0007754836240366754, 0.000757273965693552, 0.0009584979341114071, 0.0010412392914516796, 0.0007513444714964099, 0.0007871570143267053, 0.0009087084567489457, 0.0007023164354342037, 0.0007957131950006273, 0.0009318780024996779, 0.00076960215920797]
1 [0.07049876186541074, 0.07970757532158992, 0.07989550870183174, 0.07549423364399835, 0.0763333709908864, 0.07647324239185041, 0.07578709474455503, 0.07731258536478343, 0.08021208074477172, 0.071255243489663, 0.08234750654495224, 0.07723115864889377, 0.07014700542181093, 0.0038116720679915233, 0.0020209247077478724, 0.0009187671170280511, -1.655497350469624e-05, 0.00033286881547189075, -1.94122895713206e-05, 9.852768348892037e-06, 2.7100523999808545e-05, 3.015069396472003e-05, 2.7076747485191714e-05, 2.9887114376458148e-05, 6.555258460500698e-05]
2 [0.07214446178852485, 0.07680072725587087, 0.0784261499186279, 0.07845052610764629, 0.07622454252251887, 0.07559217264823045, 0.07744778002623687, 0.07662931034588394, 0.07787139640647919, 0.07591150204455707, 0.07690986363554929, 0.0784443956186989, 0.0714440228184739, 0.00590947848323294, 0.0016031336103675853, -2.861647427169941e-05, -3.21579519849294e-05, -9.844411973838262e-06, 1.455175203748146e-05, 2.3257966430571008e-05, 2.803721430751177e-05, 2.920092173891536e-05, 2.672030359524854e-05, 2.2919315825306915e-05, 5.9523436385479157e-05]

===========================================================================================
python3 delay_tomography.py 3 6 geometric 0.5 1000000  succeeded with stdout:
i_max is 134
inferred probabilities for tree Root = (7), left=(Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))), right=(Root = (6), left=(Root = (4), left=(None), right=(None)), right=(Root = (5), left=(None), right=(None)))
7 [0.14842157931775168, 0.11729675835607874, 0.10744300348569445, 0.09039436435373807, 0.06046410244146335, 0.08945521820284962, 0.035788969556852665, 0.05441494202829465, 0.037936146765641415, 0.0329300461367293, 0.03062887262555311, 0.022502752028122117, 0.028631358743468477, 0.01245576366483787, 0.009591747852599326, 0.024289986493319708, 0.00024617108094261903, 0.020483731468294287, 0.0023192504107042346, 0.005778468669777589, 0.008537407156079535, -0.00038447909366225483, 0.01690810969004847, -0.0005863521534742685, 0.005657740841662924, 0.004537385134819958, -0.0005247522030890266, 0.009710615845474183, -0.0003590273213408822, 0.0018529141227820642, 0.0016099443231104914, 0.00017232181394224034, 0.0006550405115421649, 0.00015206887091313506, 0.0004044202718272629, 0.00026191333403372897, 0.00017859852090337884, 0.0010451834502912833, -1.4125859594541639e-05, 0.0003891179288001842, 4.791781834844556e-05, 0.0006415983065525296, 3.2122276444221046e-05, 0.00024188550638496007, 0.0003811480168424789, 1.3051936458281726e-05, 0.00031281744061016517, 0.00015132173740806042, 0.0002303331124978041, 0.00020399170004902853, 0.00012443091277035856, 0.00028688719295637635, 0.0001440097117196111, 0.0001937792905303828, 0.00020197426689405113, 0.00017832255768056315, 0.0002475699841447433, 0.00011736589737189341, 0.00018165363643148078, 0.0002616098142767052, 0.00014592037406654517, 0.00018764582491604453, 0.00020071603385574647, 0.00015362271187624628, 0.00022427258647755095, 0.00017947078612455747, 0.0001627216255716802, 0.000216161652727267, 0.00017646242253739817, 0.00019824798026165855, 0.00016841384417281717, 0.00019746061959966319, 0.0001850402465953976, 0.00018157817437543112, 0.0001949875651512695, 0.00017981230762520404, 0.00019534351984051322, 0.00017756712300468562, 0.00019365912072669275, 0.0001893920665187683, 0.00018150053311082116, 0.00018480261727076965, 0.00019237997791417586, 0.00018304056773589067, 0.00018983831112468567, 0.00018062661837304518, 0.00019092920523387457, 0.00018666252008747768, 0.00018453667961022265, 0.00019253956253948248, 0.0001836595791880528, 0.00018542023864234124, 0.00018632967159808462, 0.0001867558989407003, 0.00018816984229019567, 0.00018513685444838482, 0.0001874417784584058, 0.00018673921741879177, 0.00018643327182957405, 0.0001867043404727798, 0.00018639256504717844, 0.00018732249425586239, 0.00018614439614908588, 0.00018674307842954997, 0.00018679722963003704, 0.00018655455377906735, 0.0001868167834767661, 0.0001864182280628051, 0.0001869572374924265, 0.00018650449899457688, 0.00018661989666316246, 0.00018680025334336678, 0.00018657245077136205, 0.00018673191837735467, 0.00018661769971348868, 0.00018667468821677942, 0.0001867168299287161, 0.0001866038093388849, 0.0001867060543270507, 0.00018664426719978785, 0.00018668783045516793, 0.0001866526283972412, 0.000186670176047412, 0.00018668237178579044, 0.0001866517988183046, 0.00018667020181678675, 0.00018666913395942996, 0.00018666849342189663, 0.00018666866959667842, 0.00018666046139596376, 0.00018667558511393161, 0.00018666209508545696, 0.00018667162772367967, 0.00018666806006566072, 0.0001866650833109766]
3 [0.13717337266724428, 0.11947388075839481, 0.11066697886133478, 0.08786989593976718, 0.07283627926199154, 0.05144666533834416, 0.07454617785899692, 0.05254345668143615, 0.026422524478063203, 0.031586911196756454, 0.0414338546073722, 0.029281952049281055, 0.006525857029522129, 0.030450651633798596, 0.008735198042729188, 0.014454742349908607, 0.013488036412577122, 0.010781533267067118, 0.013508690447548597, -3.2641388875713005e-05, 0.004341268036570797, 0.010670197924490218, -2.465972650812619e-05, 0.00020267972870061083, 0.01003297563670347, -8.67403126101553e-05, 0.00015519214430936417, 0.000980012318746432, 2.445239759528699e-06, 4.237240308782147e-05, 0.0006904782448513638, 0.0001619903736102578, 0.00025045833935607824, 0.00031323709338523266, 0.0003640080164151753, 0.0003565464422677361, 0.00041633440649816047, 0.0003927456460142168, 0.0004209137433609237, 0.0004177198513103531, 0.0004236295436033754, 0.0004246163729077615, 0.0004175408470246624, 0.00042910524592131174, 0.00042129658577288564, 0.0004110247055347742, 0.00042300530695046944, 0.00040226456598396553, 0.00041465153903625783, 0.00039800764975368356, 0.0004046065171269458, 0.0003953396896487891, 0.00038647394280143525, 0.00039843150354645907, 0.0003791749592734994, 0.0003885403760056272, 0.0003803065999216583, 0.00037603387964068376, 0.0003809514123554968, 0.0003712467932097976, 0.0003758747501845778, 0.00036931182908430055, 0.00037268258230966104, 0.0003681376033634737, 0.0003680797797176847, 0.00036773185618511667, 0.0003658496629299649, 0.00036610220879972207, 0.00036538216663702935, 0.0003643720128099897, 0.0003650607560662715, 0.0003618332515393181, 0.0003660325450181574, 0.00036149134061907074, 0.00036410923015386487, 0.00036179111172836135, 0.00036422400320932605, 0.00036126560024249085, 0.00036251905635789334, 0.00036291498026997575, 0.0003618202685117249, 0.0003616376689464741, 0.00036264781342533047, 0.0003615628412876602, 0.00036249839966460767, 0.0003602688025477618, 0.00036356427089581146, 0.0003602240295466601, 0.0003623187873543474, 0.0003609273483282957, 0.00036207889153626164, 0.00035974719159641424, 0.0003631383292614699, 0.00035951481004830384, 0.000361165450870616, 0.00036087417158392715, 0.00036148503961606443, 0.00035924144958456256, 0.0003619597280620175, 0.0003596839655359311, 0.0003619685201478666, 0.00035850279101272425, 0.0003649314986273938, 0.00035875942365534816, 0.0003638544480103665, 0.00036401439937647174, 0.0003648754205258643, 0.0003654401688425056, 0.00037161693702290205, 0.00036928979789725377, 0.00037629257435307955, 0.000377750703784, 0.00038517022931801423, 0.0003839778308687106, 0.0003968472394944733, 0.00039746834035539225, 0.0004068905230953672, 0.00040937661584400766, 0.0004228879975560379, 0.00041943061776858795, 0.0004333322672987862, 0.00043455523650246604, 0.0004425719067171521, 0.0004373694637896219, 0.0004504587634584995, 0.00043861905331957766, 0.00044349641298245133, 0.00043275654457013087, 0.00043453786256333107, 0.00040993497302233836, 0.00040996997024761006, 0.00038538687873539704, 0.00036991307091056207, 0.00034299482316478834, 0.0003437988242794726]
1 [0.11562804377473565, 0.12069255716847403, 0.1133843748447657, 0.09600182540480491, 0.07994926321495785, 0.0667133012013612, 0.052682495275713385, 0.04599897207445153, 0.039030962205984863, 0.03770190716383234, 0.03003248526340149, 0.024853901450432796, 0.020342588968341967, 0.019377151512005128, 0.019830353016641947, 0.016161104276496405, 0.010039249679668377, 0.00615932156552428, 0.006946968000043523, 0.008278299705837593, 0.007482570236257967, 0.005518890073549444, 0.005158321558565595, 0.004351634630779569, 0.0020124934086748775, 0.001127894956794084, 1.1746811191519439e-05, 5.436360962598982e-05, 8.952510561054931e-05, 0.00012067459586288802, 0.00015052384658248156, 0.00018035788354463613, 0.0002090206260625366, 0.0002369816879062206, 0.0002638463785389712, 0.0002890786540161558, 0.0003129169652347423, 0.0003351501588789138, 0.0003550365919955502, 0.0003732590275471832, 0.0003895814833535881, 0.0004040725097142307, 0.0004166252577750632, 0.00042736703677002935, 0.0004366705677819041, 0.0004441947284282253, 0.00045042329981157165, 0.0004549454667378093, 0.00045818426973172295, 0.0004605556514885423, 0.0004620498278378767, 0.0004626820747387731, 0.000462561261137528, 0.00046171141312355225, 0.00046008782293214666, 0.0004582531738249846, 0.00045603318138682456, 0.0004536613778760159, 0.0004508648601539138, 0.0004480908703720668, 0.0004450491733390208, 0.0004419312267706055, 0.00043882008096699545, 0.00043558341437475756, 0.00043252952767042923, 0.0004294458534611328, 0.0004265554943677873, 0.00042363975306535786, 0.0004209726024570532, 0.0004182780774539139, 0.0004157410948193399, 0.00041360989297248096, 0.0004112455464426945, 0.0004092473874358051, 0.00040736795902085416, 0.00040539362890445503, 0.0004038901801018104, 0.0004026414001096072, 0.0004012247318748819, 0.0004004845195582895, 0.00039932635537383873, 0.00039917959221690187, 0.00039862213617656564, 0.0003982439941907687, 0.00039868374706575815, 0.00039879882124560235, 0.0003998029095144981, 0.00040089192339597314, 0.0004017787901698167, 0.00040352982952210044, 0.00040581145053513346, 0.0004075058849636551, 0.0004100743764972866, 0.0004135745729973199, 0.00041674426094318934, 0.0004198922835613286, 0.0004245086200775587, 0.00042853533869357, 0.00043233526635375416, 0.0004381503806670669, 0.00044281087314386247, 0.0004465268858165034, 0.0004535755288007834, 0.00045729439555701495, 0.00046213160078647456, 0.0004693898959058273, 0.00047329060412021134, 0.00047714292447336614, 0.0004827475231490632, 0.0004856360330333466, 0.0004884474598523354, 0.0004929617387713805, 0.0004944414534689133, 0.0004956746723649983, 0.0004969355293531345, 0.000497661442295999, 0.0004919525306355237, 0.00049199121496724, 0.000490001024123856, 0.0004835028573681533, 0.0004797390436433421, 0.0004715261984720308, 0.00046409599020385314, 0.00045285407619042526, 0.00044498381881448673, 0.0004357700049508939, 0.00042182166898128726, 0.00040549536735199243, 0.00039352965136303186, 0.0003785298060842397, 0.0003652894428644005, 0.00035224439382073485, 0.00034991124194769306, 0.0003621218170255069, 0.00038443523950262935]
2 [0.11442286928232115, 0.12048237300595337, 0.11279307899120365, 0.09611328184712084, 0.08109416387837032, 0.06857669324527416, 0.05623022311518076, 0.04582773767571421, 0.039626648519296676, 0.03233395234651444, 0.030167824245433055, 0.02624263198830779, 0.01904248895973877, 0.018615222938117904, 0.0157142705245424, 0.015147796962174227, 0.013460105430388988, 0.00993722119031383, 0.006646869617758317, 0.007390736849443206, 0.007881341448018307, 0.006538115424405256, 0.005721211039058537, 0.0033279334585728723, 0.0013623753587561033, 0.000528648243829053, 2.48483878796616e-05, 6.487372132473382e-05, 9.837597241971575e-05, 0.00012994894055164813, 0.00015996768607847323, 0.00018936480496087538, 0.00021819503217317807, 0.00024621802176284433, 0.00027366432841715086, 0.0002990113764344061, 0.0003224851640972545, 0.0003441520457360575, 0.00036364919110307137, 0.00038152193227024164, 0.00039679673173067116, 0.00041031117390488963, 0.0004220065486621633, 0.0004320262357589735, 0.00044090063435760863, 0.00044812536864805393, 0.00045349539735489524, 0.00045789496583952894, 0.00046072631168444546, 0.000462526247303607, 0.00046347569725446616, 0.0004635895719738602, 0.00046326511559974097, 0.00046243069324015533, 0.00046086988256894743, 0.0004589508079783851, 0.00045657611141278973, 0.0004540541514065897, 0.00045115843489322495, 0.00044833342660799473, 0.00044538043766589587, 0.00044225696973159193, 0.00043914231951215334, 0.00043595435537538435, 0.0004327896153017573, 0.0004298199528787017, 0.0004268978736982646, 0.00042402263025385505, 0.0004213781472065911, 0.00041872346708006735, 0.000416190707459612, 0.00041407148446673573, 0.0004117622143145311, 0.0004097428277761825, 0.00040782994092116484, 0.00040584290059741946, 0.00040438272502791396, 0.0004031494410397712, 0.0004017642517882896, 0.00040100954895929124, 0.00039981579560433635, 0.0003996738723770852, 0.0003991254640995873, 0.00039876634012871734, 0.0003991844089411569, 0.00039925692251364475, 0.00040027786070634104, 0.0004013579923316987, 0.00040226986356590164, 0.00040400857063957923, 0.00040627462413683833, 0.0004079677522573962, 0.00041053162558030116, 0.00041402467403508136, 0.0004171703745862867, 0.000420317640953887, 0.0004249306073721457, 0.00042896890248007174, 0.00043276475344029353, 0.00043856624856514, 0.0004432265215681315, 0.0004469565078013841, 0.00045398666551364097, 0.0004577206840301995, 0.00046256568699872463, 0.00046979327529645835, 0.0004737169031212051, 0.00047758655907044413, 0.0004831836105581645, 0.0004860984966243483, 0.0004889280587004339, 0.0004934406843722884, 0.0004949469673875675, 0.0004962058506172508, 0.0004974881567151023, 0.0004982402331390616, 0.0004926173590180623, 0.000492664473412243, 0.0004906988479253027, 0.0004842646152644937, 0.00048053191519112105, 0.0004723842857042358, 0.0004650052572193556, 0.00045383798251618615, 0.0004459997764010655, 0.00043682923175560615, 0.0004229657476922561, 0.00040673832983502043, 0.00039481273729779343, 0.00037987359055499615, 0.0003666619848951336, 0.00035362876718578266, 0.0003511877036649051, 0.0003631543370175138, 0.0003851572600636808]
6 [0.1352926941060696, 0.12096255957937511, 0.10799009466130702, 0.07507147205255671, 0.09700378143173621, 0.04348916045902111, 0.07892005362786919, 0.036119043316150776, 0.040275029161501844, 0.0413605050203817, 0.02533174695471791, 0.02446204991326969, 0.020962666031872704, 0.01961334294638056, 0.014744879350430225, 0.012773522670982607, 0.007334673076491563, 0.02234016048608989, 0.0026352097853664666, -3.231893668946464e-05, 0.011183308165669967, 0.005714817589071623, 0.0036247016035983216, 0.005045781242860937, 0.002773240571512664, -8.34912577495478e-06, 0.003768965224497096, -2.4907594118881405e-05, -1.8163557603520996e-05, 0.0014821349140683212, 6.06436389505987e-05, 0.00012549459674833564, 0.00020401496183085848, 0.0002559020339867666, 0.0002889902445189442, 0.0003376089494537364, 0.0003584418914236398, 0.00037245064462384744, 0.0003945798113089056, 0.0003978807044537966, 0.00040887117868094075, 0.0004066598410668312, 0.0004198174524924985, 0.000411311387185233, 0.0004071115957824936, 0.0004154300922162206, 0.00040295036907377036, 0.00040768508463020077, 0.0004011296909345632, 0.000396305733826192, 0.00039835671334911084, 0.00038179268623619454, 0.000395880920521785, 0.0003789836531665025, 0.0003822781732899631, 0.0003811334986683973, 0.00037123699134107764, 0.00037744663320933927, 0.0003700754651437499, 0.0003694460069526956, 0.00036905316278391904, 0.0003658242403231385, 0.0003669029627754544, 0.0003627514303529085, 0.0003639694797979371, 0.0003622080338593534, 0.0003613399850164702, 0.00036180360573296493, 0.0003598951484708689, 0.00036066729845778557, 0.00035864361795186683, 0.00036019899607261875, 0.00035852326487591734, 0.00035846057483816666, 0.000359992615583062, 0.0003572389973021384, 0.0003599196422060169, 0.0003575528608858359, 0.0003592714216859572, 0.00035836725020429707, 0.000358731073478739, 0.0003585088308599658, 0.0003594899008386444, 0.00035849153183342263, 0.0003598817950365784, 0.00035839543181331033, 0.0003612639933477338, 0.0003586796422402249, 0.0003606801732499284, 0.0003604392914334603, 0.00036153207053388344, 0.00035977873708664085, 0.00036349489802549523, 0.00036050693799278167, 0.00036322045952438906, 0.0003628401552371606, 0.0003642161657188465, 0.00036343806750720805, 0.0003659927577829646, 0.0003653672515764952, 0.0003675815861439478, 0.00036630895100831293, 0.0003719638895159058, 0.0003685093373564587, 0.0003736537067274135, 0.0003748945826061228, 0.00037712361442886005, 0.00037904162256627413, 0.00038521163955310275, 0.0003853759223799374, 0.00039252773589870866, 0.0003951987778287007, 0.0004036676435176072, 0.00040379005624138244, 0.000416487325560637, 0.0004186898315784692, 0.0004281736512225675, 0.00043220917973097465, 0.000443764524431625, 0.00044337227768905137, 0.0004547889237919738, 0.0004566626669650165, 0.00046420629664246905, 0.00045915498146724296, 0.00046935045412883084, 0.0004583128391160795, 0.0004607762561029446, 0.00044920292511630935, 0.0004472625385582133, 0.00042416744289359423, 0.0004184011363416594, 0.00039285422735639656, 0.0003755788752871571, 0.00034526063887930277, 0.0003398722756066282]
4 [0.11643743798194335, 0.12257080193163372, 0.11253796680888635, 0.09589306366002683, 0.07998931029672396, 0.06767409566003468, 0.055344498310373046, 0.046905688388076086, 0.03749338468751935, 0.03285905471891074, 0.030654775483732015, 0.026211199325473535, 0.020353784592815272, 0.018492745364751748, 0.016350481266679366, 0.014541274725602236, 0.012134529466322184, 0.008807632871385616, 0.006034677618353771, 0.006923694663870937, 0.008770414623387514, 0.007843703517166272, 0.006616775326508138, 0.002667579311958652, 0.0013787291303550874, 0.00017174082873807104, 2.8014932008549838e-05, 6.879003831053215e-05, 0.00010415547148425215, 0.00013602639468122832, 0.00016657715970824056, 0.00019592157755985478, 0.0002254328289976163, 0.0002537179726134799, 0.00028010447603306777, 0.00030441433140135555, 0.0003272711926445128, 0.00034819181129605256, 0.00036737728254683603, 0.00038433123018064876, 0.000399146720920325, 0.0004119613356822836, 0.0004232468768960323, 0.00043278413223293047, 0.0004408275308021145, 0.0004478047457539527, 0.0004533232351217365, 0.0004577323851327912, 0.0004607303336957835, 0.00046301897257507065, 0.0004641834083430077, 0.00046488025218891833, 0.0004646152755478508, 0.00046372764844765114, 0.0004620455685967285, 0.0004601190705173702, 0.000458029344667836, 0.0004554215047442242, 0.00045269973567704314, 0.0004496411308473097, 0.0004467287900757695, 0.000443517016037371, 0.0004402700966363268, 0.00043716640824201724, 0.00043389119449897676, 0.00043077581714330755, 0.0004276478932055571, 0.00042469888059935276, 0.0004218474035330198, 0.00041916162699075514, 0.00041638409002810693, 0.0004141512646446528, 0.0004115269083552987, 0.0004093647812756761, 0.00040701645212888143, 0.00040521758391873176, 0.00040330706957856637, 0.00040183316508749233, 0.0003998523471140932, 0.000399057576362976, 0.0003975112350347784, 0.00039714924422004264, 0.0003958475023590626, 0.0003959697194041961, 0.0003949478752361984, 0.00039552547184372726, 0.00039529677813510545, 0.00039632267746804765, 0.0003969950140545306, 0.00039817208885524946, 0.0003994039500005795, 0.0004015236561546484, 0.0004044330141709267, 0.00040527173242307815, 0.00040904689093498045, 0.0004122757499504619, 0.0004162555877493702, 0.0004183781656224938, 0.0004240731275011267, 0.0004266363970793818, 0.0004329052580856373, 0.00043696493291899366, 0.0004422042652099652, 0.00044515829154280316, 0.0004525415134276249, 0.000453976291217864, 0.00046224189883019664, 0.00046436428392208705, 0.0004691649567094977, 0.0004731857502498463, 0.00047550324363890365, 0.00047709277546301783, 0.0004807529854312803, 0.00048189383415867535, 0.0004839136329151068, 0.0004840034406324485, 0.00047952368934225996, 0.00047626118275820317, 0.00047817339312875246, 0.0004713583535734228, 0.00046736975851681536, 0.00045964783279885986, 0.0004533311861789263, 0.00044315709641274504, 0.0004373947431572672, 0.00042268208811297185, 0.00041470686550079433, 0.0003993010704388977, 0.0003839147606243824, 0.0003707249201404362, 0.0003579614639433723, 0.00035113456925011364, 0.0003513362653497754, 0.00036946759062083843, 0.0004004683640999267]
5 [0.11710431527699328, 0.12096817082285038, 0.11153536749137444, 0.09705226677676318, 0.08091400000350434, 0.06528859649221927, 0.053919135344929064, 0.04647910610471685, 0.04162098065641674, 0.036539926874030654, 0.029642525826662623, 0.024906917903985765, 0.018194984557007205, 0.01939929425611216, 0.019162853121178304, 0.014367780006606268, 0.010764268208761325, 0.00868808323148294, 0.0064139731819542155, 0.00491971399128772, 0.007242356664395369, 0.005467632703277237, 0.0062292352207442125, 0.004749530621851995, 0.003571932765990984, 0.0010124771125127408, 5.723480346185075e-06, 4.979602678565462e-05, 8.565015919880398e-05, 0.00011701640311574202, 0.0001469678724062599, 0.00017502699447571592, 0.00020354804211840684, 0.00023085267871041776, 0.00025760087068708485, 0.00028264464250989216, 0.0003072168960011047, 0.00032931523892193286, 0.0003496201989054919, 0.00036795618150404857, 0.0003842043865839276, 0.0003989416922702797, 0.0004115095686059428, 0.0004225144519029896, 0.0004315110936012465, 0.00043960770233676303, 0.00044612494300687696, 0.00045152775081668813, 0.0004554432289943863, 0.00045829678779471685, 0.0004603668485916758, 0.00046156201411647817, 0.0004616968860447901, 0.00046120340204917985, 0.0004601437606402518, 0.00045834116013661504, 0.00045653560118624677, 0.00045419367185335125, 0.0004516480326936376, 0.00044869170264921223, 0.0004458901384169469, 0.00044264976333831935, 0.0004396114065934371, 0.00043642564523567305, 0.00043319099208375083, 0.00043014658895571906, 0.00042698543496240676, 0.0004239930134805252, 0.00042114842786815756, 0.00041841613696326843, 0.00041557457975512785, 0.0004133310277494756, 0.00041072756830472804, 0.00040856959129964435, 0.00040615053904621633, 0.00040429180558055206, 0.00040235919407810024, 0.0004008952683563172, 0.0003988891018281708, 0.00039808573972870457, 0.00039649312433446036, 0.0003961491960252343, 0.0003948124750386405, 0.000394949968790818, 0.00039393569886650594, 0.00039452175624343886, 0.00039426728498869195, 0.00039530262805929754, 0.0003959605221428348, 0.0003971674410015276, 0.0003984004280349537, 0.0004005207283451056, 0.00040344540291509105, 0.00040427314594432284, 0.0004080473124238249, 0.00041128717985295624, 0.00041527779663705323, 0.00041739920008734355, 0.0004231121900773902, 0.00042567376896381743, 0.0004319583804967752, 0.0004360078321788461, 0.0004412402221344868, 0.00044418180577237925, 0.00045158791372261893, 0.0004529873302584169, 0.00046127551645947217, 0.0004633644581875529, 0.00046815286599078364, 0.0004721487045886547, 0.0004744230858506565, 0.00047597077378740507, 0.000479602263414901, 0.0004806957252305131, 0.0004826689301866429, 0.0004827004229461877, 0.00047811526300773493, 0.0004747691115851057, 0.0004766289676743724, 0.00046969730385076187, 0.00046560884020085757, 0.0004577662581417819, 0.0004513359529529937, 0.0004410256214251387, 0.0004351601923706832, 0.0004202806887178008, 0.0004121999936408586, 0.00039663553132469675, 0.00038110989192451984, 0.0003678077139929743, 0.0003549588890197423, 0.0003481047735409685, 0.0003483585788138909, 0.0003666819944702112, 0.00039797218333687126]

===========================================================================================
python3 delay_tomography.py 3 6 uniform 0.5 1000000  failed with stdout:
b'i_max is 36\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 geometric 0.5 1000000  failed with stdout:
b'i_max is 165\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 6 uniform 0.5 1000000  failed with stdout:
b'i_max is 48\n0\n0.000122\n0.000119\n0.000241\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 7 geometric 0.5 10000  succeeded with stdout:
i_max is 85
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.16230476119006632, 0.06975076052351126, 0.0833802149741724, 0.10568609434231375, 0.06040211332014121, 0.03857739597831153, 0.09449462456132571, 0.046709900080139075, 0.012185143814675307, 0.05098266751506982, 0.04025036343877875, 0.014110231171369121, 0.01903373328863766, 0.026899478859873736, 0.017905872522767728, 0.0017201087457023516, 0.035351390297451275, -0.00013844893421911732, 0.007606300737388821, 0.015159314543394928, 0.01736967546118178, 0.002204802590573327, -0.00012411853074328498, 0.011335633813720797, 0.013889560521469906, -0.0003778637417572393, 0.02121209332467161, -1.1896237945733044e-05, -6.39065342496839e-05, 1.260343091094419e-05, 0.00971356224324018, -3.843782816468266e-05, -9.849086763001197e-05, 0.008966847604831785, -0.0001151893144513283, 0.003442390858866359, -0.00015978201853532084, 0.0057078317272588365, -9.526859346903793e-06, -9.817222957968857e-05, 0.0014085647014858839, 1.941498284899705e-06, -9.07383774152749e-05, 0.003074661196156084, -3.815761446435569e-05, -4.59699265759013e-05, -1.760032060157261e-07, -3.141587914668182e-05, -6.684072852648201e-06, -6.096546505320822e-05, -1.276842124155511e-05, 0.00019070282026407772, -7.59982842790038e-05, -1.1629693027754833e-05, 0.0008785077771646938, -7.417161893916749e-05, -1.7515505919372928e-05, 0.0005743440622462362, -4.769018867500601e-05, -3.947169669587409e-05, -1.6818171161981856e-05, -2.3503533345882556e-05, -2.90689649049226e-05, -3.4422418765729975e-05, -1.414576885681871e-05, -3.254183897047819e-05, -3.2931781139004995e-05, -8.58796284993749e-06, -3.481851440260983e-05, -3.081723353225082e-05, -2.2605178485320366e-05, -2.5676108210316734e-05, -2.9381673575327095e-05, -2.4905993530381758e-05, -2.5143268707462984e-05, -2.8029441763997557e-05, -2.722797618017299e-05, -2.4900998941769424e-05, -2.5693095287689566e-05, -2.7921147012939687e-05, -2.6316055419451397e-05, -2.5605718289035604e-05, -2.6668934662232104e-05, -2.662357707273684e-05, -2.629243858964858e-05, -2.5693793599998094e-05]
1 [0.09968851139339652, 0.12141865403403139, 0.11828191357747783, 0.07744530518722312, 0.06499290360180447, 0.06942657070524294, 0.04317974414328846, 0.03129392697721288, 0.05501034639296718, 0.0684819995573627, 0.03815352709140038, 0.013182301865065034, 0.017774757574978046, 0.012877302433990838, 0.011947271091867539, 0.034016394274414795, 0.010586783564249025, 0.012457078813705589, 0.0019307395501537564, 0.009122689923732486, 0.020549238224534923, 0.008717011428810165, -2.3765013192989134e-05, 0.004297491081850517, 0.007349903788424641, -1.730968629737267e-05, 4.345892674797793e-06, 0.01195120511099082, 0.000655304532626152, 0.0017945634659120593, 1.8452262860972886e-05, 0.0033586007246837225, 0.0017332608432936614, 7.562158749598963e-06, 0.0002519691695224262, 0.0027095820000944074, 0.00011987762171809556, 0.00013595499893752307, 0.00019729480149587055, 0.0002978779671403408, 0.00033815673328554686, 0.00035126299382905077, 0.00042988935252880083, 0.0004679072644371532, 0.0004586346651308456, 0.0004908599357242808, 0.0005318080326495995, 0.0005181464104889943, 0.0005296798020168868, 0.0005477938384276439, 0.0005495929448574792, 0.000535895189699211, 0.0005602530827200061, 0.0005589651081324724, 0.0005408337022964439, 0.0005517839392743813, 0.000574062074510009, 0.0005601831610172929, 0.0005471505859719809, 0.0005656076717117523, 0.0005774666754126971, 0.0005526969691344048, 0.0005644150742764025, 0.000585999844082744, 0.000571587488031679, 0.0005763581778497353, 0.0005820396813158564, 0.0005857792506660997, 0.0005914458694941114, 0.0005887690316736444, 0.0005934272790336751, 0.000588393397042298, 0.0005918113192111077, 0.0005952954494763526, 0.0005760018211306075, 0.0005772932978075367, 0.0005718682949944474, 0.0005589416671023262, 0.0005390994721000252, 0.000516754980747414, 0.0005083456810108595, 0.0004759897646303748, 0.0004457868656764307, 0.00041202947437800726, 0.00039446209297603756, 0.00038224065016309144]
2 [0.09426621511883142, 0.11198448133173389, 0.12286224407968277, 0.08948368491614632, 0.05877322664245505, 0.07159866961853537, 0.06306378487549864, 0.025439794212198413, 0.021157905968620466, 0.057043512695371924, 0.06388454781552623, 0.012415705039838028, 0.00014677288763851164, 0.02906566701291034, 0.048909171934170034, 0.0062328128456721876, 0.009980787183440334, 0.008598886291255868, 0.02579394239963852, 0.0017638136569166007, -3.619165305753125e-05, 0.005797032593081365, 0.02184646721788728, 0.0026304356868484743, 0.0029104711146613585, 0.010990596810206662, 1.7970419559784456e-05, -2.0746031921958967e-05, -2.4233906431197414e-05, 2.8725611573740013e-07, 0.0029323619159203214, 0.0010560284454719997, 6.252867920885914e-05, 0.0012166350826231331, 0.00016228746764479794, 0.00023916811318961135, 0.0002749831973313724, 0.000333606574015693, 0.0004296962770248618, 0.0004441995313204477, 0.00047881922344516695, 0.0005255126058101953, 0.0005374551127724095, 0.0005447540185136185, 0.0005762726029561332, 0.0005639155813740671, 0.0005630107864363543, 0.0005760562143399412, 0.000592255785410141, 0.0005624810542589095, 0.0005740570319671423, 0.000581152471949906, 0.0005858655506668095, 0.0005694576553543593, 0.0005697847360674722, 0.0005902877107199498, 0.0005775834182451993, 0.0005606586661118793, 0.0005951025192141577, 0.0005762237497348281, 0.0005736943986593775, 0.0005936996518410534, 0.0005786220760130856, 0.0005899314185822315, 0.0005938471241447193, 0.0006022130169375654, 0.0005912645743007313, 0.000596686511211383, 0.0006143370663292143, 0.0006066334689402179, 0.0006011582656921103, 0.0006058286480790033, 0.0006165453465050152, 0.0006070164552368187, 0.0005908323817642683, 0.0006048969306297032, 0.0005914225796897537, 0.0005747143604917914, 0.0005697534154712154, 0.0005402875308373095, 0.0005309112767979474, 0.000503256254306613, 0.00047412030262522595, 0.0004396371299576044, 0.0004174510441734118, 0.00041640077978662734]

===========================================================================================
python3 delay_tomography.py 2 7 uniform 0.5 10000  succeeded with stdout:
i_max is 28
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.05714069687099911, 0.016468550029043027, 0.06812758552487001, 0.05554966179694554, 0.04453002666983223, 0.03907742157597047, 0.06840097408620129, 0.03478036274110313, 0.04652302996532777, 0.06219453131622232, 0.045252843968731665, 0.010741564740571604, 0.08714931594993504, 2.0541967777646967e-24, 0.10018201359992009, 1.5931955858807168e-23, 0.05956322910561836, -3.95790571750919e-23, 0.0297435709694238, 1.593195546399153e-23, 0.05737256116084111, -2.010525527414811e-24, 0.03871278288934768, 2.0541957500884783e-24, 0.03665790501125525, -3.1449641716378895e-23, 0.019789706814676292, 2.0541959910223144e-24, 0.022041665213164408]
1 [0.04941794791196238, 0.08629099155902066, 0.07362482876989342, 0.04474812017937562, 0.05237208687897366, 0.09809649609683918, 0.07301159344900236, 0.047751127821133305, 0.06957149554198969, 0.06023935399255067, 0.062191804476887894, 0.06659177504721102, 0.07859452225335876, 0.07570433711332385, 0.03927006859710161, 0.01308464171326005, 1.5256017973404682e-21, -1.9931124507469423e-21, -1.1225762371042028e-21, 6.283160277780403e-22, -1.2665306668971323e-21, 0.00689962169477534, 0.0025391869033406338, 3.435943433805179e-23, 1.4148240492564905e-21, 2.7335772067271904e-21, -6.086001881596393e-23, 1.5141174876612203e-21, 2.9208601407515755e-21]
2 [0.0680278845928267, 0.075269434290161, 0.0640869791726045, 0.03585415188222969, 0.04887984398566764, 0.09448140160025023, 0.08070486788013229, 0.07047534787084721, 0.06983686329530123, 0.05353281879943029, 0.05388702246069789, 0.08723367843591194, 0.06537253444466523, 0.07861153423456185, 0.05324570208321967, 3.4272013175613077e-22, -1.0861267594494516e-22, -3.447362856918967e-22, -8.665093689586511e-23, -2.310888617352832e-22, -2.4621471132343866e-22, 1.990813710931945e-22, -4.690329446200451e-24, -3.0327405440645973e-22, 9.607802421099838e-23, 0.0004999349714925447, -1.5444548894471131e-22, 8.563069714651557e-23, -6.127975201167242e-23]

===========================================================================================
python3 delay_tomography.py 3 7 geometric 0.5 10000  failed with stdout:
b'i_max is 106\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 7 uniform 0.5 10000  failed with stdout:
b'i_max is 42\n0\n0.0009\n0.0005\n0.0014\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 geometric 0.5 10000  failed with stdout:
b'i_max is 129\n0\n0.0008\n0.0007\n0.0015\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 uniform 0.5 10000  failed with stdout:
b'i_max is 56\nInvalid k.gamma[ 0 ] =  0.0  for node  1\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 7 geometric 0.5 50000  succeeded with stdout:
i_max is 107
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.14217074717313116, 0.09228558217069768, 0.10113642252385502, 0.07533426753876762, 0.07396289930356373, 0.053418063982971706, 0.063639839627874, 0.05007651000967474, 0.0435255851525177, 0.039829369363408376, 0.0272581962581326, 0.030017295274662334, 0.020970728370603965, 0.023548909088337004, 0.014878722718658704, 0.017423615903984627, 0.015408021387455931, 0.008803379804623972, 0.011858626009423518, 0.010128138993742156, 0.006491674895570608, 0.010064686587860656, 0.005567740596017885, 0.0018201776668638032, 0.00829156309807079, 0.0005302524251107011, 0.0041884686132665, 0.0004459830425626044, 0.005543289727961545, 0.0005094070768470491, 0.0020710761604778626, 0.002573387897062209, 0.00010323195294487114, 0.00555390075760815, 8.944087990847541e-05, 0.0029333484109628017, 0.0001762525983987367, 0.0012007157479195928, 0.00046636396364253054, 0.00032417213418458094, 0.0005335654013821175, 0.0004239040878872421, 0.0005114719878792861, 0.00046144129249486507, 0.0003488841651954757, 0.0004424064503451674, 0.0004628361487058233, 0.0003191739185989831, 0.0003059961041123951, 0.0003314691294749916, 0.00042832378275147365, 0.0004114024511384103, 0.00033226043124137705, 0.00044092937644760806, 0.00040156294777368365, 0.00031594477214277146, 0.0003940341548129817, 0.00034151611123126204, 0.00037441977303881164, 0.0003934582204552357, 0.0003026743801253482, 0.0003926776501558565, 0.00033211869884370194, 0.00038298236832930437, 0.00033153168534266124, 0.0004027042301501478, 0.00033680427949506854, 0.0003604431375006255, 0.00036406210645889645, 0.00034540628038807585, 0.0003855957465646516, 0.00034891322804254455, 0.0003631394905596905, 0.0003461599487527978, 0.0003727668410940195, 0.0003469875044797444, 0.0003582340265830572, 0.0003594640278982896, 0.00035720562123943845, 0.00035776285723799974, 0.0003583505357141086, 0.0003584170172958302, 0.0003706490946355177, 0.0003462775941678809, 0.00036043674154957506, 0.00035748304043177606, 0.00035782967057920685, 0.0003713308470970799, 0.00035981757171533004, 0.0003478180722805254, 0.00035920852770418235, 0.00035822015369000205, 0.00035764746975634504, 0.0003578461007254345, 0.0003725826146024473, 0.0003452526609269526, 0.00035916886596401966, 0.00035897869782164967, 0.0003575372247922963, 0.00035759552102822474, 0.0003588815450286838, 0.0003583200243240273, 0.00035687369148799074, 0.00035854014218856964, 0.00035861578380973745, 0.0003573269295236078, 0.0003583296450912827, 0.00035834729566183135]
1 [0.1070168864999742, 0.11268060272332386, 0.1041631509874183, 0.08668614550780555, 0.05651040032752758, 0.0796640167136515, 0.05766386062938943, 0.0361181431209936, 0.054255581772301185, 0.03933817599472394, 0.019603716099571875, 0.032388266372460006, 0.03314476645037706, 0.021882385572467456, 0.008560882709532092, 0.01834050229639106, 0.015181754198989686, 0.013128667598214778, 0.009144149363660068, 0.016588739584245882, 0.005627293253321142, 0.006385268790751041, 0.000518078609034298, 0.0026218761874230593, 0.01049131969971548, -1.1522747574024693e-05, -1.3682067265569385e-05, 0.012804027196837466, 0.0031634343667151787, 1.6633223950148243e-05, 5.2868123138804894e-05, 0.0005319390733070411, 0.0001530419321743263, 0.00020720951192185538, 0.0002749854320691296, 0.0003145394469120507, 0.00035883686666662515, 0.00037755491314282817, 0.00041017460679877764, 0.00043237631331220007, 0.0004473991202663013, 0.00046536756143136885, 0.0004710518647389795, 0.0004834158276739925, 0.0004882990892300981, 0.0004966137286096875, 0.0004961502782699858, 0.0005011675899664243, 0.0005047231119289068, 0.0005011086364671655, 0.0005029818741065194, 0.000502484793009515, 0.0004972525718853699, 0.0004994198872511246, 0.0004972762011559557, 0.0004900880757955085, 0.0004910504761388038, 0.00048579418155142857, 0.0004853491020093731, 0.00047938416583212106, 0.0004802236991858911, 0.00047538514369970436, 0.00047365258887285404, 0.00047452327627229386, 0.00046657622924201866, 0.000470363498365841, 0.000464442423788734, 0.00046592997165178157, 0.00046306883810465574, 0.0004606464631602917, 0.0004629379870232666, 0.0004602578197005445, 0.00046131243495917037, 0.00046166058823251345, 0.0004605860164303989, 0.0004644700529094608, 0.0004629164771859825, 0.00046580211078777075, 0.00046755439240592954, 0.00046941272505458245, 0.00047365125914232924, 0.0004756704740100825, 0.00048117436970878037, 0.0004849157023218881, 0.0004902031974103626, 0.0004962330331333172, 0.000499433128266843, 0.000506560345371346, 0.0005106815152623674, 0.0005155988632605205, 0.000522192908850776, 0.0005240762109360363, 0.0005293612480526078, 0.0005315128873492169, 0.0005328994956253486, 0.0005337003562155668, 0.0005305388652372621, 0.0005300906049887841, 0.0005223055281325961, 0.0005155744316243476, 0.0005038936092813694, 0.0004890792558042114, 0.00047769330111298357, 0.0004575188110807747, 0.000438828405858567, 0.00041396783700648095, 0.00039545467105744306, 0.0003859683674833624]
2 [0.11058385712775294, 0.11613690698142609, 0.09616399284123425, 0.0777757467845552, 0.08707632827905784, 0.0578367886417513, 0.05721343938116161, 0.03737849089535182, 0.03348378321629837, 0.05096454060669285, 0.03724098807501924, 0.029734374276724186, 0.019618524531619226, 0.015023945993195472, 0.023711230647374487, 0.015168745688629469, 0.016044952728005893, 0.009530912741602525, 0.016809960659740178, 0.013288707826593455, 0.00328203875189872, 0.0005521630815082288, 0.008634406106771561, 0.007437098419863349, 0.007998522226805683, 0.0011447228170115946, 0.003927674022712723, 0.0015587748279030172, 0.0010610312449176552, 0.005283015217691417, 0.0025671254294910477, 0.0008602322219617648, 6.896484038463761e-05, 0.00012567154255256705, 0.00019415068707872476, 0.0002380785960904777, 0.0002826762758197798, 0.0003181189864472733, 0.00035552422792876063, 0.0003869757091265206, 0.00041186000172462126, 0.00043500302114346935, 0.0004482219795911307, 0.00046450446106490714, 0.00047416546686011515, 0.00048266894722913335, 0.00048804484170940343, 0.0004927070316379206, 0.0004982696290980573, 0.0004960989843845508, 0.0004980994456453146, 0.0004976894704231878, 0.0004966587444653209, 0.0004969130788265936, 0.0004941183941100034, 0.0004901400922204381, 0.0004902782003487723, 0.0004850831419767147, 0.0004835080976549224, 0.0004795624796795516, 0.00047874513291370097, 0.00047573493470727036, 0.00047301208407461145, 0.0004723573591138184, 0.00046705919901360185, 0.0004688636909972972, 0.0004648829089448419, 0.00046422805596448285, 0.00046325866116019026, 0.0004607196195199971, 0.0004617439637596984, 0.00045951118413683286, 0.00046030014830705573, 0.00046115723735939745, 0.0004596466054019403, 0.00046310590671512784, 0.0004624294294592285, 0.0004652458120318724, 0.00046723534822155736, 0.00046849461903288167, 0.00047278058200032083, 0.00047491681525678746, 0.0004802059657544349, 0.00048349698296588705, 0.0004890663449703271, 0.0004952124467363662, 0.0004982115332744639, 0.0005053435737805551, 0.0005092867111054836, 0.0005145030642945915, 0.0005208711861247437, 0.0005225869195877417, 0.0005280359502546176, 0.0005298927065092304, 0.00053107801330315, 0.0005317117612093101, 0.0005285595583304032, 0.0005274971918966835, 0.0005196553193648294, 0.0005123777436377913, 0.0005003333688295896, 0.0004850483408873674, 0.0004728875850226294, 0.00045225620659898635, 0.0004327320200013277, 0.000407381310400432, 0.000387695576081319, 0.00037722501768478237]

===========================================================================================
python3 delay_tomography.py 2 7 uniform 0.5 50000  succeeded with stdout:
i_max is 28
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.07587286521354121, 0.051412848405559854, 0.05959900262119634, 0.06639508536057925, 0.03891938982444532, 0.07263974196615326, 0.06593887634438254, 0.06984904880394835, 0.045994760904474775, 0.05586116499237928, 0.06259642273624674, 0.047806947959971084, 0.08129711248985104, 0.051263719591271385, 0.06283289640306564, -2.0823683625152027e-24, 0.01647122061438065, -6.988887415951777e-24, 0.033367848677393425, -9.021241259444799e-24, 0.0051544883268194695, -2.5904563597689723e-24, -9.021244602955479e-24, 0.0073866900619587676, -4.1147252846072406e-24, 0.013134153309065654, -9.021241283422626e-24, 0.016205715393315872, -4.1147253072369175e-24]
1 [0.04944321512907763, 0.06670073507910308, 0.07050334536676148, 0.0699719488725249, 0.07218713683005448, 0.07170588153125523, 0.06450170501855731, 0.047307506863432394, 0.07299283330223018, 0.06826782594092129, 0.06942015760340864, 0.06925544934521864, 0.06913362176070197, 0.07073534177980885, 0.04853085277112201, 0.00893117470087823, 0.0027624628543474047, 4.194389456325404e-23, 1.0080298635268973e-22, 3.789959151873867e-23, 2.2133108991755302e-23, 0.007648805250596199, -1.525595861844706e-23, -7.279130385967604e-23, -8.442217619895351e-23, 1.708995346098908e-23, -1.1878721953776036e-22, -4.181512912693254e-23, 6.101681623311502e-23]
2 [0.05422700221721615, 0.059430843179333136, 0.06313289771300755, 0.0905866108103778, 0.07145827373200768, 0.049618455198822034, 0.07254189044253824, 0.05576836278191819, 0.07186966788581178, 0.07629535822836332, 0.05899104795041616, 0.06836712552569624, 0.0628908301787981, 0.06318443975927987, 0.06373886855653002, 0.01789832583988378, 3.369606261483488e-23, 5.2014187206201024e-23, 1.7747097175295666e-22, 5.797755908181011e-23, 1.1097326123079083e-22, 7.499605262994962e-23, 1.273838965069573e-22, 6.295143559323276e-23, 7.144045130514217e-23, 1.4147928213089333e-22, 3.5777620828370815e-23, 1.183084748596871e-22, 1.5310573501961255e-22]

===========================================================================================
python3 delay_tomography.py 3 7 geometric 0.5 50000  failed with stdout:
b'i_max is 145\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 7 uniform 0.5 50000  failed with stdout:
b'i_max is 42\n0\n0.0004\n0.00028\n0.00068\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 geometric 0.5 50000  failed with stdout:
b'i_max is 140\n0\n0.00074\n0.00066\n0.0014\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 uniform 0.5 50000  failed with stdout:
b'i_max is 56\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 7 geometric 0.5 100000  succeeded with stdout:
i_max is 107
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.14051971489479423, 0.09255673334932105, 0.10447441413687271, 0.07814811827239232, 0.0751472474589723, 0.057101463269255526, 0.05713516922935009, 0.04633008942154672, 0.0472877858237174, 0.03602541990352362, 0.023982658349032824, 0.034664398253736246, 0.01860817809956776, 0.024682537133650224, 0.018038208511416194, 0.01408237611886559, 0.01669869522677888, 0.01080611071288988, 0.010048682980802987, 0.010316731726410532, 0.0056672225230140535, 0.009165012878807059, 0.005836690547724453, 0.0032424467944250045, 0.007357865539171185, 0.0017113942018539014, 0.004821578817175978, 0.0005277742017517004, 0.0051347451331561975, 0.0006754630192414555, 0.0026537489308646692, 0.0019313852254533317, 0.00025041543374938724, 0.003540790279272281, 0.0003259866425412847, 0.001562826027394293, 0.00031903981447232603, 0.000979219058190474, 0.0004898118892998433, 0.00032664868878378415, 0.0005599656627352794, 0.0004628505925663707, 0.0005281130228252664, 0.0003781523593608478, 0.0004098659837435253, 0.0004833671430326757, 0.0004356318622961338, 0.00039535262474685144, 0.0003647311592650603, 0.0004145379215855353, 0.000376057657189472, 0.00039480848945726104, 0.0004401114254429451, 0.00036662326747005875, 0.00044688194697024706, 0.000344075002426994, 0.0004308528809419594, 0.00035356241101654965, 0.000398668326090393, 0.00038287450968756023, 0.0003691532993133688, 0.0003993465555760834, 0.0003515331465430405, 0.00040053750401818913, 0.0003546332620210182, 0.00040190480392760577, 0.0003812802210406046, 0.0003823259608964611, 0.00039171431011029143, 0.000368623047489771, 0.00040492296107170865, 0.0003689606135895692, 0.0003793434809867738, 0.0003755744863708022, 0.00038697009740302677, 0.000367870937818022, 0.0003794866362328886, 0.00037995447862150663, 0.0003778859970948598, 0.0003792494333306896, 0.00037856213860975566, 0.0003794695509152385, 0.00038537428822160366, 0.0003792141921473323, 0.0003743632605790313, 0.0003795608209399551, 0.0003788274993382423, 0.0003851230006879354, 0.00037952231298817843, 0.0003742538750602212, 0.0003863751519287354, 0.0003724958983820079, 0.00037972786186650043, 0.0003788353215271439, 0.00038553439694057116, 0.00037298796608754294, 0.00037969222435725087, 0.00037896150714724714, 0.00037865942364703807, 0.00037896503226787044, 0.0003787533557903533, 0.00037925940886544384, 0.0003786945157715673, 0.00037885550357726576, 0.00037894302904685777, 0.00037888012309228024, 0.0003790002421776639, 0.0003787905292981945]
1 [0.11049742184161317, 0.11505285424603717, 0.09667601878564555, 0.08212595710799286, 0.060661210007493596, 0.07580734296957109, 0.06299788237926238, 0.04130533167267145, 0.04433373629037002, 0.03966715901139775, 0.032403052168059256, 0.032079939194673814, 0.019732998618006578, 0.024297500576377362, 0.016150502607195506, 0.016335583443279594, 0.009403585994082331, 0.01768376389460905, 0.010617311226910762, 0.01143469408971089, 0.008664172470056446, 0.005327680288488948, 0.001981730713914388, 0.00398197372000135, 0.00954148916743942, 0.0011028259740653128, -2.1106451160002706e-05, 0.01021772524499685, 0.00249469077450829, -1.707146464078913e-05, -4.42078182456635e-05, 6.262351475018959e-05, 0.0023251957272746415, 4.279931037002795e-05, 0.00011355008617972096, 0.00020926427445793787, 0.00026722898226097476, 0.00032707850450301273, 0.00036334850154887594, 0.0004026913917236095, 0.00042851541703038367, 0.00045599445543990355, 0.0004769919350570912, 0.00047514952254372017, 0.0004977405834988926, 0.0004955820167716338, 0.0005045048966894315, 0.0005087977379105424, 0.000505910139646654, 0.0005103338820855593, 0.0005086378235315834, 0.0005052577949529601, 0.0005055985147518428, 0.0005005625228849696, 0.0005006646205871769, 0.0004990647542564579, 0.0004910783964522803, 0.000493737845133296, 0.0004868578225435202, 0.000487890934127076, 0.0004803933010059599, 0.0004812895762181891, 0.0004776944439111818, 0.00047551916485460646, 0.0004757996463476894, 0.0004683504621025717, 0.0004711936867556381, 0.0004668438131769559, 0.0004675378369088632, 0.00046397896889948195, 0.00046444304664696573, 0.0004648308451382776, 0.0004628699902738183, 0.00046407171336290687, 0.0004636914627619325, 0.00046717483733720196, 0.00046648914390740487, 0.000468500476691511, 0.00047128245752003873, 0.0004727564922962553, 0.0004773656365945513, 0.00047919544010028366, 0.00048396281259634774, 0.0004876306140774339, 0.0004925762736592288, 0.000498793079313371, 0.0005015506873054046, 0.0005096636135461615, 0.000513393355856425, 0.000519290461187731, 0.0005245035713218403, 0.0005270846758778982, 0.0005331690811566099, 0.0005337010225458043, 0.0005360151957412992, 0.0005361453614038982, 0.0005324144526366072, 0.000533193918576671, 0.0005257443802443333, 0.0005169579659824394, 0.0005076901637833947, 0.0004940226613067186, 0.0004800615441489931, 0.0004602940650618739, 0.00043953753750371085, 0.0004122527428673862, 0.00039214355077205575, 0.00038120717863487593]
2 [0.10926111470459023, 0.11606353290183521, 0.09991067013867286, 0.07697423589879422, 0.08065252895000334, 0.0519036377004653, 0.05868295340873465, 0.051045143264726464, 0.036028207640888044, 0.038807683688756436, 0.04184352896161914, 0.02994758905179109, 0.02527074891406749, 0.016146842527045444, 0.019192050152388344, 0.018609960180027946, 0.012863563502781391, 0.00973958554631195, 0.016119860059672444, 0.006005173160223965, 0.004461822954713865, 0.005950036592539407, 0.008139172898595531, 0.008290941052190071, 0.006861365930157936, 0.0041359678750664906, -1.1989237398044284e-05, 0.0021798081092900025, 0.001275815203359408, 0.004770805836190932, 0.0035375856469838955, 6.437964115213953e-05, 0.00011837174232420754, 0.00017496780755410507, 0.00022375239673451308, 0.00026669380577918126, 0.00030247607817725876, 0.0003410904467420113, 0.000366444276392594, 0.0003983000519850944, 0.0004193293326530404, 0.00043468700822922335, 0.0004553015320010485, 0.0004648322041246526, 0.00047785584499983216, 0.000484781948305352, 0.0004905374065014637, 0.0004970553629011158, 0.000498975306782337, 0.0004993809320729748, 0.0005017445891534483, 0.0004990784372678634, 0.0004997142954879498, 0.0004976958070858934, 0.0004950786885622286, 0.0004934369031442203, 0.0004904365468590017, 0.0004884756166961806, 0.0004840740406544016, 0.0004840007305224008, 0.00047980012173419185, 0.0004779306743750398, 0.0004759130079633498, 0.0004727920680617351, 0.0004711754578352363, 0.0004686362815870812, 0.00046756295524999356, 0.00046468824761459766, 0.0004648837694035148, 0.0004626024749871152, 0.0004618800920071418, 0.0004616896470672867, 0.00046200076541710145, 0.00046216374266636685, 0.000461520983994031, 0.00046455521399892206, 0.0004640838356738711, 0.00046681747457557986, 0.0004688012270107168, 0.0004699723633887137, 0.0004748561267843736, 0.00047667691830640736, 0.00048164431308776045, 0.00048518788080684433, 0.0004903459090883579, 0.0004962076068392632, 0.0004991914396186428, 0.0005068480020665347, 0.0005108357373855284, 0.0005163013302488165, 0.0005217216296398809, 0.0005240619581675147, 0.00053021711248882, 0.0005305262513022077, 0.0005325484076230196, 0.0005328922015335029, 0.0005286602366814056, 0.0005296345287495848, 0.0005216667961711953, 0.0005127872585809401, 0.0005034786154589674, 0.0004896724056243776, 0.00047600829877694084, 0.00045613667768486113, 0.0004361072658295341, 0.0004095327900532847, 0.0003907970019253269, 0.00038104615375905194]

===========================================================================================
python3 delay_tomography.py 2 7 uniform 0.5 100000  succeeded with stdout:
i_max is 28
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.08427445186600065, 0.051419981796460644, 0.07031020937024161, 0.06284774045149173, 0.040995724939797695, 0.08188927208054604, 0.05898589590304937, 0.0705151758800893, 0.05859485506595375, 0.06077387879636892, 0.054989777464713785, 0.07269369620351761, 0.06597311029029969, 0.05397706276102779, 0.0724571392914967, 2.3917969210651786e-23, 1.9624765935475358e-23, 1.6558190441129863e-23, 0.016566604101890377, 1.7995271479116888e-23, 0.003740792752997415, 1.778482118158549e-23, 1.6050102007749258e-23, 1.9860208825550207e-23, 2.0746170097138228e-23, 0.009580329788623722, 1.9011450011422315e-23, 0.009414301195433364, 1.554201347162029e-23]
1 [0.05129619714071571, 0.06578337525110692, 0.06527238460305615, 0.059673944709500354, 0.08343142838128356, 0.07616197992758832, 0.06837508613165297, 0.05112607689825826, 0.06619604984464912, 0.06937034588505887, 0.06702920667321148, 0.06370532616983202, 0.07088628385161591, 0.0624205472744169, 0.061747042572004134, 0.012629106226756132, 0.003781542737997924, 1.161236173553723e-22, 1.5630397411541918e-22, -6.825124774558823e-23, 3.396487197994384e-22, -1.5439202827401724e-23, 0.0011140757212953676, 1.134422300300088e-22, -1.1608510346822402e-22, 2.258422032731961e-22, -6.57366828706931e-24, 2.5092527332261368e-23, 4.7331004955550265e-23]
2 [0.05438394233664676, 0.06548289350519894, 0.05986441855187412, 0.07976142279929124, 0.07375233030870484, 0.0553914303796162, 0.07312987050056502, 0.059616906271368036, 0.06772400973838481, 0.06895557978681434, 0.06472471222594461, 0.06239425556335741, 0.07449409140719222, 0.06634310552057227, 0.055817389529521456, 0.018163641574947778, 2.1171257123541958e-22, 2.651454355478596e-22, 3.04546411147265e-22, 1.3969517973336323e-22, 4.647195181765655e-22, 1.8406041077467983e-22, 2.641000819623692e-22, 3.4210206618564534e-22, 6.431387273593423e-23, 4.665382683538551e-22, 2.3823575493236657e-22, 2.3012747571855443e-22, 3.291601733176474e-22]

===========================================================================================
python3 delay_tomography.py 3 7 geometric 0.5 100000  failed with stdout:
b'i_max is 145\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 7 uniform 0.5 100000  failed with stdout:
b'i_max is 42\n0\n0.00065\n0.00064\n0.00129\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 geometric 0.5 100000  failed with stdout:
b'i_max is 141\n0\n0.00077\n0.0009\n0.00167\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 uniform 0.5 100000  failed with stdout:
b'i_max is 56\n0\n0.0001\n7e-05\n0.00017\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 7 geometric 0.5 500000  succeeded with stdout:
i_max is 119
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.12909910284770365, 0.10959117023309084, 0.09244667195342958, 0.08326749039170311, 0.06932438805281166, 0.06406709022448884, 0.05207930434263755, 0.05191457871765765, 0.04454341639155979, 0.03735532540657602, 0.02721585221373194, 0.028017657786639436, 0.02605158241455756, 0.021056295296555456, 0.019131098498258593, 0.0159298765127455, 0.013144608664651882, 0.012939123959934398, 0.010978940202799919, 0.008727031160842507, 0.0063223026306635415, 0.007669811797062956, 0.005875836179271548, 0.005073760899457106, 0.0061116237869557385, 0.00187027229361166, 0.0034585490863556184, 0.0028260618995902343, 0.002213986544481277, 0.0016611610587951703, 0.0018295121474685907, 0.0018732680794034213, 0.000516436669039303, 0.001445240357623607, 0.0005019265382935989, 0.0011455472850444904, 0.00044991572348330165, 0.0005243290924783482, 0.0005068465964500279, 0.00040820991104521456, 0.0004752569925204878, 0.0004944448831245451, 0.00039616299933570764, 0.0004261938908321332, 0.0004336411217770406, 0.00042831544786354087, 0.00041989482797415216, 0.00039720449174590665, 0.0003982411162908538, 0.0003837522155845486, 0.00040561216536146586, 0.00037618097883669425, 0.0004162120483011356, 0.0003739095068302329, 0.0003993426853311152, 0.0003792366161214574, 0.0003685757528890688, 0.0003877658082783069, 0.00037323564622259147, 0.00039438381664908884, 0.0003706282736899001, 0.00038698747391687676, 0.00036395500958353883, 0.00038229036988438405, 0.0003719001320764586, 0.00037640027607639746, 0.00039269243762120705, 0.0003658946303461314, 0.00037115296177947315, 0.00037612118078675496, 0.00038165734782381574, 0.00037185445549537495, 0.0003709769257415273, 0.00037198187604734465, 0.000380498252669238, 0.0003753582013149452, 0.00036758404982170455, 0.000375905202120391, 0.0003741852433777489, 0.0003715426873615707, 0.0003747901877003678, 0.0003740289578473894, 0.0003727895399933868, 0.00037845580495675195, 0.0003683192539981135, 0.0003735486779054943, 0.00037351078901681615, 0.00037445739250387914, 0.00037488991472720516, 0.0003711839209943157, 0.00037614801890242415, 0.0003725023836674182, 0.0003735882633945515, 0.00037237560977171954, 0.00037594177182623516, 0.000371379819741305, 0.0003732476787934487, 0.00037347510810442045, 0.0003732486615855076, 0.00037345201402278145, 0.0003731656068800179, 0.0003734924779992176, 0.0003732603007147955, 0.000373367561642889, 0.00037330960459313223, 0.00037335661248243096, 0.00037333727671863656, 0.0003733332411498725, 0.0003733369396789004, 0.00037334190544635376, 0.0003733326009816301, 0.00037333814456970644, 0.00037333626590960373, 0.0003733398950329812, 0.00037333621658129846, 0.0003733382532409769, 0.0003733373857325676, 0.00037333641684759815, 0.0003733383841392802, 0.00037333612295488774]
1 [0.11467060970491591, 0.11090868645184852, 0.0985847135044562, 0.08025933449345003, 0.07523352191445193, 0.06123026154047337, 0.05939381696878419, 0.047218332033617263, 0.04001667939463433, 0.03706788227333686, 0.034288418257281295, 0.027212832589469816, 0.02580587112480675, 0.021104840928851676, 0.017905141413697832, 0.018092142163150703, 0.00922454376914467, 0.015313710228315184, 0.00964805522168061, 0.009288079827925823, 0.00942648636404974, 0.0057812065407012985, 0.0047825511674190945, 0.007264217442917532, 0.005763925595528163, 0.0041844731881164774, 0.0006984636559885733, 0.006266805380090707, 0.0008216175572768347, 0.0005975260514824374, 0.0016999180864385236, 0.0005133833490104362, 0.001447906221240484, 5.974297204739934e-05, 0.00013777817014060795, 0.00019850397684331546, 0.0002539496723242801, 0.00029790666655416084, 0.00033868353107750857, 0.0003703598469102305, 0.0004026684899802581, 0.0004254728102912753, 0.00044421626148990546, 0.0004540286267278213, 0.00046473034707192383, 0.0004732962232668743, 0.00047814024744495087, 0.0004814737516917719, 0.0004823451679718717, 0.00048235130041719096, 0.0004820506460355628, 0.00048022556089384973, 0.0004781510851284435, 0.0004740678755479115, 0.00047209856892981494, 0.00046912004591341446, 0.0004659638837464686, 0.0004641314223263017, 0.0004592994860205275, 0.0004570991477199565, 0.0004540655595492874, 0.0004514317142264565, 0.0004485544084169874, 0.0004465557074753174, 0.0004446125241148997, 0.0004419888790297525, 0.00044055059003653206, 0.00043842585608103244, 0.0004373519781974001, 0.0004356311960999101, 0.0004342801230547182, 0.00043319270836958705, 0.0004317855511440159, 0.0004309523063827121, 0.00043028663698872814, 0.0004291846284049782, 0.0004285268912112005, 0.0004281132205633383, 0.0004276148766532113, 0.0004273543780690219, 0.0004270732793740258, 0.00042714244373352376, 0.0004270040921282782, 0.00042749785975476027, 0.00042788989921612065, 0.0004288018276906397, 0.00042962725117376264, 0.0004311929548571702, 0.00043276876334533815, 0.00043472125004840164, 0.0004372067897064832, 0.0004400389370333807, 0.00044342319628589213, 0.0004470473459783017, 0.00045161931633898626, 0.0004559766701158426, 0.0004609021071234454, 0.00046612120873151835, 0.0004713565303354736, 0.00047731359897765636, 0.0004830017685323086, 0.0004884988490597887, 0.0004934175257981467, 0.0004982764739751997, 0.0005021066033231428, 0.0005051902950180933, 0.0005069256184498984, 0.000507372073975579, 0.0005057477574573435, 0.0005038022589873237, 0.0004990766346124105, 0.000492174913587407, 0.00048168072359289373, 0.0004701522770953463, 0.000455333227253116, 0.0004391064586548863, 0.0004192481066608481, 0.0003975603992721246, 0.00037249609512638295, 0.000352567493252376]
2 [0.1146633345951193, 0.10800926118429517, 0.09861010398338334, 0.0863743298803798, 0.0702077619891824, 0.062437236730901624, 0.05966058128633623, 0.04506721300466034, 0.043085499226135034, 0.034977639211999534, 0.03792894067594788, 0.027855489667962814, 0.024341211422651332, 0.01904239365021209, 0.019885409106691773, 0.0145917164679556, 0.014566047176479198, 0.010780758805640406, 0.013588040672759533, 0.00851734932505591, 0.0084391573259949, 0.003543561016164299, 0.008039739499575592, 0.005731109410714987, 0.00441384808590085, 0.005061128364926089, 0.001521103781756589, 0.0014880186158116506, 0.003425514801238583, 0.002457549113655951, 0.0010922637301937661, 0.0019375758050664312, 0.00052486311175973, 8.943058215231473e-05, 0.00014676936814802546, 0.00020185603067946183, 0.0002521018845618603, 0.00029621528754932415, 0.00033219357622921126, 0.0003656691826037932, 0.0003931796857318596, 0.0004165685086317711, 0.00043342472260495923, 0.00044624777126218073, 0.0004569796186759805, 0.0004652001175795894, 0.0004712291680374648, 0.0004755498739498773, 0.0004775502562683008, 0.00047814517805655, 0.00047847597609241237, 0.0004772936020316507, 0.0004749342511361892, 0.0004726732305167955, 0.00046995360069028165, 0.00046695863171635177, 0.00046498200851227987, 0.0004616868972309054, 0.00045855343160322305, 0.0004556511329111093, 0.000452607841027286, 0.00044998729502577594, 0.0004475383865706885, 0.0004452986441617924, 0.00044315007300366535, 0.00044098152572994917, 0.00043914809310768366, 0.00043760742242854886, 0.00043593877194826586, 0.0004344509314502627, 0.0004331690460771266, 0.00043195423818808505, 0.0004308179841190691, 0.0004299038731301516, 0.00042899709314700153, 0.00042823261987508644, 0.0004274626233286717, 0.0004270291794186423, 0.000426577762318431, 0.00042624038504373657, 0.0004260619035822378, 0.00042603969110294925, 0.0004259910547307413, 0.0004263576118789338, 0.0004268752802087717, 0.0004276721807770002, 0.00042860311632171415, 0.0004300491186434595, 0.0004316500707332473, 0.0004336090824893691, 0.0004360715070989898, 0.0004389646952204402, 0.0004422487927206519, 0.00044594987217455725, 0.00045038810232957165, 0.0004548453423449916, 0.00045971597232676524, 0.00046492107633349554, 0.000470169350638856, 0.00047603671788876053, 0.0004817617770886821, 0.0004872185271617907, 0.0004920908884982988, 0.0004968791289634732, 0.0005006876375126953, 0.0005036971029510998, 0.0005053842941377611, 0.0005057321763237258, 0.000504028257536757, 0.0005020204568635502, 0.0004971998872234196, 0.0004902124470322022, 0.0004796759166046098, 0.00046810559935922134, 0.0004532686000064824, 0.00043706065694476597, 0.00041720464928855013, 0.000395631914863119, 0.0003707306244422159, 0.00035102288392279806]

===========================================================================================
python3 delay_tomography.py 2 7 uniform 0.5 500000  succeeded with stdout:
i_max is 28
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.07278623062575174, 0.06665630571454756, 0.06057872088439404, 0.06775030122723305, 0.06566806298396967, 0.06857964347774616, 0.06690725237631727, 0.06276419877874878, 0.06038764347066191, 0.07254782259552756, 0.06210233080922766, 0.06146161453188969, 0.07334537958981407, 0.06551084161809036, 0.06104557227841114, 0.0006598371218456648, 0.0008010601309622042, 0.00022467271666943076, 0.0033652038158329223, -0.0003600626727563587, 0.0008130971031847377, 0.0019406652555152013, 0.00035907677640193087, 0.0007241277547786027, 0.000662170791359974, 0.0007066737680111864, 0.0006379367778049379, 0.0006311544407407909, 0.0004968995405224384]
1 [0.05795805592369003, 0.06507846455332655, 0.07173960912976855, 0.06725258758789007, 0.06762130350946491, 0.06567564456225167, 0.06852919344148864, 0.0652700457895351, 0.06716380833994166, 0.06668844982577501, 0.06390518770625829, 0.07143275869255941, 0.06616783280179009, 0.06175779602607103, 0.05959100664252182, 0.006388931800256379, 0.00702362010326166, 0.00042105195795415305, -5.3928729844501915e-05, 2.3359500698970672e-05, 7.368251483054817e-06, 1.997870112982725e-05, 2.5904838267026598e-05, 2.7120647675710086e-05, 4.5598465107460615e-05, 3.071428594393482e-05, 3.691998515500087e-05, 3.8439392066147034e-05, 8.27692372486608e-05]
2 [0.057323805936367156, 0.06770080961838704, 0.0692908273337936, 0.07102248969823961, 0.06124417831660224, 0.06253630582315689, 0.07146476226655207, 0.06109830071729056, 0.07746495078096789, 0.06497108494702805, 0.06305192339291034, 0.07133147826832698, 0.06091214601220803, 0.06839761392282578, 0.06308926405767659, 0.00738986195627661, -0.0001812185068843004, 0.0015975443070351675, 1.7343522562543895e-05, -6.531601707018179e-06, 7.342423325761531e-05, 2.5950936466497942e-05, 2.115390947159226e-05, 1.2192889437938527e-05, 1.8569248879125677e-05, 2.2281122236565483e-05, 1.5261584554244306e-05, 1.5724362298174518e-05, 6.791271449572888e-05]

===========================================================================================
python3 delay_tomography.py 3 7 geometric 0.5 500000  failed with stdout:
b'i_max is 155\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 7 uniform 0.5 500000  failed with stdout:
b'i_max is 42\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 geometric 0.5 500000  failed with stdout:
b'i_max is 170\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 uniform 0.5 500000  failed with stdout:
b'i_max is 56\n0\n7.2e-05\n9.8e-05\n0.00017\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 7 geometric 0.5 1000000  succeeded with stdout:
i_max is 121
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.12211668153946391, 0.11189325506508925, 0.0944135019227032, 0.08097589149351647, 0.07195672757204605, 0.06497975102108454, 0.05228355238364085, 0.05015042491505207, 0.04446184926782841, 0.03714439044673782, 0.030483904858452673, 0.02710809065789309, 0.02550733044390112, 0.021602356514072787, 0.01866531392523916, 0.016790483025964534, 0.013963863698285395, 0.011821416187325552, 0.011218494703650219, 0.008607357499209935, 0.007697576190614249, 0.006571740181184477, 0.0059637750429942064, 0.00559403588806065, 0.005274017323306558, 0.0031787908322808015, 0.0028983566043761693, 0.0029301441860861066, 0.0022836919971871874, 0.0016073566973399825, 0.0017670182850246068, 0.0015342272578137265, 0.0005531952074589131, 0.0012659176182066713, 0.0005363214843656858, 0.0007228670394887998, 0.00046731642469145346, 0.0005212929443772411, 0.000504047085401929, 0.0004434401276621701, 0.0004730776912020436, 0.00045676078353327175, 0.0004052864534140594, 0.00043970124496806853, 0.00042907519364504196, 0.00042678428912097427, 0.0004045290601887305, 0.00040270221248719435, 0.0003986385193493607, 0.00039315991203694545, 0.000390653933360414, 0.00038571574246613644, 0.0003994228494825258, 0.000379329577776272, 0.0003870399385548772, 0.00039392726938218634, 0.0003789686598874636, 0.0003714411078771958, 0.00038129168678882575, 0.0003877039384470308, 0.00037320704392264684, 0.00039058522399238274, 0.00036272630544870274, 0.0003798290631691453, 0.0003757569416742433, 0.0003735454998324818, 0.000384883931188923, 0.0003702400914438821, 0.00037421418982141964, 0.0003750937516593363, 0.0003749930711454398, 0.0003741307236621906, 0.00037095547689333376, 0.00037462849897060225, 0.0003751205202150114, 0.0003751436977840346, 0.00036920444638947403, 0.00037640470031355855, 0.000372572373239339, 0.0003718372122683124, 0.0003756317002897784, 0.000372728059607028, 0.0003713269882767569, 0.00037578248042809825, 0.000371498212235999, 0.00037255553631406857, 0.0003723415707388999, 0.0003741400110563671, 0.00037442383809903476, 0.0003721776579159073, 0.00037375240056574847, 0.0003727784824721335, 0.0003731533451275952, 0.0003725496119895364, 0.0003735911564328913, 0.00037265242279245974, 0.00037238568378837676, 0.0003734656284434876, 0.00037245199551248754, 0.0003734863858370406, 0.0003724100939726125, 0.0003728864497008523, 0.000372910778677995, 0.0003734621779014905, 0.0003724560456606395, 0.0003728376047503355, 0.00037351862099246165, 0.00037244454167728233, 0.00037285398782215283, 0.0003728847092554747, 0.00037290809080048825, 0.00037288525382840165, 0.00037285928231100207, 0.00037290732036109167, 0.00037288504618123553, 0.0003728840029759771, 0.00037287959532895205, 0.00037289130768700725, 0.0003734852446032423, 0.0003724404685434182, 0.00037286143501440226, 0.00037289865094065184]
1 [0.12107891465685174, 0.1081684124538712, 0.09650016903224307, 0.08283024312984442, 0.07227824362010796, 0.05962190503642744, 0.05980001285323589, 0.04989733831893996, 0.03776978799717352, 0.03723263026779068, 0.031793265571626234, 0.029554071842021412, 0.025908200632227492, 0.02166061671312724, 0.01656468693186045, 0.01791635255176366, 0.009526844181426356, 0.01536585268873487, 0.011077773675458792, 0.009074382289926238, 0.008323782969035791, 0.00531336123052529, 0.006814827162820496, 0.005993467421825893, 0.004175202481351063, 0.005215206464409287, 0.0014204106315765324, 0.0037479528288268805, 0.0015882863913718607, 0.001785831780543177, 0.0012862210865154542, 0.0016129211782877169, 0.0003471059235616511, 6.673350193012752e-05, 0.00015069486733697513, 0.0002131592906946021, 0.0002646952111892626, 0.0003081447619222135, 0.00034405880583059827, 0.00037299468145469505, 0.00040039784796668014, 0.0004217390834367102, 0.0004375383048773248, 0.0004483631642248425, 0.00045843665272822553, 0.00046605662117482584, 0.0004715606882754055, 0.00047475074665844847, 0.0004764984538362566, 0.0004764148191369792, 0.00047592400414058834, 0.0004744956079716094, 0.0004718507698323513, 0.0004692117336323257, 0.00046632761915928444, 0.0004634061764706046, 0.0004611921510761221, 0.00045825670093801627, 0.00045451301756023704, 0.00045172821531615475, 0.00044892213436709924, 0.00044614741883830674, 0.00044339150996587867, 0.0004413136136940009, 0.000438952626586668, 0.00043682675723049973, 0.0004350739190845376, 0.00043326111275702735, 0.0004317762977106545, 0.0004301343761475899, 0.00042890865638867603, 0.00042772272621373136, 0.0004265678642790612, 0.0004257151086646101, 0.00042472352821137823, 0.0004238320274033207, 0.00042322700395611195, 0.00042262139500550295, 0.0004220252047855367, 0.0004216634741277048, 0.0004212289121193984, 0.0004210187569829148, 0.0004208698216090184, 0.00042086040465692706, 0.0004210008579237697, 0.00042147560447746037, 0.0004219501527648361, 0.0004229181508365987, 0.00042386617774512576, 0.00042537036779842524, 0.0004270239632644272, 0.0004291123522261506, 0.0004316963520990005, 0.00043465328540359167, 0.00043798861303154447, 0.0004417284245290153, 0.00044615401039286553, 0.0004506342506692428, 0.00045559258932746405, 0.00046079717661417607, 0.0004662669229651911, 0.0004719394878163813, 0.00047779672428507826, 0.0004830862003001649, 0.0004883366347946945, 0.0004930043226089774, 0.0004968230986290505, 0.0004997748686143759, 0.0005016049119338476, 0.0005018626929615418, 0.0005007360971811785, 0.0004981739610047199, 0.0004935827870007083, 0.00048644653426782293, 0.00047637475015462576, 0.0004652470585615257, 0.0004507036564409222, 0.0004340979521663789, 0.0004149147019748206, 0.0003934045498040551, 0.0003680094223117071, 0.0003486532272218972]
2 [0.12084233808429702, 0.10698829352019315, 0.09701910015529375, 0.08532383613411562, 0.06997476206178832, 0.062147055340813016, 0.058932986947459486, 0.047229285851907415, 0.04157361558585702, 0.034870828726318207, 0.03585091897203008, 0.02882596872026562, 0.022338673142223507, 0.02146134401769415, 0.018896435624366367, 0.014527734012763114, 0.014165027219022026, 0.0128177795814905, 0.01247717476493898, 0.00806765106003943, 0.00783056830315616, 0.005509259387630009, 0.0058249191096699324, 0.0074980988911657505, 0.003410782660537528, 0.0040703194440614415, 0.003285277428834863, 0.001734258541032884, 0.0024809965715424888, 0.0016821906835449902, 0.0017524235878069731, 0.0016771986579235051, 5.397710309231371e-05, 0.00012364466760463733, 0.00017979385559302913, 0.0002278811462345852, 0.0002721528592067121, 0.00031109196038106796, 0.0003425463957879279, 0.0003733767456156918, 0.00039858205176981324, 0.0004185972661280675, 0.0004342921129954744, 0.0004465758270512885, 0.0004572453860033903, 0.0004646479838027366, 0.00046996733420332437, 0.0004737734626107564, 0.0004754318308479444, 0.0004756523939803604, 0.0004756525035837918, 0.0004738027705888925, 0.0004717842230078608, 0.0004690496952532175, 0.0004664747760750065, 0.0004637033593316682, 0.0004612222795879629, 0.00045784783350478185, 0.0004546499033957133, 0.0004518809170562231, 0.0004489374112366506, 0.00044616866847370937, 0.00044385115879941745, 0.00044139629888319287, 0.0004390641654412204, 0.00043717383902806616, 0.00043523901203300434, 0.0004336285031019466, 0.00043188277954521643, 0.00043049540719550966, 0.0004292617515064432, 0.00042796251897129253, 0.00042697247471234557, 0.0004260255702166577, 0.000425004095674143, 0.00042429442228895253, 0.000423580170037464, 0.0004229790029869259, 0.00042237229148488816, 0.0004219536301232011, 0.0004216277008489762, 0.0004213170696560137, 0.0004211880304709075, 0.0004211870928541906, 0.0004213194263723848, 0.0004217485711997121, 0.00042224953958086553, 0.00042317646535858965, 0.00042408938988026593, 0.00042553936071047755, 0.00042724674257750886, 0.00042934340675194896, 0.00043187154152095315, 0.00043483220184578196, 0.00043807455165105605, 0.0004418718745846036, 0.000446282594355745, 0.00045073866744545563, 0.0004557095036188041, 0.00046084622418727156, 0.0004663457484660258, 0.0004720068814919619, 0.0004778525325275217, 0.00048311457172697976, 0.0004883615140932559, 0.00049302350315379, 0.0004968231582650377, 0.0004997665962757031, 0.0005015569519615753, 0.0005018251009596292, 0.0005006669182731938, 0.0004980819375799395, 0.0004934685778762122, 0.00048629541305644325, 0.00047622929613272354, 0.00046510238413432435, 0.0004505447429140255, 0.0004339866665775715, 0.0004148815848743, 0.00039352114785457746, 0.00036839617198293066, 0.0003494215572126888]

===========================================================================================
python3 delay_tomography.py 2 7 uniform 0.5 1000000  succeeded with stdout:
i_max is 28
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.06773714028858031, 0.06716028495018983, 0.06457710107726894, 0.06554454178348956, 0.0651129206970637, 0.06794285789474347, 0.0676470022948774, 0.06525187669488806, 0.06135298552518181, 0.06792209074670805, 0.0667808118376361, 0.06234266968467184, 0.07050788064979119, 0.06258115019417186, 0.06525582871606159, 0.0031891525346451964, 0.0003469025533542739, 0.0005790721918336069, 0.0015175309000761365, 0.00015632253069194208, 0.0007716149712625709, 0.0007953923280755432, 0.0005077009138330431, 0.0007985567677111706, 0.0006996032466850557, 0.0007159026528749427, 0.0007700695959390051, 0.0005714686988723993, 0.0005809107787726935]
1 [0.06208123789503342, 0.06746295909065572, 0.06915512617867636, 0.0657287796089672, 0.06847506306377549, 0.06530062503019138, 0.06679878423668037, 0.06630756682913878, 0.0696334472363431, 0.06409779907220622, 0.06675605757514225, 0.06868220530970447, 0.06650913547303874, 0.06473147710747006, 0.058299102737298436, 0.005938867554436253, 0.0026819118357127238, 0.0010115250812189462, -2.351041067549085e-05, -1.125687736191286e-06, -1.9878613247245155e-06, 2.5533026684616323e-05, 3.0654792695573985e-05, 3.349535778731987e-05, 3.5341543339638316e-05, 3.720448863203856e-05, 3.495030993226905e-05, 3.442848352198062e-05, 9.246431282111482e-05]
2 [0.06318806801199156, 0.0647537602098411, 0.06970963823074472, 0.06746818213951622, 0.06488680625779043, 0.06382505899834817, 0.07035328470301114, 0.0657049441913106, 0.07134023570083156, 0.06466363105686744, 0.06525019061469488, 0.0688847772178683, 0.06285886264520782, 0.07098203951535648, 0.05777938793260058, 0.004272252761619586, 0.0021460231146670245, 0.001598549976099107, -6.697251454571736e-05, -6.730552361310233e-06, 2.7978809539692502e-05, 3.788555429758759e-05, 3.3698208492415696e-05, 3.181155401074805e-05, 3.567632491335069e-05, 3.498068279413634e-05, 3.229398859546001e-05, 3.346094968143074e-05, 9.458180022606767e-05]

===========================================================================================
python3 delay_tomography.py 3 7 geometric 0.5 1000000  failed with stdout:
b'i_max is 155\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 7 uniform 0.5 1000000  failed with stdout:
b'i_max is 42\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 geometric 0.5 1000000  failed with stdout:
b'i_max is 192\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 7 uniform 0.5 1000000  failed with stdout:
b'i_max is 56\n0\n6.4e-05\n8.5e-05\n0.000149\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 8 geometric 0.5 10000  succeeded with stdout:
i_max is 97
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.20569613516855972, 0.012784393897018263, 0.058538442627017094, 0.13372908432215735, 0.0032541374248888596, 0.07099441127544284, 0.042044060073884726, 0.07539191151204638, 0.023284209324961596, 0.007890072834753918, 0.043981463471975075, 0.02817883555749484, 0.0008075764374585011, 0.05509482503298105, -0.0012785733160216054, 0.030237905970452384, 0.045445464417859814, -0.0015825844394464312, 0.045046152473536744, 0.011975488506651541, -0.0012454871596338543, 0.03321957538731819, 0.006114582246969596, -0.0008529128706456148, 0.018043035661720688, -0.000843622472614946, -0.0007214425735780775, 0.017938589709985117, -0.0008584923144942583, -0.000844121641489012, 0.029398359414008406, -0.001096679360177278, -0.0007002395545241378, 0.009974463271376625, -0.0007414153987167166, -0.0007225041078435249, 0.0011907151744283227, -0.0003582516377486119, -0.0009018208310743979, 0.0006924516986854682, 0.006870049438911035, -0.0011149985836436394, 0.005385726133095788, 0.0043002519477719865, -0.0009532272504174827, -0.0006800722012297962, 0.006049707189899663, -0.0008910928295696627, -0.0007558677120493815, 0.01289370627957353, -0.0010228987188120764, -0.0006510127666051219, 0.003256924622956746, -0.0008456160554382528, -0.0007140974663353027, 0.0006726837660118259, -0.0008078164842627805, -0.0006600710628446112, -0.0006830755937077355, -0.000745748473857147, -0.0006609053652955174, -0.0006893843411236754, -0.00074379943285616, -0.0006535231262805326, -0.0007070712084074585, -0.0006913944254590303, -0.0007336789618270661, -0.0006698203984387184, -0.0007212028390729691, -0.0007041521538773345, -0.0006694221203681898, -0.0007385434508681823, -0.0006864735093777325, -0.0006921534913915203, -0.0007196084999283862, -0.000692972047073947, -0.0006731061144892125, -0.000742533296277402, -0.0006829108373150425, -0.0006917500369284233, -0.0007179210164103339, -0.0006980611176202072, -0.0006875053326496671, -0.0007137770956822059, -0.0007011244416839904, -0.000691929415320444, -0.000709683572027198, -0.0006973987703449158, -0.0006996229591426746, -0.0007030433879879488, -0.0007005297094987789, -0.0007001000509056685, -0.000702688051118092, -0.0006985228876069312, -0.0007028013917318649, -0.0007004450664905729, -0.0007004792059472698, -0.0007011804267449938]
1 [0.05912822022397939, 0.09788976203046679, 0.11749976041709745, 0.08298874471023349, 0.07229487745713412, 0.060422770952589806, 0.05935113582005116, 0.03485339698296301, 0.04016084131111318, 0.031902372603218515, 0.05433493803968947, 0.04448152120728413, 0.033041142436552456, 0.013152666300269103, 0.02082491579535616, 0.0029635717651197, 0.0296383178746919, 0.010884255255791401, 0.019575817310629958, 0.0030436184393385513, 0.003141428948972006, 0.008329937277140353, 0.012531430054814554, 0.012932530330341772, 0.01167830000996057, 0.0028479774832215954, 0.005180300497852154, 2.718877024713598e-06, 0.002934693347195909, -9.46320945940839e-06, 0.006908701726590607, 0.005814509277282706, 0.003263078820319902, -1.558854771415166e-05, 1.1113244992865798e-05, 0.0009243111815696624, 0.002538382783658469, -2.5270315783920626e-05, 8.218209084894795e-05, 0.0011035820447689126, 0.0026876721458109942, 0.00018383771847988998, 0.00012120450007260492, 0.00019630425737289907, 0.0003034737179104571, 0.0003136191970728186, 0.00034016615826452674, 0.00038568663061743733, 0.00043858973724270723, 0.00046450030856988087, 0.000455862184159782, 0.0004971910295138813, 0.0004930965212790698, 0.0005136543681092363, 0.0005586473413775486, 0.0004910059187319724, 0.0005349352529647775, 0.0005747077866884153, 0.0005008190200881705, 0.0005524686776279301, 0.0005633868119394199, 0.0005148435486608812, 0.0005513674098116318, 0.0005524158672596274, 0.0005384956199174125, 0.0005638196940981231, 0.000537927204830323, 0.0005354663748905412, 0.0005769227773627073, 0.0005394437677930513, 0.0005418222913621243, 0.0005824112309840858, 0.0005461100580878851, 0.0005624536880018144, 0.0005814872012142201, 0.0005624692818611686, 0.0005680829661956401, 0.0005832384459972856, 0.0005867573007187301, 0.0005773730178067552, 0.000574728025866912, 0.0005985045215716261, 0.000576199147410174, 0.0005798370535962488, 0.0005919737480508951, 0.0005685154800623229, 0.0005588366371087443, 0.000586737072949178, 0.000540831345404549, 0.0005319865961158205, 0.0005363513760127952, 0.0005088657301471091, 0.00047539327458115865, 0.0004688743270651227, 0.0004427335513112083, 0.00040406782380115585, 0.0003957203716440244, 0.0003913632001851815]
2 [0.060374087510711216, 0.08929352570685489, 0.11179827860740604, 0.09534938432568471, 0.0652584450001804, 0.06988183857464203, 0.05613762683160399, 0.051423631019584776, 0.01814354421839713, 0.03518376533247047, 0.037696712687387626, 0.04470082790701549, 0.038358494888492425, 0.01852370485336564, 0.013510468042186398, 0.0222122829969736, 0.021886330406556992, 0.013541195497686022, 0.011810997128357963, 0.017708021882388042, 0.01772195566333088, 0.0056027163188960265, 0.0066060563256181365, 0.0012413776792454087, 0.003308642039061409, 0.004531980521928561, 0.009038018677911028, 0.005612953196533021, 0.012414009725009428, 0.005450474156800635, 5.0006064908147645e-05, 6.60647046712756e-05, 3.570956776600402e-05, 0.00010642067098732011, 0.00020290820502004718, 0.0019116445440234883, 0.00020029021595486634, 0.00026312650015721884, 0.0017283220997709459, 0.0003484319607078925, 0.00027104572900852567, 0.00023902256102040586, 0.0004125324880993428, 0.0003757680644704839, 0.00043225665424934714, 0.0004249266644408599, 0.00048670413568968645, 0.0005165162586279518, 0.00047447745811846645, 0.0005519752418280469, 0.0005294791143498395, 0.00047600482440276093, 0.0006425608013607483, 0.0004932424048638443, 0.0005141733479558893, 0.0006310593279310577, 0.0004960265094401646, 0.0005473005541542861, 0.0005953422186136706, 0.0005066091295231945, 0.0005656621335461959, 0.0005747119182736332, 0.0005108735942144793, 0.0005659171596350081, 0.0005877786171048841, 0.0004960900301277933, 0.0005762478370610085, 0.0005838376781267345, 0.0005034024709527207, 0.000585328654964607, 0.000577336204463058, 0.0005322478904631455, 0.0005653167600089906, 0.0005952044611041616, 0.0005558395680936861, 0.0005617344133718697, 0.000607681933162048, 0.0005625809956029502, 0.0005713735397110948, 0.0006232388714552278, 0.0005645419574582772, 0.0005790162563631001, 0.0006041515830793388, 0.0006009009553020663, 0.0005587007279004286, 0.000596822530092478, 0.0005860112017483706, 0.0005518139785395261, 0.0005798955664875697, 0.0005557884732150637, 0.0005141082642062679, 0.0005406523522170348, 0.0005024463675390282, 0.00046814648008238304, 0.0004699513247818783, 0.0004305465747180988, 0.00041133441380899175, 0.00042223807080869096]

===========================================================================================
python3 delay_tomography.py 2 8 uniform 0.5 10000  failed with stdout:
b'i_max is 32\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 108, in infer_delay\n    k.alpha = DelayTomographyMle.least_squares(k, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 136, in least_squares\n    result = prob.solve()\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 246, in solve\n    return solve_func(self, *args, **kwargs)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 361, in _solve\n    self.unpack_results(solution, self._solving_chain, inverse_data)\n  File "/home/tem373/Desktop/virtualenvironment/lib/python3.6/site-packages/cvxpy/problems/problem.py", line 471, in unpack_results\n    "to reduce the dynamic range."\ncvxpy.error.SolverError: Solver \'OSQP\' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.\n'
===========================================================================================
python3 delay_tomography.py 3 8 geometric 0.5 10000  failed with stdout:
b'i_max is 120\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 8 uniform 0.5 10000  failed with stdout:
b'i_max is 48\n0\n0.0004\n0.0005\n0.0009\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 geometric 0.5 10000  failed with stdout:
b'i_max is 146\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 uniform 0.5 10000  failed with stdout:
b'i_max is 63\nInvalid k.gamma[ 0 ] =  0.0  for node  1\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 8 geometric 0.5 50000  succeeded with stdout:
i_max is 121
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1280987487921018, 0.09639887927468291, 0.07778099354825371, 0.07164210257487802, 0.08448367591629177, 0.04055911174646444, 0.047545118996840385, 0.06612010150636208, 0.03720161377492825, 0.038375623263924366, 0.03659019236328581, 0.031343141399949426, 0.01632783605797001, 0.030448558855412942, 0.01322446747152843, 0.021619983244703198, 0.01967593788150105, 0.005944289693390198, 0.01569367936540207, 0.017075063273467535, 0.0021950243531946856, 0.013105266053623343, 0.004784637490811183, 0.00785717525730158, 0.0063956468608786215, 0.0077926890433441505, 0.0013131020507080563, 0.0030735751111099817, 0.005629128426199616, 0.0015229724123103966, 0.003554097921061188, 0.0003226371205424293, 0.003753957957917147, 0.0016351019491179656, 0.0012632404992620624, 0.002231562763758837, 0.0004971630397502692, 0.0012284527243590824, 0.0009919663217592932, 0.0003711113434881637, 0.002091001718390369, 0.00040311460897009694, 0.0003403037894013567, 0.00041888916366004, 0.001375758987518259, 0.0002602550762219209, 0.0005510169877440314, 0.0004221375227475512, 0.0005362111995742924, 0.00040555265257864503, 0.00047916379653877933, 0.0003498021761339619, 0.0004237697224832125, 0.0005267904541591698, 0.00023293732390714702, 0.00028158051252564565, 0.00046509707388986616, 0.0004470028563643356, 0.0003293952289744694, 0.0004614756690129687, 0.00035672113634288994, 0.0004825647612035219, 0.0002585299979568017, 0.00041372985632168684, 0.0004431255097359274, 0.0003453757943973365, 0.0003370062046240724, 0.00047539480262343665, 0.00030031273881807254, 0.0003391207500550771, 0.000432184597081675, 0.0003749277036904335, 0.00032629925280236834, 0.000420251331938275, 0.00037676612751348247, 0.00035182101891004653, 0.0003990529514846232, 0.00035794159246539756, 0.0003971435092126593, 0.0003465097241978469, 0.00040846242597841265, 0.00034913035251540176, 0.00038734353096814343, 0.000359593681881591, 0.00039528062965498, 0.0003541299553733892, 0.00037652747037261443, 0.00037664474408631706, 0.0003710055794403836, 0.00037285464984652776, 0.00037485150298753524, 0.0003752448256897121, 0.0003846754858787971, 0.00036415953301245326, 0.0003700874459473566, 0.0003787333272267478, 0.00037160075987831395, 0.00037167576676946034, 0.0003756809598144792, 0.0004047472338688362, 0.00034563192233528887, 0.00037125789499725605, 0.0003807053313791672, 0.00037400510655965813, 0.00036459631267334643, 0.0003812835749826142, 0.0003747711075002958, 0.00038382441038107575, 0.0003618422663200935, 0.0003733372291778091, 0.00037737784915203935, 0.0003715123927059572, 0.0003712270586911277, 0.00037704864716048346, 0.00037385739655336166, 0.00037086910553184684, 0.0003750624060735838, 0.0003732875108232094, 0.00037406511999216787, 0.00037280985973294005, 0.00037413056414220146, 0.00037356052355629266]
1 [0.09262760485452298, 0.08975266751218423, 0.10674045016300143, 0.07214541181736922, 0.06710635425350711, 0.07107274454532417, 0.05659632219488672, 0.04194106590449394, 0.04451397102477411, 0.034975220938883333, 0.040424746019485626, 0.024310757451486475, 0.025736363633811515, 0.03136533621631549, 0.0209451066900493, 0.01700794211054336, 0.019617678306461488, 0.0043853459376887866, 0.015677248167154316, 0.013609632217015449, 0.0036273344030101923, 0.016532610676051364, 0.006796077482122144, 0.00766452054638752, 0.005905732551839413, -3.935955711866609e-05, 0.007715246355169707, 0.0022837712395945785, 0.00127572398410592, 0.005390348022569161, 0.002115406473309575, 0.009681837826728065, 0.0002481399631700705, 6.994984687521525e-05, 0.0001291249310858062, 0.00017339918168107342, 0.00022278832827469738, 0.00026083158258933994, 0.0002859041431891678, 0.00031702340095775587, 0.00035225424962695055, 0.00037327309307612903, 0.00039302565587775166, 0.00041722308484497234, 0.00042634777446675775, 0.00043937444379059365, 0.0004548265435750474, 0.0004567423161221597, 0.0004727889893244232, 0.0004772336351382695, 0.00047784729561195483, 0.0004876364697650688, 0.0004888109771850334, 0.0004887814712571251, 0.0004930891817253587, 0.0004909217330638188, 0.0004896702288201957, 0.0004925977558309036, 0.0004893232220283109, 0.0004852515848805075, 0.0004868956935240968, 0.0004813162233141883, 0.00048258461723214765, 0.0004781500730432128, 0.0004726506682719106, 0.0004753562095627225, 0.00047004488132956665, 0.00046776620595960185, 0.00046922220436261644, 0.0004625917280711609, 0.0004632411320618286, 0.0004619565871358713, 0.00045745913619158054, 0.0004583883460420236, 0.00045664818783447024, 0.00045227180436924024, 0.00045336628919039106, 0.00045293191330353935, 0.000448380226636636, 0.0004529303640765544, 0.0004496108025596635, 0.0004488575835034227, 0.000453698445287885, 0.00044823653648389054, 0.00045161457624216973, 0.00045485214916602795, 0.0004501351202571785, 0.00045668680856413436, 0.0004556209541838602, 0.00045666569859269897, 0.00046321200039222603, 0.00046413665636347564, 0.00046602588935138893, 0.0004737803550144151, 0.0004750440678971074, 0.0004786742628707916, 0.0004883422159219601, 0.0004865518342952272, 0.0004932310718021482, 0.0005037691367912742, 0.0004985246963913748, 0.0005118666129907757, 0.0005130676821911296, 0.0005124694967617359, 0.0005247705660900292, 0.0005200550194161488, 0.0005223863960038506, 0.000528308893699721, 0.0005206023231194583, 0.0005230647582459077, 0.0005209045548135191, 0.0005123750012267297, 0.0005060251323869844, 0.0005003830093934611, 0.00048100097275529584, 0.00047416784868610474, 0.00046107888130411087, 0.0004369359467321479, 0.00042770548419593087, 0.00040076641206600864, 0.0003807580673717723, 0.00037668436248869966]
2 [0.09574774811363863, 0.09577334035503104, 0.09697515005746984, 0.08323034648408784, 0.04695901656207626, 0.08269794453322604, 0.05622802916761395, 0.04119667364363093, 0.033527297926779005, 0.033655525874383335, 0.04884178699651352, 0.027212149660752975, 0.03265696850012982, 0.01644634440535634, 0.02339894930977031, 0.02060232441682343, 0.008859082857582402, 0.011537697181553588, 0.020161323979725393, 0.009906529891057565, 0.019137742279825953, 0.0035462602059603498, 0.006679205939559109, 0.0083871569333644, -2.582984052125486e-05, 0.008506059137428416, 0.0014517935301495638, 0.0064035382390924545, 0.0071634254790015174, 0.002858866521060883, 0.00048074292856890497, 0.00400535829922685, 2.362345889487859e-06, 0.0032956413558694756, 0.003654126081175086, 5.990571826565868e-05, 0.0001138873731411911, 0.00015157128362788488, 0.0001937265129709475, 0.0002480795791891234, 0.000265882735562135, 0.000297723162858934, 0.0003384822385673639, 0.00035769217595460424, 0.0003819534117730166, 0.0004056449952926774, 0.00041990169521001345, 0.00043509715914378177, 0.00044713672018989735, 0.0004549775921503801, 0.00046540544129184823, 0.00047461020093957144, 0.0004732113179199442, 0.0004809870106434874, 0.0004863128550266199, 0.000482337551375582, 0.0004875498192586565, 0.0004842337518219048, 0.00048371262403793994, 0.00048478186354847735, 0.0004830707849306341, 0.0004800944676421941, 0.00047828505711065784, 0.0004758280848087743, 0.00047343378823488886, 0.0004726174627124067, 0.0004672376592840359, 0.0004669282684261459, 0.0004658616838366812, 0.00046125768015558373, 0.00046188402765513656, 0.00045941604624598033, 0.0004566599785511981, 0.0004559335594399148, 0.0004542468318549896, 0.0004521853344655357, 0.0004525231806752369, 0.0004507848580690927, 0.0004474042413832814, 0.0004513717515630045, 0.0004477830105472475, 0.0004470183862193981, 0.000451607079911754, 0.00044659554266727834, 0.00044998594566637764, 0.0004531194366742432, 0.0004479869675861903, 0.00045590452575664886, 0.0004550305025288951, 0.00045499677679978427, 0.000461565723593239, 0.0004620486464816787, 0.0004644310944520445, 0.0004718935999861499, 0.0004727467913311059, 0.0004771318001932759, 0.00048677428541939497, 0.0004842792259592333, 0.0004913538351641979, 0.000501929160349641, 0.0004961943205349648, 0.0005100785835888031, 0.000511434841370765, 0.0005098837997465623, 0.0005226925513921847, 0.000517743557894523, 0.0005197333555337243, 0.000525796422354704, 0.0005175907719667817, 0.0005200154116632638, 0.000517643368781074, 0.0005085201447542892, 0.0005019992873704618, 0.0004960724428656303, 0.00047567243088990113, 0.00046894711951495267, 0.00045519829161263625, 0.00042987345503958354, 0.00042069218020471304, 0.00039276288981223513, 0.00037208573343253104, 0.0003686893692219341]

===========================================================================================
python3 delay_tomography.py 2 8 uniform 0.5 50000  failed with stdout:
b'i_max is 32\n1.6003844994804794\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 51, in main\n    DelayTomographyMle.sanity_check(tree, i_max, epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 65, in sanity_check\n    assert(node.beta[i]  <= 1+epsilon), print(node.beta[i])\nAssertionError: None\n'
===========================================================================================
python3 delay_tomography.py 3 8 geometric 0.5 50000  failed with stdout:
b'i_max is 164\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 8 uniform 0.5 50000  failed with stdout:
b'i_max is 48\n0\n0.00052\n0.0004\n0.00092\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 geometric 0.5 50000  failed with stdout:
b'i_max is 161\n0\n0.00046\n0.00044\n0.0009\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 uniform 0.5 50000  failed with stdout:
b'i_max is 64\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 8 geometric 0.5 100000  succeeded with stdout:
i_max is 121
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.12398650751378652, 0.09426430106952122, 0.08509579552741009, 0.07276778887532331, 0.0807232820326666, 0.04954635935067436, 0.04907827069548164, 0.05575911089998958, 0.03821736769919337, 0.04147418230856853, 0.03162928482025987, 0.030701155793482943, 0.01773996064404742, 0.028923692178580825, 0.016484988623065133, 0.01903535127630477, 0.0208416331819194, 0.009262121324889839, 0.01403503134176706, 0.0151068711791569, 0.0032906265588179, 0.012238061707946519, 0.006439091787084721, 0.006144800205853578, 0.00488501794875733, 0.01045930831575008, 0.0004032410171519319, 0.00439605307110701, 0.0058948101524439415, 0.001454656379269447, 0.0036220881851761768, 0.0005083953560109764, 0.004496897892513226, 0.0004354332106525158, 0.002227444622454715, 0.0022121281581952935, 0.0012037377103925819, 0.0003123997982809436, 0.001592586860432774, 0.0005251329364579044, 0.0005505162214889418, 0.00037497027070983603, 0.0005338630123452309, 0.00040739736010926895, 0.0005265692609020366, 0.00044483588482715326, 0.00043148467666682624, 0.00046510592292403223, 0.0005123746317517281, 0.00034657337910391935, 0.00044640726178564325, 0.0004127873709474855, 0.0004598971035724525, 0.00048014272416287346, 0.000315845021444623, 0.0003536218492342938, 0.00042051991307848267, 0.0003989071084870091, 0.0003919577222772187, 0.00046258349860238553, 0.0003116384124270249, 0.00044376893764253646, 0.0004035994060978021, 0.0003520970660955121, 0.0004135298545503842, 0.00037421208272311304, 0.0003735870283901962, 0.0004112531569284177, 0.0003529890888147256, 0.0003954492486392147, 0.00036023848572882373, 0.00038942085558194527, 0.0003710144752797726, 0.0003868250719359346, 0.0003798364460525402, 0.0003804125047317047, 0.0003983846731824462, 0.00035999058706372427, 0.0004103961708192394, 0.000378608208010698, 0.0003761426444879989, 0.000366435140609356, 0.0004022658853026496, 0.0003632424960138868, 0.0003784828279371612, 0.00037712591595232513, 0.0003789781298653654, 0.0003755518030994984, 0.00038092586390500597, 0.00037868095568658944, 0.0003774220450963509, 0.00038055657141972837, 0.0003844520739998661, 0.00038090553327703994, 0.00037152322829563046, 0.00038006658731534596, 0.00037932774711473395, 0.00037800144476254335, 0.00037765536551932755, 0.00039530992866272424, 0.0003651421626993075, 0.00037809315721202804, 0.0003813002178295173, 0.0003785919534430725, 0.000383265693993552, 0.0003745521710113968, 0.000379027125512479, 0.00038566509880937354, 0.0003730674517989749, 0.00037712779313688884, 0.00038095249226297425, 0.00037845371264418374, 0.00037718667837178827, 0.0003799517091144578, 0.00037895860711542216, 0.00037771393747640337, 0.0003793475634655511, 0.00037866995030911015, 0.0003784914568173625, 0.0003788574274200476, 0.0003788525504779406, 0.0003785035337352722]
1 [0.09707721199225006, 0.09590106083827035, 0.09531896096732753, 0.07647042644331695, 0.059566838034782965, 0.06926519884685267, 0.05719098415254713, 0.05147944765877639, 0.04246033663587599, 0.030373765158830963, 0.03803750688229962, 0.034394545699353726, 0.029613909881743235, 0.021443999692205513, 0.02049471608253467, 0.01723666502024225, 0.01821493497909974, 0.010822913788339144, 0.010235264130926132, 0.013856310076500124, 0.011205574607715485, 0.0070484620967738, 0.008458479176321136, 0.012795721999892224, 0.0015171163710437246, 0.0029855065575957206, 0.0029750545425188844, 0.004933264547865674, 0.005962427917932453, 0.0004136645144603384, 0.0032668725543904655, 0.007314975571958848, 0.0009132490721061328, 7.800181132684487e-06, 2.0646386659378023e-05, 1.193572046716054e-05, 0.0010530247647302427, 0.00010316831962826147, 0.0001888283077976308, 0.0002609002903396573, 0.0003040845596848981, 0.0003760247495742419, 0.0003856219418885417, 0.00039772175305774715, 0.00043829303350348013, 0.0004376319778765263, 0.00046607251946764175, 0.00046857868420503013, 0.00048392979491262197, 0.0004780464075292408, 0.0004928416378793749, 0.0004905820602859289, 0.0004937391573847805, 0.0005050436248605838, 0.0004954767774398244, 0.0004959465056026062, 0.0005082819704884749, 0.0004872032771668115, 0.0005011888117707866, 0.0004915129225663863, 0.0004900574709573798, 0.0004853142200108035, 0.0004948400131898357, 0.00048061253815254867, 0.0004787116472552312, 0.0004822308564726204, 0.00047449695569293726, 0.0004772789041165972, 0.00046921284580383576, 0.00047139272507177216, 0.0004670771574774555, 0.0004634964548619813, 0.0004652957743198633, 0.0004646598771409391, 0.0004569878421679278, 0.00045970501342357907, 0.0004569947380859113, 0.0004569641918859173, 0.00045506055400146436, 0.0004552784164175483, 0.0004532667006247263, 0.00045523104346834774, 0.0004549314890547306, 0.0004535430758303969, 0.0004564687108786133, 0.0004577133711810746, 0.0004564778980011362, 0.00046108274961061824, 0.0004588128062467052, 0.0004636560923120309, 0.00046802339235607436, 0.000467470619479962, 0.00047264776742423573, 0.0004760545534889098, 0.0004786248317573194, 0.0004851568481414098, 0.0004901147462697576, 0.0004914656920409354, 0.0004991960792541197, 0.0005047131846233276, 0.0005054480217603952, 0.0005158203300655823, 0.0005161238740858575, 0.0005197960010210267, 0.0005273684673806099, 0.0005244929623850483, 0.0005289679474482516, 0.0005295792389818311, 0.0005262294766367484, 0.0005277815800826614, 0.0005234548497006801, 0.000518497435948731, 0.0005107482444018081, 0.0005038784085248134, 0.000488672231081949, 0.0004791565752229935, 0.000465639134901157, 0.000443393842810567, 0.00042865381984579946, 0.00040412070270729296, 0.00038191970849762655, 0.0003727043008198547]
2 [0.09425772112316115, 0.1005735303944294, 0.09886499395724412, 0.07512479940558743, 0.05777498131152878, 0.06733879464282855, 0.055573584127387325, 0.04040663169823673, 0.04509010729475417, 0.03905142626743925, 0.04050638136360915, 0.02654177173832956, 0.029528079677742566, 0.028174588346653314, 0.022022600367438458, 0.011649046333920943, 0.018156878523889107, 0.010073861841808524, 0.01661413197410489, 0.013253801532963147, 0.011509058335039384, 0.006191580908722789, 0.004851804960548392, 0.0069774455134255535, 0.002825038649251608, 0.006056575238725039, 0.008615554979496199, 0.003429484258702099, 0.0061005088765814985, 0.004556650458579855, -1.0425878933574238e-05, 0.0013348447991453462, -6.512688568990901e-06, 0.005639517732114047, 0.0022082257191208387, 5.8031106099361515e-05, 0.0001146924193561166, 0.0001576038348873259, 0.00020279182439070166, 0.00025016232505339724, 0.00027782353959967154, 0.00031107266319157367, 0.0003436551922522592, 0.0003676779295535659, 0.00039184404744720006, 0.0004122481570142736, 0.0004280594270875332, 0.0004401815880468692, 0.0004543531972979081, 0.00046221765504390373, 0.00047095746145875395, 0.00047975704235500783, 0.00047998288795606024, 0.0004876073854669107, 0.0004898623333470991, 0.0004880311854614081, 0.0004905457114667297, 0.0004884550250029423, 0.00048804004899376377, 0.0004872591865099507, 0.00048626655609621645, 0.00048283008355378825, 0.000481038778574786, 0.00047898646925015586, 0.0004768544989187464, 0.00047488180853828084, 0.00047090217181432415, 0.0004709147206901655, 0.0004672604724499776, 0.0004646318058940817, 0.0004652759212350438, 0.00046135223601473586, 0.0004594958903809152, 0.0004589160474819946, 0.00045553586927981075, 0.00045595013987117817, 0.00045372727508862236, 0.00045218450696339797, 0.0004519832612376142, 0.00045140642121399593, 0.0004504198919356848, 0.0004507219777809101, 0.00045155540724658603, 0.00045021497948625225, 0.0004529225523229354, 0.000452904642853027, 0.0004527688025905864, 0.0004575718741582239, 0.0004562370116554586, 0.000459711762898477, 0.00046316866976196314, 0.00046358528189871924, 0.0004691640529072277, 0.000472441486677997, 0.0004749105339917188, 0.0004812470586435711, 0.00048553556120933697, 0.0004882064260682709, 0.0004950568928929944, 0.0005003776507804436, 0.0005015606051946206, 0.0005115797746142639, 0.0005119536509962642, 0.000515741264698995, 0.0005227768157852184, 0.0005202267194428284, 0.0005241837729049567, 0.0005250393396321858, 0.0005212178019282349, 0.0005228400307030231, 0.0005180525137616071, 0.000512911070348371, 0.0005048565855894465, 0.0004976041757305057, 0.00048240021435513446, 0.00047228008304124494, 0.0004584682982878731, 0.00043566030006844377, 0.0004212912077795349, 0.0003962174007544697, 0.0003745435471063743, 0.00036664591442995935]

===========================================================================================
python3 delay_tomography.py 2 8 uniform 0.5 100000  succeeded with stdout:
i_max is 32
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.048583216003266004, 0.061682263412594376, 0.04473804105936764, 0.06847579652052908, 0.04696733547125806, 0.052572601587331604, 0.049391140386812846, 0.05405064834220266, 0.07108676531925824, 0.04268439827154028, 0.04289532972528166, 0.052389399862613935, 0.04688403918931511, 0.06825364646386477, 0.054068263148974734, 0.05202011609180766, 0.06731487248638975, 3.411629866247406e-24, 0.004029449295502737, 6.013710997701145e-24, 3.411629922966043e-24, 0.010287467187342227, 3.41163671591355e-24, 0.01861242736636894, 6.881069920486394e-24, 3.411629838610311e-24, 0.02253803056974879, 3.4116298613362846e-24, 0.006202022495508963, 4.848712668193667e-24, 6.627025906644663e-24, 0.014272729743119945, 3.411629646113613e-24]
1 [0.0476066864854587, 0.06512347349741568, 0.06951275565720075, 0.05829098821750794, 0.05693894454044225, 0.04155515681162132, 0.07600547211339082, 0.04937700438412902, 0.059502283400691594, 0.06565239907253294, 0.06913275544927297, 0.046782112799603204, 0.06758344152055382, 0.05500105285738128, 0.06063459583560642, 0.05522102728436921, 0.030103383881342087, 0.019612495485051507, 0.0066102551577722, -0.00020907042285887346, -2.7724138436713828e-05, 9.695734094196205e-07, 1.8302574007335467e-05, 2.652406578616569e-05, -2.187880396805848e-05, -5.2796984802173716e-06, 1.2286259973553641e-05, 5.522041999746216e-07, -1.2004077577534094e-05, -4.8816627353659725e-05, -4.1994582008170964e-06, -8.087894622360695e-06, 9.483132594837329e-05]
2 [0.0629710861329775, 0.03939913578528127, 0.07415802044187295, 0.053139032332457904, 0.07127647348120614, 0.046469979264903295, 0.0699205160569584, 0.05352261978633279, 0.06045716051544544, 0.06410499870999603, 0.04433361284023142, 0.06567442481283968, 0.05772972650255185, 0.07296438406018042, 0.05194556693075578, 0.054611953344999756, 0.03287133931188034, 0.01131062090306843, 0.01263618618221605, 0.00018589644101347494, -2.1307274082172147e-05, -2.9394676586760908e-05, 1.3546316749395581e-05, 4.057620606944497e-05, -1.8166368685229497e-06, 2.2764555943978195e-05, 4.005545012177306e-05, 2.5748451803668613e-05, 3.620427121013108e-05, -1.293606945246514e-05, 4.020934597675331e-05, 3.0470208127578016e-05, 0.0001360820369673067]

===========================================================================================
python3 delay_tomography.py 3 8 geometric 0.5 100000  failed with stdout:
b'i_max is 164\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 8 uniform 0.5 100000  failed with stdout:
b'i_max is 48\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 geometric 0.5 100000  failed with stdout:
b'i_max is 161\n0\n0.00053\n0.00054\n0.00107\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 uniform 0.5 100000  failed with stdout:
b'i_max is 64\nInvalid k.gamma[ 0 ] =  0.0  for node  2\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 44, in main\n    DelayTomographyMle.find_y(tree, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 70, in find_y\n    DelayTomographyMle.find_y(j, q, i_max, n)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 78, in find_y\n    assert(False)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 8 geometric 0.5 500000  succeeded with stdout:
i_max is 135
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1155687343987304, 0.09900947832225487, 0.08775031924017036, 0.07396813729148605, 0.06891293663307274, 0.05999898187659128, 0.05173955651645966, 0.04623059356786035, 0.04512780681392428, 0.03979428961963599, 0.034181171316351226, 0.027965985824291748, 0.023380167935191445, 0.02295310586954473, 0.02211415721706117, 0.018691121795428048, 0.0182375408827709, 0.0104408742102025, 0.014702474358820442, 0.009502684735311502, 0.011242915679855223, 0.008964353279762178, 0.006144576842425413, 0.007297451754317048, 0.0042071792134334065, 0.0064128855713802635, 0.0033192284477967533, 0.006654944523124537, 0.002051451129726342, 0.0022128501581942135, 0.0029923750843189054, 0.002027144785003405, 0.0016388015924631125, 0.0016275349340444706, 0.0011259824112378064, 0.0019613125906706723, 0.0009813108273018234, 0.00045479403396922615, 0.0009630913625965768, 0.0005335117227058717, 0.0011335929522335898, 0.000333109238612188, 0.0005234168327817, 0.0004635634153815741, 0.00045083970685176676, 0.00041497720978904624, 0.00046100829175609894, 0.0004431762828216433, 0.00039782817899776065, 0.0003976717398963095, 0.0004409346266669406, 0.0003576463200959584, 0.00043353710588627756, 0.00041418560418921495, 0.0003614134054190769, 0.00036746060255925527, 0.00040745885738630543, 0.00036360750885522754, 0.00037961835542857163, 0.00041256134756105414, 0.00034396797356114027, 0.0003939070103260472, 0.00036529106291984166, 0.0003808966886551513, 0.00035211128805991046, 0.00037933265212929123, 0.00035242546093477333, 0.00039418933103048203, 0.0003662615848479745, 0.00036522009423173253, 0.0003562953573221332, 0.00036769695112713293, 0.00037337393836788587, 0.0003546015070713184, 0.0003752885006073556, 0.00037401467122211347, 0.00036355570245503825, 0.0003516862776842191, 0.000375889948658314, 0.0003654210923400885, 0.0003651897411259345, 0.00035648184390882505, 0.0003668195350468659, 0.0003674243834441819, 0.0003621155115131366, 0.00036504553565131685, 0.0003617326815811004, 0.00036466807834439213, 0.000365323732382643, 0.000360459334533079, 0.0003621670160527657, 0.00036631342808804234, 0.0003624641944543136, 0.00036659357560581856, 0.00036251228241581757, 0.00036399315579777633, 0.0003611462973276884, 0.00036352450903078004, 0.00036327212901186753, 0.00036621240840138225, 0.0003624771937280584, 0.00036217050954804393, 0.00036350524953580497, 0.0003647226954679671, 0.0003650515356322221, 0.00036230968042490463, 0.0003638518653873082, 0.0003635897732354576, 0.0003623020415957412, 0.0003633073687015359, 0.0003633832891776433, 0.00036339696937874843, 0.00036333669201516063, 0.0003633842427861635, 0.0003633544917587157, 0.00036332098122633075, 0.00036337787048590115, 0.00036336930027599395, 0.00036336680601984934, 0.0003633415386094676, 0.0003633760417082935, 0.0003633582787269698, 0.00036335419378766493, 0.0003633567569750677, 0.00036336344148824127, 0.00036336853957284906, 0.00036333913712743903, 0.00036337567015933057, 0.00036336064524479137, 0.0003633516457431374, 0.00036336487396762844, 0.00036335761256725194, 0.00036336222226610504, 0.0003633586257805896, 0.00036335843484293546, 0.00036336318183713043]
1 [0.09932208075603971, 0.10013850103591927, 0.0890465384269898, 0.07698601462432583, 0.06662513609783209, 0.06475971118832598, 0.05611929756497532, 0.04716025732975578, 0.04407563762577133, 0.032306771524297645, 0.035069546698053476, 0.029208012003893575, 0.030558525923282013, 0.02430420237792892, 0.020337895610773683, 0.015389642811245169, 0.018087139213431608, 0.014709572683892972, 0.009328276331391949, 0.011105602295252006, 0.013418977132475623, 0.004715044843224322, 0.01055774934404565, 0.007107045990014065, 0.004370665080200814, 0.005411335658965151, 0.0031987855974711377, 0.009631213699913568, 0.0016350143627019472, 0.001250009191960572, 0.004423252251200698, 0.0033586066966265022, -2.8143117645612546e-05, 0.0014169764014545475, 0.001335166749514971, 6.493496932749803e-05, 0.0003900453207726307, 0.00010447755340006045, 0.0001779916221218383, 0.00023675567598232207, 0.0002800603576935218, 0.00031956661682687503, 0.0003508400527860061, 0.0003769660312052832, 0.00039967386218698714, 0.00041908997914755913, 0.00043454654103059403, 0.00044470116154558576, 0.0004541986637243979, 0.0004598100643397121, 0.00046560179007867767, 0.0004708031138902031, 0.00047237139045726566, 0.0004750840601032862, 0.00047295713475921554, 0.00047450273572946034, 0.0004718804032869972, 0.000471149100745385, 0.0004690847612171843, 0.0004657165160327289, 0.00046392248462033894, 0.000460615756484525, 0.00045931220301233765, 0.00045546155687979054, 0.00045448145441723313, 0.00045060757655483735, 0.0004475015279363517, 0.00044541166638815076, 0.0004431287718572931, 0.0004406393532680219, 0.0004388991748413399, 0.00043664869635781975, 0.00043516057355029854, 0.0004335386299191663, 0.0004312300778545148, 0.0004306028245398983, 0.00042831769036828326, 0.00042803236532085295, 0.0004260335510354898, 0.00042492954787745244, 0.00042400466444802537, 0.00042346771286803876, 0.0004220668283343472, 0.0004214164602874581, 0.00042114239125414643, 0.00042006970386183684, 0.00041940196216758705, 0.00041970804957537075, 0.0004185133605134524, 0.0004182721874106926, 0.0004187565287128207, 0.00041764124836294746, 0.0004184194745740566, 0.00041731947872370714, 0.0004197090783584814, 0.0004179522360744447, 0.0004199418768302465, 0.0004197769872676859, 0.00042160440327612924, 0.0004226383925638989, 0.0004232147741013304, 0.0004264994056203523, 0.00042749209557260123, 0.00043045186644895494, 0.0004335994762958304, 0.0004354967347976824, 0.00044065778074645263, 0.0004451872578456425, 0.00044587051402957055, 0.0004543147243702564, 0.00045556902485689217, 0.0004637732694155411, 0.0004662307014615131, 0.0004741863765324195, 0.0004770946254812182, 0.0004817134011099825, 0.0004889717710637881, 0.0004888621792641813, 0.0004989146603285959, 0.0004959795119783568, 0.0005008952175995637, 0.000500135051794161, 0.0005005779449742612, 0.0005010435544058734, 0.0004972605910196217, 0.0004922445782375483, 0.0004857468924817028, 0.00047589440815359044, 0.0004686780533219472, 0.0004561321102945437, 0.0004415415458162648, 0.00042426277940206953, 0.0004098332717721016, 0.00038665940320379937, 0.00036834539437648466, 0.0003902521180562862]
2 [0.09971017535747985, 0.09691039185203149, 0.08899618637302126, 0.08041102105408321, 0.07011517891438383, 0.05814711337054197, 0.05696024031105086, 0.04636469339651299, 0.04343164442433048, 0.03634017093350528, 0.03631636462212849, 0.030251118756665033, 0.02708940308505121, 0.026492378215653003, 0.01858290012028053, 0.015087964368301043, 0.017977397217189356, 0.013890700266288886, 0.012211693813195278, 0.011632667434432593, 0.011253437868524094, 0.006564471351436976, 0.009230995830300123, 0.005951961479750982, 0.005027559175001839, 0.006816366719254273, 0.002571287820778062, 0.004741510576499351, 0.006103690677982337, 0.0018051894121162142, 0.0026777562134806514, 0.0016254732660242039, 1.3089537004405735e-05, 0.003136751744361067, 0.002138678340499596, 0.0005562024819093111, 7.671490420200897e-05, 0.00012858992063015373, 0.0001770967487234808, 0.00022233788486638754, 0.000262580977688386, 0.0002976891072926965, 0.00032798057166625043, 0.00035512632684872873, 0.0003803597818115851, 0.00040174818591021756, 0.00041737346387574583, 0.00043086092575021344, 0.00044070289312130056, 0.0004498322707385281, 0.00045760580160844307, 0.0004631836755986706, 0.0004661457064076247, 0.0004687196649970892, 0.00046957264905949416, 0.0004699699883344589, 0.00046987627187032203, 0.00046839680242157774, 0.0004668834136349875, 0.0004644519117669263, 0.00046169798662104507, 0.0004594886810395952, 0.0004575765067554385, 0.0004547877306160528, 0.0004522647834247545, 0.00044929776861059366, 0.00044690977499802273, 0.0004441615469877075, 0.00044163486250539853, 0.0004393510048962929, 0.00043783079643139365, 0.00043570861972945697, 0.00043379942253085586, 0.0004319227531387305, 0.00043015464433400724, 0.00042969785635548646, 0.0004272109255324231, 0.00042653992197175803, 0.00042504018034848453, 0.0004239490571576824, 0.0004228103932963102, 0.0004223546118665995, 0.00042120484465370863, 0.00042027632514884944, 0.0004200626344703569, 0.00041907799572866094, 0.0004184006911309494, 0.0004184783054667025, 0.0004177049617975525, 0.0004171900683432631, 0.0004176542965760533, 0.00041667797872610576, 0.00041751472189070733, 0.0004161695134176777, 0.00041876751237340007, 0.00041691121720023724, 0.0004188120164470594, 0.00041882162839746817, 0.00042055902231744854, 0.0004216138952241563, 0.00042208914298767325, 0.0004254732033451556, 0.00042638172746797576, 0.0004294866730321428, 0.00043246579134460306, 0.0004344149770458421, 0.0004395810500380786, 0.00044412561635655083, 0.0004447205985068046, 0.00045320988555502974, 0.0004544753572893743, 0.0004626831909039106, 0.0004650283104247874, 0.00047304342105291284, 0.00047596779211983624, 0.000480499924523369, 0.00048777864105984525, 0.00048755324902441583, 0.000497690837679249, 0.0004945963323645042, 0.0004994790336519044, 0.00049863430093413, 0.0004990188106794549, 0.0004994033876781485, 0.0004954889687469562, 0.00049031052928854, 0.0004837043803555563, 0.0004737000913510567, 0.00046639038059204677, 0.0004537044195952435, 0.0004389629171463799, 0.0004215802055771653, 0.0004071339977397922, 0.0003839869321587087, 0.0003659288583238186, 0.00038860588749333786]

===========================================================================================
python3 delay_tomography.py 2 8 uniform 0.5 500000  succeeded with stdout:
i_max is 32
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.05835578795479792, 0.0545810934479446, 0.05877935219541589, 0.0642411219337497, 0.05144425956828946, 0.06027260302812386, 0.053015007993935825, 0.060253821790613976, 0.05798213604098959, 0.050567909603133704, 0.06533391518319204, 0.0517926997108919, 0.05302608432557019, 0.0677755123354192, 0.050805957373055655, 0.06644993923161979, 0.05892404825163979, -0.0010882948422190806, 0.010663673721850047, -0.001208718752859318, 0.000920163701031897, 0.00031551314735518124, 0.0005311919193345673, 0.0005973776474780558, -0.00013744723125637534, 0.00040923447216091276, 0.0005549368290727664, -0.0003305245632009305, 0.00417817718501414, -8.850503194474711e-05, 0.0005837038288826451, 0.00021842619284227497, 0.00021452788802262476]
1 [0.0523085713389984, 0.06611678232407403, 0.058441431650203414, 0.0554361554627801, 0.06327430048938536, 0.05118284656158191, 0.06375334277513954, 0.06000000082702712, 0.05509597017486883, 0.06377795916552167, 0.06181567009218897, 0.05592969854805164, 0.06056232496087431, 0.055944042303500086, 0.054721374679690654, 0.059051995599653524, 0.04976593228184953, 0.011426586256397704, 0.0009838154949578617, 3.224754772781569e-05, -6.192193418404893e-05, -4.957569454460705e-06, 1.0505851608271046e-05, 5.001451053849412e-05, 3.104503381644406e-05, 2.216484837104064e-05, 3.836096657243688e-05, 3.478769347625115e-05, 4.416486305649245e-05, 1.6619102005493195e-05, 2.2657612744421578e-05, 4.950011553111059e-05, 0.00010964730389864409]
2 [0.057453981618341185, 0.05830233099404826, 0.05717969578347919, 0.05606100342152409, 0.05841666016219918, 0.06348432122210428, 0.05903327281109878, 0.06235027646764123, 0.05705077713999831, 0.06205155619237853, 0.050977662641322564, 0.062095704991009124, 0.05948515166300037, 0.05990784102089708, 0.06269771691751805, 0.05585895791455857, 0.0501203519595746, 0.004422971093993257, 0.00017228119544281188, 7.827940010053524e-24, 0.001667127268910994, -6.470217396849442e-22, -2.316427006837243e-22, -1.0026601381518602e-21, 2.5465536530669666e-22, -3.1056203745274484e-22, -3.488383715083094e-22, 3.81812662751754e-22, -1.8265878403688317e-22, 5.945876861325439e-22, 0.0012103575209595695, 1.317982169388341e-22, 3.8258589368300376e-22]

===========================================================================================
python3 delay_tomography.py 3 8 geometric 0.5 500000  failed with stdout:
b'i_max is 176\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 8 uniform 0.5 500000  failed with stdout:
b'i_max is 48\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 geometric 0.5 500000  failed with stdout:
b'i_max is 192\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 156, in solvefor2\n    c1 = DelayTomographyMle.compute_c1(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 206, in compute_c1\n    assert(k.left.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 uniform 0.5 500000  failed with stdout:
b'i_max is 64\n0\n6e-05\n2.8e-05\n8.8e-05\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 2 8 geometric 0.5 1000000  succeeded with stdout:
i_max is 137
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.1076358847735668, 0.10174520461811412, 0.08844239217041686, 0.07324870890404195, 0.07009477412523674, 0.05985647604060055, 0.0547862484781346, 0.04599010511200984, 0.04247257873393946, 0.03987823821683498, 0.03460171066261097, 0.029702706446477073, 0.024740853198983448, 0.022498383730201535, 0.02134716352888538, 0.01914352124143833, 0.017232087519088564, 0.012698865182635691, 0.013841393638931703, 0.010127578170504685, 0.010789353741884652, 0.008518267144419906, 0.006483366816858068, 0.00798331613756418, 0.004334074196965062, 0.005503742738447198, 0.00457514647552669, 0.005361547199223158, 0.002799145496060985, 0.0026902829464072148, 0.00260949857451733, 0.002389988893805816, 0.001442569123980139, 0.0015163022963256693, 0.0013748711789453166, 0.0015726450211787741, 0.0006922579197267194, 0.0004981455991540325, 0.001028391354980329, 0.0005105232012168098, 0.0007876116371413241, 0.0003769501167278618, 0.0005159068236481078, 0.00047505412554475285, 0.0004501875778589613, 0.0004284456526418642, 0.00045237408163303477, 0.00041701404799890124, 0.00038742409816151877, 0.0004182138698695184, 0.00044971550684533615, 0.0003728513097331029, 0.0003963764400552396, 0.00040463839078394516, 0.00037859410327928714, 0.00036954162611062746, 0.000401754323321151, 0.0003687850456032993, 0.00037129541754312264, 0.0003929754404206698, 0.0003635397703474273, 0.00037388071886809184, 0.0003745254944474255, 0.0003853878280231349, 0.0003614761118926385, 0.0003599983085800212, 0.0003660909223015021, 0.0003790085630097627, 0.00036846509484855187, 0.0003655248416171408, 0.00037016018874747974, 0.0003533661173101392, 0.0003784706409400845, 0.00035274033447372155, 0.0003698709972685283, 0.0003684707244576362, 0.0003652641066743326, 0.0003566583126079249, 0.00036910807339633886, 0.00036674798976365846, 0.00036106306476067643, 0.0003603882214444818, 0.00036307882706074527, 0.0003659155186085469, 0.0003601572625771798, 0.0003652562040256881, 0.0003609898134921732, 0.000364710471083131, 0.0003632816152224544, 0.0003602491221891041, 0.0003619948011518947, 0.00036522280555736507, 0.0003620754117741261, 0.0003627520768917281, 0.0003615243326748943, 0.0003633556883629116, 0.00036141221027851463, 0.00036242202932425065, 0.00036184981827567847, 0.0003649188307330856, 0.00036173844197922775, 0.00036247598874908317, 0.00036200004973624097, 0.0003631086008622212, 0.00036267408193105277, 0.00036318773387845427, 0.0003615412659310914, 0.0003623612508877431, 0.00036255277775181806, 0.0003617851661439747, 0.00036297680835351356, 0.00036180763493849416, 0.0003623610011374141, 0.00036294499992851794, 0.00036189302368597697, 0.00036227009601836355, 0.0003623236767385644, 0.00036304286374998576, 0.0003617928392212064, 0.0003623143826434912, 0.00036301278063924667, 0.00036181911216398577, 0.0003623296521715824, 0.00036229778101473035, 0.00036237820232832765, 0.00036230543371708123, 0.00036233252686483153, 0.00036235187435324314, 0.0003623134467844189, 0.000362347521062555, 0.0003623195841735233, 0.00036234165961888216, 0.0003623296535037397, 0.0003623299984316592, 0.00036300353151612927, 0.00036182439798905833, 0.0003623094870179518, 0.00036232913519046336]
1 [0.10658961921445229, 0.09749979569743208, 0.08766188192763999, 0.07879246831110606, 0.06463908549326688, 0.062324515423223634, 0.05753799352041347, 0.04440967283473203, 0.04584018849940351, 0.03467756802919429, 0.031872396138329734, 0.030775221970771576, 0.027555584948611017, 0.025234837956032354, 0.021534099089583168, 0.014377754106251662, 0.01866062837322209, 0.012470067488849407, 0.011548346573461953, 0.010871246758024696, 0.012398429848111401, 0.00829478600968681, 0.009227852828939662, 0.005507353950562994, 0.004556884174525922, 0.006334270562836516, 0.00313664942701959, 0.008007065899932862, 0.0019128658085113073, 0.001842373979491894, 0.004162584566961182, 0.0011307023428025697, 0.0015229399772497452, 0.002227466877936296, 0.0009943010799714853, 0.0002930517337432348, 7.064851696103177e-05, 0.00014109491769549764, 0.0001959488993792346, 0.00024179808406368005, 0.00028263899047895025, 0.0003162886850010941, 0.0003449907753847147, 0.0003693479381713351, 0.0003918389900921703, 0.00041084502974987933, 0.00042605746323509967, 0.0004367388993730471, 0.00044589248732200277, 0.0004533369246779959, 0.0004595948064247569, 0.00046456330940967744, 0.00046705839130097937, 0.00046799828823721986, 0.0004692098914251479, 0.0004685701419231637, 0.00046749304083191226, 0.0004663993816429306, 0.0004636470068605108, 0.00046165887223795986, 0.00045853243552868174, 0.0004566708787747174, 0.00045421030718271083, 0.00045180344024130866, 0.00044901218614120053, 0.0004458549624280165, 0.00044364422112383017, 0.000440891398961084, 0.0004384248740820107, 0.0004362449955144431, 0.00043413322939278484, 0.000432264821243065, 0.0004302777789899307, 0.0004283590901236186, 0.00042707233638637207, 0.0004253326801177368, 0.0004240801223739007, 0.0004226520569177112, 0.0004212794488921721, 0.000420610508583944, 0.0004193707019630706, 0.00041840069411223837, 0.0004176821435337034, 0.0004168681794114224, 0.00041599618391212735, 0.00041545332687508774, 0.00041529069184934313, 0.00041415369810099694, 0.00041381673211109783, 0.00041387447363177844, 0.00041309748278989977, 0.00041285776275631187, 0.00041281832635409773, 0.0004127608224303873, 0.000412827063586795, 0.00041218553708968205, 0.000414358686018841, 0.00041276363049919557, 0.0004149185343305789, 0.00041449825629649424, 0.00041650923014296937, 0.00041783627163259667, 0.00041845357920615044, 0.000421261148884121, 0.0004229139504019122, 0.0004260228197990789, 0.0004285477081758324, 0.0004313483766649383, 0.00043586859756235985, 0.0004399315366131322, 0.0004425336824020071, 0.0004484589284767218, 0.000451808551042853, 0.0004600773298161926, 0.0004603790651215191, 0.00047003901144223865, 0.0004729770482206416, 0.00047705637125178773, 0.00048479969258602835, 0.00048481816180710963, 0.0004932226104545554, 0.0004922769558348066, 0.0004956926745742607, 0.0004960246700248284, 0.0004964686327610478, 0.0004960549579208123, 0.0004915931675904235, 0.00048780274479474776, 0.00047927006270294127, 0.0004728761175741812, 0.0004643463087592772, 0.0004488621421567131, 0.0004387903446583239, 0.0004172862148949476, 0.0004076134414223566, 0.00038146177546462983, 0.00036068797660371397, 0.00040101992817617136]
2 [0.1064437512180184, 0.0968915182041693, 0.08637822064384579, 0.0789881294733413, 0.07087811368808478, 0.05705414932157963, 0.05740753972627714, 0.04688636446474006, 0.04374362028134959, 0.03567773715660177, 0.034620993792517374, 0.030320218811452013, 0.026466878161446147, 0.02382529642692722, 0.020459184416371082, 0.01751433565327127, 0.016524175059394665, 0.012588942871151882, 0.013595314115263258, 0.011016809566533909, 0.011240602851761735, 0.007400484526565487, 0.008953384911157722, 0.004962551003020722, 0.005087672605179786, 0.006382156484517329, 0.00517637381048526, 0.0036116750383017172, 0.0042047655965613264, 0.0026649250049620146, 0.002991017019907655, 0.0015032768783243555, 0.0004053879982092088, 0.0023662648216833783, 0.0017894285691903672, 0.0005344335003104744, 8.054374221452404e-05, 0.00013024142891693774, 0.00017886548116926654, 0.00022480464162860658, 0.00026591200379821227, 0.00030219999508494664, 0.00033261197348656004, 0.000359243055219887, 0.00038323424992692896, 0.00040341142353528394, 0.0004196608486448555, 0.00043289538372053124, 0.0004427537829543745, 0.00045085689841347206, 0.00045741248106089634, 0.00046241856118357165, 0.0004656545801553514, 0.00046733906988287514, 0.0004682458533851575, 0.000468207046149198, 0.00046711504258464077, 0.0004658896339885482, 0.00046396552673079884, 0.0004614763756041798, 0.0004587732805698423, 0.00045656773874254295, 0.00045401549767140614, 0.0004513603444421906, 0.0004490234379114785, 0.0004460328050016549, 0.0004436494965874981, 0.00044091304006038933, 0.00043839379929171726, 0.00043625339353097446, 0.00043423223840383053, 0.0004321756725797199, 0.00043040482930906706, 0.00042845331372465576, 0.0004270269182745359, 0.00042553143875248176, 0.000424031465697982, 0.0004230221484243602, 0.0004212829540503131, 0.00042072598160106654, 0.0004195368683124199, 0.00041859971259062477, 0.0004178322677997219, 0.0004170544500216616, 0.000416213456477806, 0.0004156724563312922, 0.0004154122438731106, 0.0004142856453804029, 0.00041409905173841, 0.0004139965541880383, 0.00041328513084725984, 0.0004130899745007084, 0.0004129669389430616, 0.00041292257806680094, 0.00041297689131663396, 0.0004122993824237807, 0.0004145095359364449, 0.00041288466466933885, 0.0004149976399325774, 0.0004145808162098935, 0.0004165899690618576, 0.00041791549920759127, 0.00041851457941590657, 0.000421279858831625, 0.00042293519847735563, 0.0004260642348773614, 0.00042853823985331685, 0.0004313704519039437, 0.00043581055839751536, 0.0004399521692769273, 0.00044248207496144705, 0.0004484175424103852, 0.00045175573583069144, 0.0004600284914251929, 0.0004603220922781129, 0.000469962856078909, 0.0004729119613407264, 0.0004769787861021717, 0.0004847312096111511, 0.00048470539311563514, 0.0004931371427056439, 0.0004921571756705415, 0.0004955594145714125, 0.0004958744337168737, 0.0004963089210732992, 0.0004958659938483279, 0.0004913690478306008, 0.0004875160126727008, 0.0004789466441901786, 0.00047249883083204733, 0.00046390522488411477, 0.0004483305760273968, 0.000438175224779494, 0.00041656688298192184, 0.00040682182174835716, 0.0003805786101989991, 0.0003598295767755417, 0.0004004243991206982]

===========================================================================================
python3 delay_tomography.py 2 8 uniform 0.5 1000000  succeeded with stdout:
i_max is 32
inferred probabilities for tree Root = (3), left=(Root = (1), left=(None), right=(None)), right=(Root = (2), left=(None), right=(None))
3 [0.05867245439265632, 0.05563808824717771, 0.05853253846810977, 0.0622773415388567, 0.05380154379438749, 0.05998737147853827, 0.0571365783543137, 0.05817412488851641, 0.05779810455530667, 0.05338973608861846, 0.0628970602911371, 0.05472794483588611, 0.05793357849155956, 0.061476805293860244, 0.05715048307003773, 0.05946633680234253, 0.06140929153678774, -2.2242766143262098e-05, 0.001649224537390272, -0.00019449487849551133, 0.0012541966078943715, 0.000746609181342288, 0.0004655045434988691, 0.0007019337395094965, 0.00014544306721631334, 0.0005581425442849532, 0.000720077794654012, 0.0003307356375593124, 0.0009741006269403754, 0.0004003135993965792, 0.000590413401762734, 0.0005316994864729321, 0.0005306700922228038]
1 [0.05521020740489921, 0.06268184201971906, 0.05819113262367951, 0.05906103351491422, 0.062225336189101685, 0.05106290470746809, 0.062387285309138535, 0.05809677075365497, 0.05829303020572965, 0.061995225914764446, 0.05962538924675281, 0.05703995742423301, 0.0598206156189818, 0.0592601048713559, 0.05755898115751765, 0.05785436555304461, 0.049086335434307564, 0.008645558339205451, 0.0005317715801309627, 0.0010458517324820273, 0.00018807717803398502, -0.0001299620308735152, -6.327737758336075e-05, 3.0640792492858004e-06, 1.711675445309802e-05, 1.2499874947564705e-05, 2.8561531441454682e-05, 2.464890991030066e-05, 3.6634923772050406e-05, 1.90306786400542e-05, 1.3816626102654252e-05, 4.7566016257714906e-05, 0.00010496222972700378]
2 [0.053764440011941646, 0.061744014121765584, 0.060701360611741605, 0.057489890114680094, 0.05814229197277325, 0.060112755705359476, 0.0604225789680596, 0.05883894712040333, 0.05491747362454258, 0.06425058276420069, 0.05711190582907665, 0.05867616586617024, 0.05442622665572188, 0.06257909787385349, 0.06284896702251916, 0.058978746800539945, 0.043788968372428363, 0.00801334797598608, 0.0008981497318297574, 0.0006227412248717418, 0.0009238761804474046, -4.331764176932794e-05, -2.0415810319336425e-06, 3.706369888098117e-05, 3.426380130293218e-05, 2.8814643178993167e-05, 4.0773023921074036e-05, 3.500023316220605e-05, 4.6952080400312574e-05, 2.6743599194407458e-05, 0.00033983906364953484, 5.707104071230701e-05, 0.00011763080978087384]

===========================================================================================
python3 delay_tomography.py 3 8 geometric 0.5 1000000  failed with stdout:
b'i_max is 176\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 3 8 uniform 0.5 1000000  failed with stdout:
b'i_max is 48\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 158, in solvefor2\n    c3 = DelayTomographyMle.compute_c3(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 231, in compute_c3\n    assert(k.right.beta[i - j] > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 geometric 0.5 1000000  failed with stdout:
b'i_max is 218\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 96, in infer_delay\n    k.A[i] = DelayTomographyMle.solvefor2(k, i)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 161, in solvefor2\n    (sol1, sol2) = DelayTomographyMle.compute_quadratic_solutions(a, b, c)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 253, in compute_quadratic_solutions\n    assert(b*b - 4 * a * c > 0)\nAssertionError\n'
===========================================================================================
python3 delay_tomography.py 4 8 uniform 0.5 1000000  failed with stdout:
b'i_max is 64\n0\n3.1e-05\n3.2e-05\n6.3e-05\n'
stderr:
b'Traceback (most recent call last):\n  File "delay_tomography.py", line 48, in <module>\n    DelayTomographyMle.main(mcast_tree, q = bin_width, i_max = i_max, n = num_probes, epsilon = epsilon)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 48, in main\n    DelayTomographyMle.infer_delay(tree, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 112, in infer_delay\n    DelayTomographyMle.infer_delay(j, i, q, i_max)\n  File "/home/tem373/Desktop/virtualenvironment/Network_Tomography_Project/delay_mle.py", line 92, in infer_delay\n    assert (k.left.gamma[i] + k.right.gamma[i] - k.gamma[i] != 0)\nAssertionError\n'
===========================================================================================
